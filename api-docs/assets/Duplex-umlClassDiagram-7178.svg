<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="5066px" preserveAspectRatio="none" style="width:1656px;height:5066px;background:#00000000;" version="1.1" viewBox="0 0 1656 5066" width="1656px" zoomAndPan="magnify"><defs><filter height="300%" id="fh1gey45n0cga" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[dbb0aac09fdd9457193737fcd885dcc9]
class Duplex--><rect codeLine="4" fill="#FEFECE" filter="url(#fh1gey45n0cga)" height="1589.6543" id="Duplex" style="stroke:#A80036;stroke-width:1.5;" width="800" x="424" y="1411"/><ellipse cx="799.25" cy="1427" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M801.7231,1433.1431 Q801.1421,1433.4419 800.5029,1433.5913 Q799.8638,1433.7407 799.1582,1433.7407 Q796.6514,1433.7407 795.3315,1432.0889 Q794.0117,1430.437 794.0117,1427.3159 Q794.0117,1424.1865 795.3315,1422.5347 Q796.6514,1420.8828 799.1582,1420.8828 Q799.8638,1420.8828 800.5112,1421.0322 Q801.1587,1421.1816 801.7231,1421.4805 L801.7231,1424.2031 Q801.0923,1423.6221 800.4988,1423.3523 Q799.9053,1423.0825 799.2744,1423.0825 Q797.9297,1423.0825 797.2449,1424.1492 Q796.5601,1425.2158 796.5601,1427.3159 Q796.5601,1429.4077 797.2449,1430.4744 Q797.9297,1431.541 799.2744,1431.541 Q799.9053,1431.541 800.4988,1431.2712 Q801.0923,1431.0015 801.7231,1430.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="41" x="819.75" y="1431.5352">Duplex</text><line style="stroke:#A80036;stroke-width:1.5;" x1="425" x2="1223" y1="1443" y2="1443"/><ellipse cx="435" cy="1454" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="444" y="1457.6348">allowHalfOpen : boolean</text><ellipse cx="435" cy="1466.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="444" y="1470.5898">captureRejections : boolean</text><ellipse cx="435" cy="1479.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="444" y="1483.5449">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="435" cy="1492.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="444" y="1496.5">defaultMaxListeners : number</text><ellipse cx="435" cy="1505.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="444" y="1509.4551">destroyed : boolean</text><ellipse cx="435" cy="1518.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="444" y="1522.4102">errorMonitor : typeof errorMonitor</text><ellipse cx="435" cy="1531.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="444" y="1535.3652">readable : boolean</text><ellipse cx="435" cy="1544.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="444" y="1548.3203">readableAborted : boolean</text><ellipse cx="435" cy="1557.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="444" y="1561.2754">readableDidRead : boolean</text><ellipse cx="435" cy="1570.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="444" y="1574.2305">readableEncoding : null | BufferEncoding</text><ellipse cx="435" cy="1583.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="444" y="1587.1855">readableEnded : boolean</text><ellipse cx="435" cy="1596.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="444" y="1600.1406">readableFlowing : null | boolean</text><ellipse cx="435" cy="1609.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="444" y="1613.0957">readableHighWaterMark : number</text><ellipse cx="435" cy="1622.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="444" y="1626.0508">readableLength : number</text><ellipse cx="435" cy="1635.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="444" y="1639.0059">readableObjectMode : boolean</text><ellipse cx="435" cy="1648.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="444" y="1651.9609">writable : boolean</text><ellipse cx="435" cy="1661.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="444" y="1664.916">writableCorked : number</text><ellipse cx="435" cy="1674.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="444" y="1677.8711">writableEnded : boolean</text><ellipse cx="435" cy="1687.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="444" y="1690.8262">writableFinished : boolean</text><ellipse cx="435" cy="1700.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="444" y="1703.7813">writableHighWaterMark : number</text><ellipse cx="435" cy="1713.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="444" y="1716.7363">writableLength : number</text><ellipse cx="435" cy="1726.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="444" y="1729.6914">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="425" x2="1223" y1="1736.0117" y2="1736.0117"/><ellipse cx="435" cy="1747.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="444" y="1750.6465">addListener(event: "close", listener: Function) : Duplex</text><ellipse cx="435" cy="1759.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="444" y="1763.6016">addListener(event: "data", listener: Function) : Duplex</text><ellipse cx="435" cy="1772.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="444" y="1776.5566">addListener(event: "end", listener: Function) : Duplex</text><ellipse cx="435" cy="1785.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="444" y="1789.5117">addListener(event: "error", listener: Function) : Duplex</text><ellipse cx="435" cy="1798.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="444" y="1802.4668">addListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="435" cy="1811.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="444" y="1815.4219">addListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="435" cy="1824.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="444" y="1828.377">addListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="435" cy="1837.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="444" y="1841.332">addListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="435" cy="1850.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="444" y="1854.2871">cork() : void</text><ellipse cx="435" cy="1863.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="444" y="1867.2422">destroy(error: Error) : void</text><ellipse cx="435" cy="1876.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="444" y="1880.1973">emit(event: "close") : boolean</text><ellipse cx="435" cy="1889.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="444" y="1893.1523">emit(event: "data", chunk: any) : boolean</text><ellipse cx="435" cy="1902.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="444" y="1906.1074">emit(event: "end") : boolean</text><ellipse cx="435" cy="1915.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="444" y="1919.0625">emit(event: "error", err: Error) : boolean</text><ellipse cx="435" cy="1928.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="444" y="1932.0176">emit(event: "pause") : boolean</text><ellipse cx="435" cy="1941.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="444" y="1944.9727">emit(event: "readable") : boolean</text><ellipse cx="435" cy="1954.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="444" y="1957.9277">emit(event: "resume") : boolean</text><ellipse cx="435" cy="1967.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="444" y="1970.8828">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="435" cy="1980.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="444" y="1983.8379">end(cb: Function) : void</text><ellipse cx="435" cy="1993.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="444" y="1996.793">end(chunk: any, cb: Function) : void</text><ellipse cx="435" cy="2006.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="444" y="2009.748">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="435" cy="2019.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="444" y="2022.7031">eventNames() : (string | symbol)[]</text><ellipse cx="435" cy="2032.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="444" y="2035.6582">from(src: string | Object | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt; | Promise&lt;any&gt; | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex</text><ellipse cx="435" cy="2044.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="444" y="2048.6133">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="435" cy="2057.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="444" y="2061.5684">getMaxListeners() : number</text><ellipse cx="435" cy="2070.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="444" y="2074.5234">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="435" cy="2083.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="444" y="2087.4785">isPaused() : boolean</text><ellipse cx="435" cy="2096.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="444" y="2100.4336">listenerCount(eventName: string | symbol) : number</text><ellipse cx="435" cy="2109.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="444" y="2113.3887">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="435" cy="2122.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="444" y="2126.3438">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="435" cy="2135.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="444" y="2139.2988">off(eventName: string | symbol, listener: Function) : Duplex</text><ellipse cx="435" cy="2148.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="444" y="2152.2539">on(event: "close", listener: Function) : Duplex</text><ellipse cx="435" cy="2161.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="444" y="2165.209">on(event: "data", listener: Function) : Duplex</text><ellipse cx="435" cy="2174.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="444" y="2178.1641">on(event: "end", listener: Function) : Duplex</text><ellipse cx="435" cy="2187.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="444" y="2191.1191">on(event: "error", listener: Function) : Duplex</text><ellipse cx="435" cy="2200.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="444" y="2204.0742">on(event: "pause", listener: Function) : Duplex</text><ellipse cx="435" cy="2213.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="444" y="2217.0293">on(event: "readable", listener: Function) : Duplex</text><ellipse cx="435" cy="2226.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="444" y="2229.9844">on(event: "resume", listener: Function) : Duplex</text><ellipse cx="435" cy="2239.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="444" y="2242.9395">on(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="435" cy="2252.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="444" y="2255.8945">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="435" cy="2265.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="444" y="2268.8496">once(event: "close", listener: Function) : Duplex</text><ellipse cx="435" cy="2278.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="444" y="2281.8047">once(event: "data", listener: Function) : Duplex</text><ellipse cx="435" cy="2291.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="444" y="2294.7598">once(event: "end", listener: Function) : Duplex</text><ellipse cx="435" cy="2304.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="444" y="2307.7148">once(event: "error", listener: Function) : Duplex</text><ellipse cx="435" cy="2317.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="444" y="2320.6699">once(event: "pause", listener: Function) : Duplex</text><ellipse cx="435" cy="2329.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="444" y="2333.625">once(event: "readable", listener: Function) : Duplex</text><ellipse cx="435" cy="2342.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="444" y="2346.5801">once(event: "resume", listener: Function) : Duplex</text><ellipse cx="435" cy="2355.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="444" y="2359.5352">once(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="435" cy="2368.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="444" y="2372.4902">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="435" cy="2381.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="444" y="2385.4453">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="435" cy="2394.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="444" y="2398.4004">pause() : Duplex</text><ellipse cx="435" cy="2407.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="444" y="2411.3555">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="435" cy="2420.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="444" y="2424.3105">prependListener(event: "close", listener: Function) : Duplex</text><ellipse cx="435" cy="2433.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="444" y="2437.2656">prependListener(event: "data", listener: Function) : Duplex</text><ellipse cx="435" cy="2446.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="444" y="2450.2207">prependListener(event: "end", listener: Function) : Duplex</text><ellipse cx="435" cy="2459.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="444" y="2463.1758">prependListener(event: "error", listener: Function) : Duplex</text><ellipse cx="435" cy="2472.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="444" y="2476.1309">prependListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="435" cy="2485.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="444" y="2489.0859">prependListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="435" cy="2498.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="444" y="2502.041">prependListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="435" cy="2511.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="444" y="2514.9961">prependListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="435" cy="2524.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="444" y="2527.9512">prependOnceListener(event: "close", listener: Function) : Duplex</text><ellipse cx="435" cy="2537.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="444" y="2540.9063">prependOnceListener(event: "data", listener: Function) : Duplex</text><ellipse cx="435" cy="2550.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="444" y="2553.8613">prependOnceListener(event: "end", listener: Function) : Duplex</text><ellipse cx="435" cy="2563.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="444" y="2566.8164">prependOnceListener(event: "error", listener: Function) : Duplex</text><ellipse cx="435" cy="2576.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="444" y="2579.7715">prependOnceListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="435" cy="2589.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="444" y="2592.7266">prependOnceListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="435" cy="2602.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="444" y="2605.6816">prependOnceListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="435" cy="2615.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="444" y="2618.6367">prependOnceListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="435" cy="2627.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="444" y="2631.5918">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="435" cy="2640.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="444" y="2644.5469">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="435" cy="2653.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="444" y="2657.502">read(size: number) : any</text><ellipse cx="435" cy="2666.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="444" y="2670.457">removeAllListeners(event: string | symbol) : Duplex</text><ellipse cx="435" cy="2679.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="444" y="2683.4121">removeListener(event: "close", listener: Function) : Duplex</text><ellipse cx="435" cy="2692.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="444" y="2696.3672">removeListener(event: "data", listener: Function) : Duplex</text><ellipse cx="435" cy="2705.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="444" y="2709.3223">removeListener(event: "end", listener: Function) : Duplex</text><ellipse cx="435" cy="2718.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="444" y="2722.2773">removeListener(event: "error", listener: Function) : Duplex</text><ellipse cx="435" cy="2731.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="444" y="2735.2324">removeListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="435" cy="2744.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="444" y="2748.1875">removeListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="435" cy="2757.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="444" y="2761.1426">removeListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="435" cy="2770.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="444" y="2774.0977">removeListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="435" cy="2783.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="444" y="2787.0527">resume() : Duplex</text><ellipse cx="435" cy="2796.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="444" y="2800.0078">setDefaultEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="435" cy="2809.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="444" y="2812.9629">setEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="435" cy="2822.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="444" y="2825.918">setMaxListeners(n: number) : Duplex</text><ellipse cx="435" cy="2835.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="444" y="2838.873">uncork() : void</text><ellipse cx="435" cy="2848.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="444" y="2851.8281">unpipe(destination: WritableStream) : Duplex</text><ellipse cx="435" cy="2861.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="444" y="2864.7832">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="435" cy="2874.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="444" y="2877.7383">wrap(stream: ReadableStream) : Duplex</text><ellipse cx="435" cy="2887.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="444" y="2890.6934">write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="435" cy="2900.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="444" y="2903.6484">write(chunk: any, cb: Function) : boolean</text><ellipse cx="435" cy="2912.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="444" y="2916.6035">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="435" cy="2925.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="444" y="2929.5586">_construct(callback: Function) : void</text><ellipse cx="435" cy="2938.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="444" y="2942.5137">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="435" cy="2951.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="444" y="2955.4688">_final(callback: Function) : void</text><ellipse cx="435" cy="2964.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="444" y="2968.4238">_read(size: number) : void</text><ellipse cx="435" cy="2977.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="444" y="2981.3789">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="435" cy="2990.6992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="444" y="2994.334">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[c367c524f13260ba207946109d621584]
class Readable--><rect codeLine="125" fill="#FEFECE" filter="url(#fh1gey45n0cga)" height="1343.5078" id="Readable" style="stroke:#A80036;stroke-width:1.5;" width="637" x="169.5" y="7"/><ellipse cx="456.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M458.7231,29.1431 Q458.1421,29.4419 457.5029,29.5913 Q456.8638,29.7407 456.1582,29.7407 Q453.6514,29.7407 452.3315,28.0889 Q451.0117,26.437 451.0117,23.3159 Q451.0117,20.1865 452.3315,18.5347 Q453.6514,16.8828 456.1582,16.8828 Q456.8638,16.8828 457.5112,17.0322 Q458.1587,17.1816 458.7231,17.4805 L458.7231,20.2031 Q458.0923,19.6221 457.4988,19.3523 Q456.9053,19.0825 456.2744,19.0825 Q454.9297,19.0825 454.2449,20.1492 Q453.5601,21.2158 453.5601,23.3159 Q453.5601,25.4077 454.2449,26.4744 Q454.9297,27.541 456.2744,27.541 Q456.9053,27.541 457.4988,27.2712 Q458.0923,27.0015 458.7231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="55" x="476.75" y="27.5352">Readable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="170.5" x2="805.5" y1="39" y2="39"/><ellipse cx="180.5" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="189.5" y="53.6348">captureRejections : boolean</text><ellipse cx="180.5" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="189.5" y="66.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="180.5" cy="75.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="189.5" y="79.5449">defaultMaxListeners : number</text><ellipse cx="180.5" cy="88.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="189.5" y="92.5">destroyed : boolean</text><ellipse cx="180.5" cy="101.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="189.5" y="105.4551">errorMonitor : typeof errorMonitor</text><ellipse cx="180.5" cy="114.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="189.5" y="118.4102">readable : boolean</text><ellipse cx="180.5" cy="127.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="189.5" y="131.3652">readableAborted : boolean</text><ellipse cx="180.5" cy="140.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="189.5" y="144.3203">readableDidRead : boolean</text><ellipse cx="180.5" cy="153.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="189.5" y="157.2754">readableEncoding : null | BufferEncoding</text><ellipse cx="180.5" cy="166.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="189.5" y="170.2305">readableEnded : boolean</text><ellipse cx="180.5" cy="179.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="189.5" y="183.1855">readableFlowing : null | boolean</text><ellipse cx="180.5" cy="192.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="189.5" y="196.1406">readableHighWaterMark : number</text><ellipse cx="180.5" cy="205.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="189.5" y="209.0957">readableLength : number</text><ellipse cx="180.5" cy="218.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="189.5" y="222.0508">readableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="170.5" x2="805.5" y1="228.3711" y2="228.3711"/><ellipse cx="180.5" cy="239.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="189.5" y="243.0059">addListener(event: "close", listener: Function) : Readable</text><ellipse cx="180.5" cy="252.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="189.5" y="255.9609">addListener(event: "data", listener: Function) : Readable</text><ellipse cx="180.5" cy="265.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="189.5" y="268.916">addListener(event: "end", listener: Function) : Readable</text><ellipse cx="180.5" cy="278.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="189.5" y="281.8711">addListener(event: "error", listener: Function) : Readable</text><ellipse cx="180.5" cy="291.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="189.5" y="294.8262">addListener(event: "pause", listener: Function) : Readable</text><ellipse cx="180.5" cy="304.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="189.5" y="307.7813">addListener(event: "readable", listener: Function) : Readable</text><ellipse cx="180.5" cy="317.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="189.5" y="320.7363">addListener(event: "resume", listener: Function) : Readable</text><ellipse cx="180.5" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="189.5" y="333.6914">addListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="180.5" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="189.5" y="346.6465">destroy(error: Error) : void</text><ellipse cx="180.5" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="189.5" y="359.6016">emit(event: "close") : boolean</text><ellipse cx="180.5" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="189.5" y="372.5566">emit(event: "data", chunk: any) : boolean</text><ellipse cx="180.5" cy="381.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="189.5" y="385.5117">emit(event: "end") : boolean</text><ellipse cx="180.5" cy="394.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="189.5" y="398.4668">emit(event: "error", err: Error) : boolean</text><ellipse cx="180.5" cy="407.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="189.5" y="411.4219">emit(event: "pause") : boolean</text><ellipse cx="180.5" cy="420.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="189.5" y="424.377">emit(event: "readable") : boolean</text><ellipse cx="180.5" cy="433.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="189.5" y="437.332">emit(event: "resume") : boolean</text><ellipse cx="180.5" cy="446.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="189.5" y="450.2871">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="180.5" cy="459.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="189.5" y="463.2422">eventNames() : (string | symbol)[]</text><ellipse cx="180.5" cy="472.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="478" x="189.5" y="476.1973">from(iterable: Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;, options: ReadableOptions) : Readable</text><ellipse cx="180.5" cy="485.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="189.5" y="489.1523">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="180.5" cy="498.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="189.5" y="502.1074">getMaxListeners() : number</text><ellipse cx="180.5" cy="511.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="189.5" y="515.0625">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="180.5" cy="524.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="189.5" y="528.0176">isPaused() : boolean</text><ellipse cx="180.5" cy="537.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="189.5" y="540.9727">listenerCount(eventName: string | symbol) : number</text><ellipse cx="180.5" cy="550.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="189.5" y="553.9277">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="180.5" cy="563.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="189.5" y="566.8828">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="180.5" cy="576.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="189.5" y="579.8379">off(eventName: string | symbol, listener: Function) : Readable</text><ellipse cx="180.5" cy="589.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="189.5" y="592.793">on(event: "close", listener: Function) : Readable</text><ellipse cx="180.5" cy="602.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="189.5" y="605.748">on(event: "data", listener: Function) : Readable</text><ellipse cx="180.5" cy="615.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="189.5" y="618.7031">on(event: "end", listener: Function) : Readable</text><ellipse cx="180.5" cy="628.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="189.5" y="631.6582">on(event: "error", listener: Function) : Readable</text><ellipse cx="180.5" cy="640.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="189.5" y="644.6133">on(event: "pause", listener: Function) : Readable</text><ellipse cx="180.5" cy="653.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="189.5" y="657.5684">on(event: "readable", listener: Function) : Readable</text><ellipse cx="180.5" cy="666.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="189.5" y="670.5234">on(event: "resume", listener: Function) : Readable</text><ellipse cx="180.5" cy="679.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="189.5" y="683.4785">on(event: string | symbol, listener: Function) : Readable</text><ellipse cx="180.5" cy="692.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="189.5" y="696.4336">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="180.5" cy="705.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="189.5" y="709.3887">once(event: "close", listener: Function) : Readable</text><ellipse cx="180.5" cy="718.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="189.5" y="722.3438">once(event: "data", listener: Function) : Readable</text><ellipse cx="180.5" cy="731.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="189.5" y="735.2988">once(event: "end", listener: Function) : Readable</text><ellipse cx="180.5" cy="744.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="189.5" y="748.2539">once(event: "error", listener: Function) : Readable</text><ellipse cx="180.5" cy="757.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="189.5" y="761.209">once(event: "pause", listener: Function) : Readable</text><ellipse cx="180.5" cy="770.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="189.5" y="774.1641">once(event: "readable", listener: Function) : Readable</text><ellipse cx="180.5" cy="783.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="189.5" y="787.1191">once(event: "resume", listener: Function) : Readable</text><ellipse cx="180.5" cy="796.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="189.5" y="800.0742">once(event: string | symbol, listener: Function) : Readable</text><ellipse cx="180.5" cy="809.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="189.5" y="813.0293">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="180.5" cy="822.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="189.5" y="825.9844">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="180.5" cy="835.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="189.5" y="838.9395">pause() : Readable</text><ellipse cx="180.5" cy="848.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="189.5" y="851.8945">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="180.5" cy="861.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="189.5" y="864.8496">prependListener(event: "close", listener: Function) : Readable</text><ellipse cx="180.5" cy="874.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="189.5" y="877.8047">prependListener(event: "data", listener: Function) : Readable</text><ellipse cx="180.5" cy="887.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="189.5" y="890.7598">prependListener(event: "end", listener: Function) : Readable</text><ellipse cx="180.5" cy="900.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="189.5" y="903.7148">prependListener(event: "error", listener: Function) : Readable</text><ellipse cx="180.5" cy="913.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="189.5" y="916.6699">prependListener(event: "pause", listener: Function) : Readable</text><ellipse cx="180.5" cy="925.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="189.5" y="929.625">prependListener(event: "readable", listener: Function) : Readable</text><ellipse cx="180.5" cy="938.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="189.5" y="942.5801">prependListener(event: "resume", listener: Function) : Readable</text><ellipse cx="180.5" cy="951.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="189.5" y="955.5352">prependListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="180.5" cy="964.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="189.5" y="968.4902">prependOnceListener(event: "close", listener: Function) : Readable</text><ellipse cx="180.5" cy="977.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="189.5" y="981.4453">prependOnceListener(event: "data", listener: Function) : Readable</text><ellipse cx="180.5" cy="990.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="189.5" y="994.4004">prependOnceListener(event: "end", listener: Function) : Readable</text><ellipse cx="180.5" cy="1003.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="189.5" y="1007.3555">prependOnceListener(event: "error", listener: Function) : Readable</text><ellipse cx="180.5" cy="1016.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="189.5" y="1020.3105">prependOnceListener(event: "pause", listener: Function) : Readable</text><ellipse cx="180.5" cy="1029.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="189.5" y="1033.2656">prependOnceListener(event: "readable", listener: Function) : Readable</text><ellipse cx="180.5" cy="1042.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="189.5" y="1046.2207">prependOnceListener(event: "resume", listener: Function) : Readable</text><ellipse cx="180.5" cy="1055.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="189.5" y="1059.1758">prependOnceListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="180.5" cy="1068.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="189.5" y="1072.1309">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="180.5" cy="1081.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="189.5" y="1085.0859">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="180.5" cy="1094.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="189.5" y="1098.041">read(size: number) : any</text><ellipse cx="180.5" cy="1107.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="189.5" y="1110.9961">removeAllListeners(event: string | symbol) : Readable</text><ellipse cx="180.5" cy="1120.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="189.5" y="1123.9512">removeListener(event: "close", listener: Function) : Readable</text><ellipse cx="180.5" cy="1133.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="189.5" y="1136.9063">removeListener(event: "data", listener: Function) : Readable</text><ellipse cx="180.5" cy="1146.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="189.5" y="1149.8613">removeListener(event: "end", listener: Function) : Readable</text><ellipse cx="180.5" cy="1159.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="189.5" y="1162.8164">removeListener(event: "error", listener: Function) : Readable</text><ellipse cx="180.5" cy="1172.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="189.5" y="1175.7715">removeListener(event: "pause", listener: Function) : Readable</text><ellipse cx="180.5" cy="1185.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="189.5" y="1188.7266">removeListener(event: "readable", listener: Function) : Readable</text><ellipse cx="180.5" cy="1198.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="189.5" y="1201.6816">removeListener(event: "resume", listener: Function) : Readable</text><ellipse cx="180.5" cy="1211.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="189.5" y="1214.6367">removeListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="180.5" cy="1223.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="189.5" y="1227.5918">resume() : Readable</text><ellipse cx="180.5" cy="1236.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="189.5" y="1240.5469">setEncoding(encoding: BufferEncoding) : Readable</text><ellipse cx="180.5" cy="1249.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="189.5" y="1253.502">setMaxListeners(n: number) : Readable</text><ellipse cx="180.5" cy="1262.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="189.5" y="1266.457">unpipe(destination: WritableStream) : Readable</text><ellipse cx="180.5" cy="1275.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="189.5" y="1279.4121">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="180.5" cy="1288.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="189.5" y="1292.3672">wrap(stream: ReadableStream) : Readable</text><ellipse cx="180.5" cy="1301.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="189.5" y="1305.3223">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="180.5" cy="1314.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="189.5" y="1318.2773">_construct(callback: Function) : void</text><ellipse cx="180.5" cy="1327.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="189.5" y="1331.2324">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="180.5" cy="1340.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="189.5" y="1344.1875">_read(size: number) : void</text><!--MD5=[93f77cf1cd71031e7728e23fe162cbe1]
class Writable--><rect codeLine="228" fill="#FEFECE" filter="url(#fh1gey45n0cga)" height="1201.002" id="Writable" style="stroke:#A80036;stroke-width:1.5;" width="637" x="841.5" y="78.5"/><ellipse cx="1132.25" cy="94.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1134.7231,100.6431 Q1134.1421,100.9419 1133.5029,101.0913 Q1132.8638,101.2407 1132.1582,101.2407 Q1129.6514,101.2407 1128.3315,99.5889 Q1127.0117,97.937 1127.0117,94.8159 Q1127.0117,91.6865 1128.3315,90.0347 Q1129.6514,88.3828 1132.1582,88.3828 Q1132.8638,88.3828 1133.5112,88.5322 Q1134.1587,88.6816 1134.7231,88.9805 L1134.7231,91.7031 Q1134.0923,91.1221 1133.4988,90.8523 Q1132.9053,90.5825 1132.2744,90.5825 Q1130.9297,90.5825 1130.2449,91.6492 Q1129.5601,92.7158 1129.5601,94.8159 Q1129.5601,96.9077 1130.2449,97.9744 Q1130.9297,99.041 1132.2744,99.041 Q1132.9053,99.041 1133.4988,98.7712 Q1134.0923,98.5015 1134.7231,97.9204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="47" x="1152.75" y="99.0352">Writable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="842.5" x2="1477.5" y1="110.5" y2="110.5"/><ellipse cx="852.5" cy="121.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="861.5" y="125.1348">captureRejections : boolean</text><ellipse cx="852.5" cy="134.4551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="861.5" y="138.0898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="852.5" cy="147.4102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="861.5" y="151.0449">defaultMaxListeners : number</text><ellipse cx="852.5" cy="160.3652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="861.5" y="164">destroyed : boolean</text><ellipse cx="852.5" cy="173.3203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="861.5" y="176.9551">errorMonitor : typeof errorMonitor</text><ellipse cx="852.5" cy="186.2754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="861.5" y="189.9102">writable : boolean</text><ellipse cx="852.5" cy="199.2305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="861.5" y="202.8652">writableCorked : number</text><ellipse cx="852.5" cy="212.1855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="861.5" y="215.8203">writableEnded : boolean</text><ellipse cx="852.5" cy="225.1406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="861.5" y="228.7754">writableFinished : boolean</text><ellipse cx="852.5" cy="238.0957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="861.5" y="241.7305">writableHighWaterMark : number</text><ellipse cx="852.5" cy="251.0508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="861.5" y="254.6855">writableLength : number</text><ellipse cx="852.5" cy="264.0059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="861.5" y="267.6406">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="842.5" x2="1477.5" y1="273.9609" y2="273.9609"/><ellipse cx="852.5" cy="284.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="861.5" y="288.5957">addListener(event: "close", listener: Function) : Writable</text><ellipse cx="852.5" cy="297.916" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="861.5" y="301.5508">addListener(event: "drain", listener: Function) : Writable</text><ellipse cx="852.5" cy="310.8711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="861.5" y="314.5059">addListener(event: "error", listener: Function) : Writable</text><ellipse cx="852.5" cy="323.8262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="295" x="861.5" y="327.4609">addListener(event: "finish", listener: Function) : Writable</text><ellipse cx="852.5" cy="336.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="861.5" y="340.416">addListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="349.7363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="861.5" y="353.3711">addListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="362.6914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="861.5" y="366.3262">addListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="852.5" cy="375.6465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="861.5" y="379.2813">cork() : void</text><ellipse cx="852.5" cy="388.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="861.5" y="392.2363">destroy(error: Error) : void</text><ellipse cx="852.5" cy="401.5566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="861.5" y="405.1914">emit(event: "close") : boolean</text><ellipse cx="852.5" cy="414.5117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="861.5" y="418.1465">emit(event: "drain") : boolean</text><ellipse cx="852.5" cy="427.4668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="861.5" y="431.1016">emit(event: "error", err: Error) : boolean</text><ellipse cx="852.5" cy="440.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="861.5" y="444.0566">emit(event: "finish") : boolean</text><ellipse cx="852.5" cy="453.377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="861.5" y="457.0117">emit(event: "pipe", src: Readable) : boolean</text><ellipse cx="852.5" cy="466.332" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="861.5" y="469.9668">emit(event: "unpipe", src: Readable) : boolean</text><ellipse cx="852.5" cy="479.2871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="861.5" y="482.9219">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="852.5" cy="492.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="861.5" y="495.877">end(cb: Function) : void</text><ellipse cx="852.5" cy="505.1973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="861.5" y="508.832">end(chunk: any, cb: Function) : void</text><ellipse cx="852.5" cy="518.1523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="861.5" y="521.7871">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="852.5" cy="531.1074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="861.5" y="534.7422">eventNames() : (string | symbol)[]</text><ellipse cx="852.5" cy="544.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="861.5" y="547.6973">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="852.5" cy="557.0176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="861.5" y="560.6523">getMaxListeners() : number</text><ellipse cx="852.5" cy="569.9727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="861.5" y="573.6074">listenerCount(eventName: string | symbol) : number</text><ellipse cx="852.5" cy="582.9277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="861.5" y="586.5625">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="852.5" cy="595.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="861.5" y="599.5176">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="852.5" cy="608.8379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="861.5" y="612.4727">off(eventName: string | symbol, listener: Function) : Writable</text><ellipse cx="852.5" cy="621.793" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="861.5" y="625.4277">on(event: "close", listener: Function) : Writable</text><ellipse cx="852.5" cy="634.748" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="861.5" y="638.3828">on(event: "drain", listener: Function) : Writable</text><ellipse cx="852.5" cy="647.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="861.5" y="651.3379">on(event: "error", listener: Function) : Writable</text><ellipse cx="852.5" cy="660.6582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="861.5" y="664.293">on(event: "finish", listener: Function) : Writable</text><ellipse cx="852.5" cy="673.6133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="861.5" y="677.248">on(event: "pipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="686.5684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="861.5" y="690.2031">on(event: "unpipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="699.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="861.5" y="703.1582">on(event: string | symbol, listener: Function) : Writable</text><ellipse cx="852.5" cy="712.4785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="861.5" y="716.1133">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="852.5" cy="725.4336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="861.5" y="729.0684">once(event: "close", listener: Function) : Writable</text><ellipse cx="852.5" cy="738.3887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="861.5" y="742.0234">once(event: "drain", listener: Function) : Writable</text><ellipse cx="852.5" cy="751.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="861.5" y="754.9785">once(event: "error", listener: Function) : Writable</text><ellipse cx="852.5" cy="764.2988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="861.5" y="767.9336">once(event: "finish", listener: Function) : Writable</text><ellipse cx="852.5" cy="777.2539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="861.5" y="780.8887">once(event: "pipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="790.209" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="861.5" y="793.8438">once(event: "unpipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="803.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="861.5" y="806.7988">once(event: string | symbol, listener: Function) : Writable</text><ellipse cx="852.5" cy="816.1191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="861.5" y="819.7539">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="852.5" cy="829.0742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="861.5" y="832.709">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="852.5" cy="842.0293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="861.5" y="845.6641">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="852.5" cy="854.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="861.5" y="858.6191">prependListener(event: "close", listener: Function) : Writable</text><ellipse cx="852.5" cy="867.9395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="861.5" y="871.5742">prependListener(event: "drain", listener: Function) : Writable</text><ellipse cx="852.5" cy="880.8945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="861.5" y="884.5293">prependListener(event: "error", listener: Function) : Writable</text><ellipse cx="852.5" cy="893.8496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="861.5" y="897.4844">prependListener(event: "finish", listener: Function) : Writable</text><ellipse cx="852.5" cy="906.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="861.5" y="910.4395">prependListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="919.7598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="861.5" y="923.3945">prependListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="932.7148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="861.5" y="936.3496">prependListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="852.5" cy="945.6699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="861.5" y="949.3047">prependOnceListener(event: "close", listener: Function) : Writable</text><ellipse cx="852.5" cy="958.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="861.5" y="962.2598">prependOnceListener(event: "drain", listener: Function) : Writable</text><ellipse cx="852.5" cy="971.5801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="861.5" y="975.2148">prependOnceListener(event: "error", listener: Function) : Writable</text><ellipse cx="852.5" cy="984.5352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="348" x="861.5" y="988.1699">prependOnceListener(event: "finish", listener: Function) : Writable</text><ellipse cx="852.5" cy="997.4902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="861.5" y="1001.125">prependOnceListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="1010.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="861.5" y="1014.0801">prependOnceListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="1023.4004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="861.5" y="1027.0352">prependOnceListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="852.5" cy="1036.3555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="861.5" y="1039.9902">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="852.5" cy="1049.3105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="861.5" y="1052.9453">removeAllListeners(event: string | symbol) : Writable</text><ellipse cx="852.5" cy="1062.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="861.5" y="1065.9004">removeListener(event: "close", listener: Function) : Writable</text><ellipse cx="852.5" cy="1075.2207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="861.5" y="1078.8555">removeListener(event: "drain", listener: Function) : Writable</text><ellipse cx="852.5" cy="1088.1758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="861.5" y="1091.8105">removeListener(event: "error", listener: Function) : Writable</text><ellipse cx="852.5" cy="1101.1309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="861.5" y="1104.7656">removeListener(event: "finish", listener: Function) : Writable</text><ellipse cx="852.5" cy="1114.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="861.5" y="1117.7207">removeListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="1127.041" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="861.5" y="1130.6758">removeListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="1139.9961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="861.5" y="1143.6309">removeListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="852.5" cy="1152.9512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="861.5" y="1156.5859">setDefaultEncoding(encoding: BufferEncoding) : Writable</text><ellipse cx="852.5" cy="1165.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="861.5" y="1169.541">setMaxListeners(n: number) : Writable</text><ellipse cx="852.5" cy="1178.8613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="861.5" y="1182.4961">uncork() : void</text><ellipse cx="852.5" cy="1191.8164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="861.5" y="1195.4512">write(chunk: any, callback: Function) : boolean</text><ellipse cx="852.5" cy="1204.7715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="861.5" y="1208.4063">write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean</text><ellipse cx="852.5" cy="1217.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="861.5" y="1221.3613">_construct(callback: Function) : void</text><ellipse cx="852.5" cy="1230.6816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="861.5" y="1234.3164">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="852.5" cy="1243.6367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="861.5" y="1247.2715">_final(callback: Function) : void</text><ellipse cx="852.5" cy="1256.5918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="861.5" y="1260.2266">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="852.5" cy="1269.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="861.5" y="1273.1816">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[8f07f51d887e64eddc161f608ee0ddb0]
class Socket--><rect codeLine="320" fill="#FEFECE" filter="url(#fh1gey45n0cga)" height="1991.2617" id="Socket" style="stroke:#A80036;stroke-width:1.5;" width="800" x="7" y="3061"/><ellipse cx="384.25" cy="3077" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M386.7231,3083.1431 Q386.1421,3083.4419 385.5029,3083.5913 Q384.8638,3083.7407 384.1582,3083.7407 Q381.6514,3083.7407 380.3315,3082.0889 Q379.0117,3080.437 379.0117,3077.3159 Q379.0117,3074.1865 380.3315,3072.5347 Q381.6514,3070.8828 384.1582,3070.8828 Q384.8638,3070.8828 385.5112,3071.0322 Q386.1587,3071.1816 386.7231,3071.4805 L386.7231,3074.2031 Q386.0923,3073.6221 385.4988,3073.3523 Q384.9053,3073.0825 384.2744,3073.0825 Q382.9297,3073.0825 382.2449,3074.1492 Q381.5601,3075.2158 381.5601,3077.3159 Q381.5601,3079.4077 382.2449,3080.4744 Q382.9297,3081.541 384.2744,3081.541 Q384.9053,3081.541 385.4988,3081.2712 Q386.0923,3081.0015 386.7231,3080.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="37" x="404.75" y="3081.5352">Socket</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="806" y1="3093" y2="3093"/><ellipse cx="18" cy="3104" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="3107.6348">allowHalfOpen : boolean</text><ellipse cx="18" cy="3116.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="27" y="3120.5898">bufferSize : number</text><ellipse cx="18" cy="3129.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="3133.5449">bytesRead : number</text><ellipse cx="18" cy="3142.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="27" y="3146.5">bytesWritten : number</text><ellipse cx="18" cy="3155.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="3159.4551">captureRejections : boolean</text><ellipse cx="18" cy="3168.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="3172.4102">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="3181.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="27" y="3185.3652">connecting : boolean</text><ellipse cx="18" cy="3194.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="3198.3203">defaultMaxListeners : number</text><ellipse cx="18" cy="3207.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="3211.2754">destroyed : boolean</text><ellipse cx="18" cy="3220.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="3224.2305">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="3233.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="27" y="3237.1855">localAddress : string</text><ellipse cx="18" cy="3246.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="3250.1406">localPort : number</text><ellipse cx="18" cy="3259.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="3263.0957">readable : boolean</text><ellipse cx="18" cy="3272.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="3276.0508">readableAborted : boolean</text><ellipse cx="18" cy="3285.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="3289.0059">readableDidRead : boolean</text><ellipse cx="18" cy="3298.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="27" y="3301.9609">readableEncoding : null | BufferEncoding</text><ellipse cx="18" cy="3311.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="27" y="3314.916">readableEnded : boolean</text><ellipse cx="18" cy="3324.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="3327.8711">readableFlowing : null | boolean</text><ellipse cx="18" cy="3337.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="27" y="3340.8262">readableHighWaterMark : number</text><ellipse cx="18" cy="3350.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="3353.7813">readableLength : number</text><ellipse cx="18" cy="3363.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="27" y="3366.7363">readableObjectMode : boolean</text><ellipse cx="18" cy="3376.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="27" y="3379.6914">remoteAddress : string</text><ellipse cx="18" cy="3389.0117" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="27" y="3392.6465">remoteFamily : string</text><ellipse cx="18" cy="3401.9668" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="27" y="3405.6016">remotePort : number</text><ellipse cx="18" cy="3414.9219" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="3418.5566">writable : boolean</text><ellipse cx="18" cy="3427.877" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="27" y="3431.5117">writableCorked : number</text><ellipse cx="18" cy="3440.832" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="27" y="3444.4668">writableEnded : boolean</text><ellipse cx="18" cy="3453.7871" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="3457.4219">writableFinished : boolean</text><ellipse cx="18" cy="3466.7422" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="27" y="3470.377">writableHighWaterMark : number</text><ellipse cx="18" cy="3479.6973" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="27" y="3483.332">writableLength : number</text><ellipse cx="18" cy="3492.6523" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="3496.2871">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="806" y1="3502.6074" y2="3502.6074"/><ellipse cx="18" cy="3513.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="3517.2422">addListener(event: string, listener: Function) : Socket</text><ellipse cx="18" cy="3526.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="27" y="3530.1973">addListener(event: "close", listener: Function) : Socket</text><ellipse cx="18" cy="3539.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="27" y="3543.1523">addListener(event: "connect", listener: Function) : Socket</text><ellipse cx="18" cy="3552.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="27" y="3556.1074">addListener(event: "data", listener: Function) : Socket</text><ellipse cx="18" cy="3565.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="27" y="3569.0625">addListener(event: "drain", listener: Function) : Socket</text><ellipse cx="18" cy="3578.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="27" y="3582.0176">addListener(event: "end", listener: Function) : Socket</text><ellipse cx="18" cy="3591.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="27" y="3594.9727">addListener(event: "error", listener: Function) : Socket</text><ellipse cx="18" cy="3604.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="27" y="3607.9277">addListener(event: "lookup", listener: Function) : Socket</text><ellipse cx="18" cy="3617.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="27" y="3620.8828">addListener(event: "ready", listener: Function) : Socket</text><ellipse cx="18" cy="3630.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="3633.8379">addListener(event: "timeout", listener: Function) : Socket</text><ellipse cx="18" cy="3643.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="171" x="27" y="3646.793">address() : Object | AddressInfo</text><ellipse cx="18" cy="3656.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="410" x="27" y="3659.748">connect(options: SocketConnectOpts, connectionListener: Function) : Socket</text><ellipse cx="18" cy="3669.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="27" y="3672.7031">connect(port: number, host: string, connectionListener: Function) : Socket</text><ellipse cx="18" cy="3682.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="328" x="27" y="3685.6582">connect(port: number, connectionListener: Function) : Socket</text><ellipse cx="18" cy="3694.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="27" y="3698.6133">connect(path: string, connectionListener: Function) : Socket</text><ellipse cx="18" cy="3707.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="27" y="3711.5684">cork() : void</text><ellipse cx="18" cy="3720.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="27" y="3724.5234">destroy(error: Error) : void</text><ellipse cx="18" cy="3733.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="3737.4785">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="3746.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="27" y="3750.4336">emit(event: "close", hadError: boolean) : boolean</text><ellipse cx="18" cy="3759.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="3763.3887">emit(event: "connect") : boolean</text><ellipse cx="18" cy="3772.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="27" y="3776.3438">emit(event: "data", data: Buffer) : boolean</text><ellipse cx="18" cy="3785.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="3789.2988">emit(event: "drain") : boolean</text><ellipse cx="18" cy="3798.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="3802.2539">emit(event: "end") : boolean</text><ellipse cx="18" cy="3811.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="3815.209">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="3824.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="502" x="27" y="3828.1641">emit(event: "lookup", err: Error, address: string, family: string | number, host: string) : boolean</text><ellipse cx="18" cy="3837.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="27" y="3841.1191">emit(event: "ready") : boolean</text><ellipse cx="18" cy="3850.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="27" y="3854.0742">emit(event: "timeout") : boolean</text><ellipse cx="18" cy="3863.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="27" y="3867.0293">end(callback: Function) : void</text><ellipse cx="18" cy="3876.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="27" y="3879.9844">end(buffer: string | Uint8Array, callback: Function) : void</text><ellipse cx="18" cy="3889.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="428" x="27" y="3892.9395">end(str: string | Uint8Array, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="18" cy="3902.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="3905.8945">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="3915.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="27" y="3918.8496">from(src: string | Object | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt; | Promise&lt;any&gt; | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex</text><ellipse cx="18" cy="3928.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="3931.8047">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="3941.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="3944.7598">getMaxListeners() : number</text><ellipse cx="18" cy="3954.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="27" y="3957.7148">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="18" cy="3967.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="3970.6699">isPaused() : boolean</text><ellipse cx="18" cy="3979.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="3983.625">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="3992.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="3996.5801">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="4005.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="4009.5352">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="4018.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="27" y="4022.4902">off(eventName: string | symbol, listener: Function) : Socket</text><ellipse cx="18" cy="4031.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="232" x="27" y="4035.4453">on(event: string, listener: Function) : Socket</text><ellipse cx="18" cy="4044.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="236" x="27" y="4048.4004">on(event: "close", listener: Function) : Socket</text><ellipse cx="18" cy="4057.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="27" y="4061.3555">on(event: "connect", listener: Function) : Socket</text><ellipse cx="18" cy="4070.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="27" y="4074.3105">on(event: "data", listener: Function) : Socket</text><ellipse cx="18" cy="4083.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="236" x="27" y="4087.2656">on(event: "drain", listener: Function) : Socket</text><ellipse cx="18" cy="4096.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="228" x="27" y="4100.2207">on(event: "end", listener: Function) : Socket</text><ellipse cx="18" cy="4109.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="236" x="27" y="4113.1758">on(event: "error", listener: Function) : Socket</text><ellipse cx="18" cy="4122.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="27" y="4126.1309">on(event: "lookup", listener: Function) : Socket</text><ellipse cx="18" cy="4135.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="27" y="4139.0859">on(event: "ready", listener: Function) : Socket</text><ellipse cx="18" cy="4148.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="27" y="4152.041">on(event: "timeout", listener: Function) : Socket</text><ellipse cx="18" cy="4161.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="4164.9961">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="4174.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="27" y="4177.9512">once(event: string, listener: Function) : Socket</text><ellipse cx="18" cy="4187.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="27" y="4190.9063">once(event: "close", listener: Function) : Socket</text><ellipse cx="18" cy="4200.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="27" y="4203.8613">once(event: "connect", listener: Function) : Socket</text><ellipse cx="18" cy="4213.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="27" y="4216.8164">once(event: "data", listener: Function) : Socket</text><ellipse cx="18" cy="4226.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="27" y="4229.7715">once(event: "drain", listener: Function) : Socket</text><ellipse cx="18" cy="4239.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="27" y="4242.7266">once(event: "end", listener: Function) : Socket</text><ellipse cx="18" cy="4252.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="27" y="4255.6816">once(event: "error", listener: Function) : Socket</text><ellipse cx="18" cy="4265.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="27" y="4268.6367">once(event: "lookup", listener: Function) : Socket</text><ellipse cx="18" cy="4277.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="27" y="4281.5918">once(event: "ready", listener: Function) : Socket</text><ellipse cx="18" cy="4290.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="27" y="4294.5469">once(event: "timeout", listener: Function) : Socket</text><ellipse cx="18" cy="4303.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="4307.502">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="4316.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="4320.457">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="4329.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="27" y="4333.4121">pause() : Socket</text><ellipse cx="18" cy="4342.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="4346.3672">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="4355.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="27" y="4359.3223">prependListener(event: string, listener: Function) : Socket</text><ellipse cx="18" cy="4368.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="4372.2773">prependListener(event: "close", listener: Function) : Socket</text><ellipse cx="18" cy="4381.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="4385.2324">prependListener(event: "connect", listener: Function) : Socket</text><ellipse cx="18" cy="4394.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="27" y="4398.1875">prependListener(event: "data", listener: Function) : Socket</text><ellipse cx="18" cy="4407.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="4411.1426">prependListener(event: "drain", listener: Function) : Socket</text><ellipse cx="18" cy="4420.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="27" y="4424.0977">prependListener(event: "end", listener: Function) : Socket</text><ellipse cx="18" cy="4433.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="4437.0527">prependListener(event: "error", listener: Function) : Socket</text><ellipse cx="18" cy="4446.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="27" y="4450.0078">prependListener(event: "lookup", listener: Function) : Socket</text><ellipse cx="18" cy="4459.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="27" y="4462.9629">prependListener(event: "ready", listener: Function) : Socket</text><ellipse cx="18" cy="4472.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="27" y="4475.918">prependListener(event: "timeout", listener: Function) : Socket</text><ellipse cx="18" cy="4485.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="27" y="4488.873">prependOnceListener(event: string, listener: Function) : Socket</text><ellipse cx="18" cy="4498.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="27" y="4501.8281">prependOnceListener(event: "close", listener: Function) : Socket</text><ellipse cx="18" cy="4511.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="27" y="4514.7832">prependOnceListener(event: "connect", listener: Function) : Socket</text><ellipse cx="18" cy="4524.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="27" y="4527.7383">prependOnceListener(event: "data", listener: Function) : Socket</text><ellipse cx="18" cy="4537.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="27" y="4540.6934">prependOnceListener(event: "drain", listener: Function) : Socket</text><ellipse cx="18" cy="4550.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="27" y="4553.6484">prependOnceListener(event: "end", listener: Function) : Socket</text><ellipse cx="18" cy="4562.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="27" y="4566.6035">prependOnceListener(event: "error", listener: Function) : Socket</text><ellipse cx="18" cy="4575.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="347" x="27" y="4579.5586">prependOnceListener(event: "lookup", listener: Function) : Socket</text><ellipse cx="18" cy="4588.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="340" x="27" y="4592.5137">prependOnceListener(event: "ready", listener: Function) : Socket</text><ellipse cx="18" cy="4601.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="27" y="4605.4688">prependOnceListener(event: "timeout", listener: Function) : Socket</text><ellipse cx="18" cy="4614.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="4618.4238">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="18" cy="4627.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="4631.3789">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="4640.6992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="4644.334">read(size: number) : any</text><ellipse cx="18" cy="4653.6543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="27" y="4657.2891">ref() : Socket</text><ellipse cx="18" cy="4666.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="271" x="27" y="4670.2441">removeAllListeners(event: string | symbol) : Socket</text><ellipse cx="18" cy="4679.5645" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="27" y="4683.1992">removeListener(event: "close", listener: Function) : Socket</text><ellipse cx="18" cy="4692.5195" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="27" y="4696.1543">removeListener(event: "data", listener: Function) : Socket</text><ellipse cx="18" cy="4705.4746" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="27" y="4709.1094">removeListener(event: "end", listener: Function) : Socket</text><ellipse cx="18" cy="4718.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="27" y="4722.0645">removeListener(event: "error", listener: Function) : Socket</text><ellipse cx="18" cy="4731.3848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="27" y="4735.0195">removeListener(event: "pause", listener: Function) : Socket</text><ellipse cx="18" cy="4744.3398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="27" y="4747.9746">removeListener(event: "readable", listener: Function) : Socket</text><ellipse cx="18" cy="4757.2949" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="27" y="4760.9297">removeListener(event: "resume", listener: Function) : Socket</text><ellipse cx="18" cy="4770.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="350" x="27" y="4773.8848">removeListener(event: string | symbol, listener: Function) : Socket</text><ellipse cx="18" cy="4783.2051" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="27" y="4786.8398">resume() : Socket</text><ellipse cx="18" cy="4796.1602" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="27" y="4799.7949">setDefaultEncoding(encoding: BufferEncoding) : Socket</text><ellipse cx="18" cy="4809.1152" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="27" y="4812.75">setEncoding(encoding: BufferEncoding) : Socket</text><ellipse cx="18" cy="4822.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="27" y="4825.7051">setKeepAlive(enable: boolean, initialDelay: number) : Socket</text><ellipse cx="18" cy="4835.0254" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="4838.6602">setMaxListeners(n: number) : Socket</text><ellipse cx="18" cy="4847.9805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="204" x="27" y="4851.6152">setNoDelay(noDelay: boolean) : Socket</text><ellipse cx="18" cy="4860.9355" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="27" y="4864.5703">setTimeout(timeout: number, callback: Function) : Socket</text><ellipse cx="18" cy="4873.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="27" y="4877.5254">uncork() : void</text><ellipse cx="18" cy="4886.8457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="235" x="27" y="4890.4805">unpipe(destination: WritableStream) : Socket</text><ellipse cx="18" cy="4899.8008" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="81" x="27" y="4903.4355">unref() : Socket</text><ellipse cx="18" cy="4912.7559" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="27" y="4916.3906">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="18" cy="4925.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="206" x="27" y="4929.3457">wrap(stream: ReadableStream) : Socket</text><ellipse cx="18" cy="4938.666" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="4942.3008">write(buffer: string | Uint8Array, cb: Function) : boolean</text><ellipse cx="18" cy="4951.6211" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="424" x="27" y="4955.2559">write(str: string | Uint8Array, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="18" cy="4964.5762" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="4968.2109">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="4977.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="4981.166">_construct(callback: Function) : void</text><ellipse cx="18" cy="4990.4863" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="4994.1211">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="5003.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="27" y="5007.0762">_final(callback: Function) : void</text><ellipse cx="18" cy="5016.3965" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="5020.0313">_read(size: number) : void</text><ellipse cx="18" cy="5029.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="27" y="5032.9863">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="18" cy="5042.3066" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="27" y="5045.9414">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[004b1d6c4ca8aad4ba8b586a335ed4f3]
class Transform--><rect codeLine="473" fill="#FEFECE" filter="url(#fh1gey45n0cga)" height="1615.5645" id="Transform" style="stroke:#A80036;stroke-width:1.5;" width="800" x="842" y="3248.5"/><ellipse cx="1207.75" cy="3264.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1210.2231,3270.6431 Q1209.6421,3270.9419 1209.0029,3271.0913 Q1208.3638,3271.2407 1207.6582,3271.2407 Q1205.1514,3271.2407 1203.8315,3269.5889 Q1202.5117,3267.937 1202.5117,3264.8159 Q1202.5117,3261.6865 1203.8315,3260.0347 Q1205.1514,3258.3828 1207.6582,3258.3828 Q1208.3638,3258.3828 1209.0112,3258.5322 Q1209.6587,3258.6816 1210.2231,3258.9805 L1210.2231,3261.7031 Q1209.5923,3261.1221 1208.9988,3260.8523 Q1208.4053,3260.5825 1207.7744,3260.5825 Q1206.4297,3260.5825 1205.7449,3261.6492 Q1205.0601,3262.7158 1205.0601,3264.8159 Q1205.0601,3266.9077 1205.7449,3267.9744 Q1206.4297,3269.041 1207.7744,3269.041 Q1208.4053,3269.041 1208.9988,3268.7712 Q1209.5923,3268.5015 1210.2231,3267.9204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="60" x="1228.25" y="3269.0352">Transform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="843" x2="1641" y1="3280.5" y2="3280.5"/><ellipse cx="853" cy="3291.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="862" y="3295.1348">allowHalfOpen : boolean</text><ellipse cx="853" cy="3304.4551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="862" y="3308.0898">captureRejections : boolean</text><ellipse cx="853" cy="3317.4102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="862" y="3321.0449">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="853" cy="3330.3652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="862" y="3334">defaultMaxListeners : number</text><ellipse cx="853" cy="3343.3203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="862" y="3346.9551">destroyed : boolean</text><ellipse cx="853" cy="3356.2754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="862" y="3359.9102">errorMonitor : typeof errorMonitor</text><ellipse cx="853" cy="3369.2305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="862" y="3372.8652">readable : boolean</text><ellipse cx="853" cy="3382.1855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="862" y="3385.8203">readableAborted : boolean</text><ellipse cx="853" cy="3395.1406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="862" y="3398.7754">readableDidRead : boolean</text><ellipse cx="853" cy="3408.0957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="862" y="3411.7305">readableEncoding : null | BufferEncoding</text><ellipse cx="853" cy="3421.0508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="862" y="3424.6855">readableEnded : boolean</text><ellipse cx="853" cy="3434.0059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="862" y="3437.6406">readableFlowing : null | boolean</text><ellipse cx="853" cy="3446.9609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="862" y="3450.5957">readableHighWaterMark : number</text><ellipse cx="853" cy="3459.916" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="862" y="3463.5508">readableLength : number</text><ellipse cx="853" cy="3472.8711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="862" y="3476.5059">readableObjectMode : boolean</text><ellipse cx="853" cy="3485.8262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="862" y="3489.4609">writable : boolean</text><ellipse cx="853" cy="3498.7813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="862" y="3502.416">writableCorked : number</text><ellipse cx="853" cy="3511.7363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="862" y="3515.3711">writableEnded : boolean</text><ellipse cx="853" cy="3524.6914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="862" y="3528.3262">writableFinished : boolean</text><ellipse cx="853" cy="3537.6465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="862" y="3541.2813">writableHighWaterMark : number</text><ellipse cx="853" cy="3550.6016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="862" y="3554.2363">writableLength : number</text><ellipse cx="853" cy="3563.5566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="862" y="3567.1914">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="843" x2="1641" y1="3573.5117" y2="3573.5117"/><ellipse cx="853" cy="3584.5117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="862" y="3588.1465">addListener(event: "close", listener: Function) : Transform</text><ellipse cx="853" cy="3597.4668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="862" y="3601.1016">addListener(event: "data", listener: Function) : Transform</text><ellipse cx="853" cy="3610.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="299" x="862" y="3614.0566">addListener(event: "end", listener: Function) : Transform</text><ellipse cx="853" cy="3623.377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="862" y="3627.0117">addListener(event: "error", listener: Function) : Transform</text><ellipse cx="853" cy="3636.332" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="311" x="862" y="3639.9668">addListener(event: "pause", listener: Function) : Transform</text><ellipse cx="853" cy="3649.2871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="862" y="3652.9219">addListener(event: "readable", listener: Function) : Transform</text><ellipse cx="853" cy="3662.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="862" y="3665.877">addListener(event: "resume", listener: Function) : Transform</text><ellipse cx="853" cy="3675.1973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="352" x="862" y="3678.832">addListener(event: string | symbol, listener: Function) : Transform</text><ellipse cx="853" cy="3688.1523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="862" y="3691.7871">cork() : void</text><ellipse cx="853" cy="3701.1074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="862" y="3704.7422">destroy(error: Error) : void</text><ellipse cx="853" cy="3714.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="862" y="3717.6973">emit(event: "close") : boolean</text><ellipse cx="853" cy="3727.0176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="862" y="3730.6523">emit(event: "data", chunk: any) : boolean</text><ellipse cx="853" cy="3739.9727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="862" y="3743.6074">emit(event: "end") : boolean</text><ellipse cx="853" cy="3752.9277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="862" y="3756.5625">emit(event: "error", err: Error) : boolean</text><ellipse cx="853" cy="3765.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="862" y="3769.5176">emit(event: "pause") : boolean</text><ellipse cx="853" cy="3778.8379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="862" y="3782.4727">emit(event: "readable") : boolean</text><ellipse cx="853" cy="3791.793" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="862" y="3795.4277">emit(event: "resume") : boolean</text><ellipse cx="853" cy="3804.748" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="862" y="3808.3828">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="853" cy="3817.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="862" y="3821.3379">end(cb: Function) : void</text><ellipse cx="853" cy="3830.6582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="862" y="3834.293">end(chunk: any, cb: Function) : void</text><ellipse cx="853" cy="3843.6133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="862" y="3847.248">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="853" cy="3856.5684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="862" y="3860.2031">eventNames() : (string | symbol)[]</text><ellipse cx="853" cy="3869.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="862" y="3873.1582">from(src: string | Object | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt; | Promise&lt;any&gt; | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex</text><ellipse cx="853" cy="3882.4785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="862" y="3886.1133">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="853" cy="3895.4336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="862" y="3899.0684">getMaxListeners() : number</text><ellipse cx="853" cy="3908.3887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="862" y="3912.0234">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="853" cy="3921.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="862" y="3924.9785">isPaused() : boolean</text><ellipse cx="853" cy="3934.2988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="862" y="3937.9336">listenerCount(eventName: string | symbol) : number</text><ellipse cx="853" cy="3947.2539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="862" y="3950.8887">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="853" cy="3960.209" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="862" y="3963.8438">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="853" cy="3973.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="862" y="3976.7988">off(eventName: string | symbol, listener: Function) : Transform</text><ellipse cx="853" cy="3986.1191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="862" y="3989.7539">on(event: "close", listener: Function) : Transform</text><ellipse cx="853" cy="3999.0742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="862" y="4002.709">on(event: "data", listener: Function) : Transform</text><ellipse cx="853" cy="4012.0293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="862" y="4015.6641">on(event: "end", listener: Function) : Transform</text><ellipse cx="853" cy="4024.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="862" y="4028.6191">on(event: "error", listener: Function) : Transform</text><ellipse cx="853" cy="4037.9395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="862" y="4041.5742">on(event: "pause", listener: Function) : Transform</text><ellipse cx="853" cy="4050.8945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="862" y="4054.5293">on(event: "readable", listener: Function) : Transform</text><ellipse cx="853" cy="4063.8496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="862" y="4067.4844">on(event: "resume", listener: Function) : Transform</text><ellipse cx="853" cy="4076.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="862" y="4080.4395">on(event: string | symbol, listener: Function) : Transform</text><ellipse cx="853" cy="4089.7598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="862" y="4093.3945">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="853" cy="4102.7148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="862" y="4106.3496">once(event: "close", listener: Function) : Transform</text><ellipse cx="853" cy="4115.6699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="862" y="4119.3047">once(event: "data", listener: Function) : Transform</text><ellipse cx="853" cy="4128.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="862" y="4132.2598">once(event: "end", listener: Function) : Transform</text><ellipse cx="853" cy="4141.5801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="862" y="4145.2148">once(event: "error", listener: Function) : Transform</text><ellipse cx="853" cy="4154.5352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="862" y="4158.1699">once(event: "pause", listener: Function) : Transform</text><ellipse cx="853" cy="4167.4902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="862" y="4171.125">once(event: "readable", listener: Function) : Transform</text><ellipse cx="853" cy="4180.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="862" y="4184.0801">once(event: "resume", listener: Function) : Transform</text><ellipse cx="853" cy="4193.4004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="862" y="4197.0352">once(event: string | symbol, listener: Function) : Transform</text><ellipse cx="853" cy="4206.3555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="862" y="4209.9902">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="853" cy="4219.3105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="862" y="4222.9453">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="853" cy="4232.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="862" y="4235.9004">pause() : Transform</text><ellipse cx="853" cy="4245.2207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="862" y="4248.8555">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="853" cy="4258.1758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="332" x="862" y="4261.8105">prependListener(event: "close", listener: Function) : Transform</text><ellipse cx="853" cy="4271.1309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="862" y="4274.7656">prependListener(event: "data", listener: Function) : Transform</text><ellipse cx="853" cy="4284.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="862" y="4287.7207">prependListener(event: "end", listener: Function) : Transform</text><ellipse cx="853" cy="4297.041" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="332" x="862" y="4300.6758">prependListener(event: "error", listener: Function) : Transform</text><ellipse cx="853" cy="4309.9961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="862" y="4313.6309">prependListener(event: "pause", listener: Function) : Transform</text><ellipse cx="853" cy="4322.9512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="350" x="862" y="4326.5859">prependListener(event: "readable", listener: Function) : Transform</text><ellipse cx="853" cy="4335.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="862" y="4339.541">prependListener(event: "resume", listener: Function) : Transform</text><ellipse cx="853" cy="4348.8613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="377" x="862" y="4352.4961">prependListener(event: string | symbol, listener: Function) : Transform</text><ellipse cx="853" cy="4361.8164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="862" y="4365.4512">prependOnceListener(event: "close", listener: Function) : Transform</text><ellipse cx="853" cy="4374.7715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="862" y="4378.4063">prependOnceListener(event: "data", listener: Function) : Transform</text><ellipse cx="853" cy="4387.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="352" x="862" y="4391.3613">prependOnceListener(event: "end", listener: Function) : Transform</text><ellipse cx="853" cy="4400.6816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="862" y="4404.3164">prependOnceListener(event: "error", listener: Function) : Transform</text><ellipse cx="853" cy="4413.6367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="364" x="862" y="4417.2715">prependOnceListener(event: "pause", listener: Function) : Transform</text><ellipse cx="853" cy="4426.5918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="378" x="862" y="4430.2266">prependOnceListener(event: "readable", listener: Function) : Transform</text><ellipse cx="853" cy="4439.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="862" y="4443.1816">prependOnceListener(event: "resume", listener: Function) : Transform</text><ellipse cx="853" cy="4452.502" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="862" y="4456.1367">prependOnceListener(event: string | symbol, listener: Function) : Transform</text><ellipse cx="853" cy="4465.457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="862" y="4469.0918">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="853" cy="4478.4121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="862" y="4482.0469">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="853" cy="4491.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="862" y="4495.002">read(size: number) : any</text><ellipse cx="853" cy="4504.3223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="862" y="4507.957">removeAllListeners(event: string | symbol) : Transform</text><ellipse cx="853" cy="4517.2773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="862" y="4520.9121">removeListener(event: "close", listener: Function) : Transform</text><ellipse cx="853" cy="4530.2324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="862" y="4533.8672">removeListener(event: "data", listener: Function) : Transform</text><ellipse cx="853" cy="4543.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="862" y="4546.8223">removeListener(event: "end", listener: Function) : Transform</text><ellipse cx="853" cy="4556.1426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="862" y="4559.7773">removeListener(event: "error", listener: Function) : Transform</text><ellipse cx="853" cy="4569.0977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="862" y="4572.7324">removeListener(event: "pause", listener: Function) : Transform</text><ellipse cx="853" cy="4582.0527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="862" y="4585.6875">removeListener(event: "readable", listener: Function) : Transform</text><ellipse cx="853" cy="4595.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="339" x="862" y="4598.6426">removeListener(event: "resume", listener: Function) : Transform</text><ellipse cx="853" cy="4607.9629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="862" y="4611.5977">removeListener(event: string | symbol, listener: Function) : Transform</text><ellipse cx="853" cy="4620.918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="862" y="4624.5527">resume() : Transform</text><ellipse cx="853" cy="4633.873" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="862" y="4637.5078">setDefaultEncoding(encoding: BufferEncoding) : Transform</text><ellipse cx="853" cy="4646.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="862" y="4650.4629">setEncoding(encoding: BufferEncoding) : Transform</text><ellipse cx="853" cy="4659.7832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="862" y="4663.418">setMaxListeners(n: number) : Transform</text><ellipse cx="853" cy="4672.7383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="862" y="4676.373">uncork() : void</text><ellipse cx="853" cy="4685.6934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="862" y="4689.3281">unpipe(destination: WritableStream) : Transform</text><ellipse cx="853" cy="4698.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="862" y="4702.2832">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="853" cy="4711.6035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="228" x="862" y="4715.2383">wrap(stream: ReadableStream) : Transform</text><ellipse cx="853" cy="4724.5586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="862" y="4728.1934">write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="853" cy="4737.5137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="862" y="4741.1484">write(chunk: any, cb: Function) : boolean</text><ellipse cx="853" cy="4750.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="862" y="4754.1035">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="853" cy="4763.4238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="862" y="4767.0586">_construct(callback: Function) : void</text><ellipse cx="853" cy="4776.3789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="862" y="4780.0137">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="853" cy="4789.334" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="862" y="4792.9688">_final(callback: Function) : void</text><ellipse cx="853" cy="4802.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="224" x="862" y="4805.9238">_flush(callback: TransformCallback) : void</text><ellipse cx="853" cy="4815.2441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="862" y="4818.8789">_read(size: number) : void</text><ellipse cx="853" cy="4828.1992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="459" x="862" y="4831.834">_transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback) : void</text><ellipse cx="853" cy="4841.1543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="862" y="4844.7891">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="853" cy="4854.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="862" y="4857.7441">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[53a1472f2276db14e765f88ac3fda3da]
reverse link Readable to Duplex--><path codeLine="227" d="M640.18,1370.7 C643.13,1384.09 646.09,1397.51 649.05,1410.94 " fill="none" id="Readable-backto-Duplex" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="633.33,1372.14,635.86,1351.11,647,1369.13,633.33,1372.14" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[b14a26cd20596b28f442b4a89d6e536c]
reverse link Writable to Duplex--><path codeLine="319" d="M1023.51,1299.48 C1015.41,1336.24 1007.21,1373.45 998.99,1410.77 " fill="none" id="Writable-backto-Duplex" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1016.73,1297.74,1027.87,1279.71,1030.4,1300.75,1016.73,1297.74" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[a4114feeeff1c6c6b384e3daf34d6def]
reverse link Duplex to Socket--><path codeLine="472" d="M640.4,3020.86 C637.39,3034.21 634.37,3047.59 631.35,3060.99 " fill="none" id="Duplex-backto-Socket" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="633.58,3019.29,644.81,3001.32,647.24,3022.37,633.58,3019.29" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[7d14d80e7db99eb0e17e10209142389b]
reverse link Duplex to Transform--><path codeLine="596" d="M1008.07,3021.01 C1025.14,3096.49 1042.43,3172.96 1059.49,3248.38 " fill="none" id="Duplex-backto-Transform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1001.2,3022.37,1003.62,3001.32,1014.86,3019.29,1001.2,3022.37" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[7c1b1976f623b38f85b85f4715f6d2de]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "Duplex" {
    +allowHalfOpen : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Duplex
    +addListener(event: "data", listener: Function) : Duplex
    +addListener(event: "end", listener: Function) : Duplex
    +addListener(event: "error", listener: Function) : Duplex
    +addListener(event: "pause", listener: Function) : Duplex
    +addListener(event: "readable", listener: Function) : Duplex
    +addListener(event: "resume", listener: Function) : Duplex
    +addListener(event: string | symbol, listener: Function) : Duplex
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | Stream | Iterable<any> | AsyncIterable<any> | Promise<any> | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Duplex
    +on(event: "close", listener: Function) : Duplex
    +on(event: "data", listener: Function) : Duplex
    +on(event: "end", listener: Function) : Duplex
    +on(event: "error", listener: Function) : Duplex
    +on(event: "pause", listener: Function) : Duplex
    +on(event: "readable", listener: Function) : Duplex
    +on(event: "resume", listener: Function) : Duplex
    +on(event: string | symbol, listener: Function) : Duplex
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Duplex
    +once(event: "data", listener: Function) : Duplex
    +once(event: "end", listener: Function) : Duplex
    +once(event: "error", listener: Function) : Duplex
    +once(event: "pause", listener: Function) : Duplex
    +once(event: "readable", listener: Function) : Duplex
    +once(event: "resume", listener: Function) : Duplex
    +once(event: string | symbol, listener: Function) : Duplex
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Duplex
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Duplex
    +prependListener(event: "data", listener: Function) : Duplex
    +prependListener(event: "end", listener: Function) : Duplex
    +prependListener(event: "error", listener: Function) : Duplex
    +prependListener(event: "pause", listener: Function) : Duplex
    +prependListener(event: "readable", listener: Function) : Duplex
    +prependListener(event: "resume", listener: Function) : Duplex
    +prependListener(event: string | symbol, listener: Function) : Duplex
    +prependOnceListener(event: "close", listener: Function) : Duplex
    +prependOnceListener(event: "data", listener: Function) : Duplex
    +prependOnceListener(event: "end", listener: Function) : Duplex
    +prependOnceListener(event: "error", listener: Function) : Duplex
    +prependOnceListener(event: "pause", listener: Function) : Duplex
    +prependOnceListener(event: "readable", listener: Function) : Duplex
    +prependOnceListener(event: "resume", listener: Function) : Duplex
    +prependOnceListener(event: string | symbol, listener: Function) : Duplex
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Duplex
    +removeListener(event: "close", listener: Function) : Duplex
    +removeListener(event: "data", listener: Function) : Duplex
    +removeListener(event: "end", listener: Function) : Duplex
    +removeListener(event: "error", listener: Function) : Duplex
    +removeListener(event: "pause", listener: Function) : Duplex
    +removeListener(event: "readable", listener: Function) : Duplex
    +removeListener(event: "resume", listener: Function) : Duplex
    +removeListener(event: string | symbol, listener: Function) : Duplex
    +resume() : Duplex
    +setDefaultEncoding(encoding: BufferEncoding) : Duplex
    +setEncoding(encoding: BufferEncoding) : Duplex
    +setMaxListeners(n: number) : Duplex
    +uncork() : void
    +unpipe(destination: WritableStream) : Duplex
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Duplex
    +write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean
    +write(chunk: any, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_read(size: number) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
class "Readable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Readable
    +addListener(event: "data", listener: Function) : Readable
    +addListener(event: "end", listener: Function) : Readable
    +addListener(event: "error", listener: Function) : Readable
    +addListener(event: "pause", listener: Function) : Readable
    +addListener(event: "readable", listener: Function) : Readable
    +addListener(event: "resume", listener: Function) : Readable
    +addListener(event: string | symbol, listener: Function) : Readable
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +from(iterable: Iterable<any> | AsyncIterable<any>, options: ReadableOptions) : Readable
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Readable
    +on(event: "close", listener: Function) : Readable
    +on(event: "data", listener: Function) : Readable
    +on(event: "end", listener: Function) : Readable
    +on(event: "error", listener: Function) : Readable
    +on(event: "pause", listener: Function) : Readable
    +on(event: "readable", listener: Function) : Readable
    +on(event: "resume", listener: Function) : Readable
    +on(event: string | symbol, listener: Function) : Readable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Readable
    +once(event: "data", listener: Function) : Readable
    +once(event: "end", listener: Function) : Readable
    +once(event: "error", listener: Function) : Readable
    +once(event: "pause", listener: Function) : Readable
    +once(event: "readable", listener: Function) : Readable
    +once(event: "resume", listener: Function) : Readable
    +once(event: string | symbol, listener: Function) : Readable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Readable
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Readable
    +prependListener(event: "data", listener: Function) : Readable
    +prependListener(event: "end", listener: Function) : Readable
    +prependListener(event: "error", listener: Function) : Readable
    +prependListener(event: "pause", listener: Function) : Readable
    +prependListener(event: "readable", listener: Function) : Readable
    +prependListener(event: "resume", listener: Function) : Readable
    +prependListener(event: string | symbol, listener: Function) : Readable
    +prependOnceListener(event: "close", listener: Function) : Readable
    +prependOnceListener(event: "data", listener: Function) : Readable
    +prependOnceListener(event: "end", listener: Function) : Readable
    +prependOnceListener(event: "error", listener: Function) : Readable
    +prependOnceListener(event: "pause", listener: Function) : Readable
    +prependOnceListener(event: "readable", listener: Function) : Readable
    +prependOnceListener(event: "resume", listener: Function) : Readable
    +prependOnceListener(event: string | symbol, listener: Function) : Readable
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Readable
    +removeListener(event: "close", listener: Function) : Readable
    +removeListener(event: "data", listener: Function) : Readable
    +removeListener(event: "end", listener: Function) : Readable
    +removeListener(event: "error", listener: Function) : Readable
    +removeListener(event: "pause", listener: Function) : Readable
    +removeListener(event: "readable", listener: Function) : Readable
    +removeListener(event: "resume", listener: Function) : Readable
    +removeListener(event: string | symbol, listener: Function) : Readable
    +resume() : Readable
    +setEncoding(encoding: BufferEncoding) : Readable
    +setMaxListeners(n: number) : Readable
    +unpipe(destination: WritableStream) : Readable
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Readable
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_read(size: number) : void
}
"Readable" <|- - "Duplex"
class "Writable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Writable
    +addListener(event: "drain", listener: Function) : Writable
    +addListener(event: "error", listener: Function) : Writable
    +addListener(event: "finish", listener: Function) : Writable
    +addListener(event: "pipe", listener: Function) : Writable
    +addListener(event: "unpipe", listener: Function) : Writable
    +addListener(event: string | symbol, listener: Function) : Writable
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "drain") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "finish") : boolean
    +emit(event: "pipe", src: Readable) : boolean
    +emit(event: "unpipe", src: Readable) : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Writable
    +on(event: "close", listener: Function) : Writable
    +on(event: "drain", listener: Function) : Writable
    +on(event: "error", listener: Function) : Writable
    +on(event: "finish", listener: Function) : Writable
    +on(event: "pipe", listener: Function) : Writable
    +on(event: "unpipe", listener: Function) : Writable
    +on(event: string | symbol, listener: Function) : Writable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Writable
    +once(event: "drain", listener: Function) : Writable
    +once(event: "error", listener: Function) : Writable
    +once(event: "finish", listener: Function) : Writable
    +once(event: "pipe", listener: Function) : Writable
    +once(event: "unpipe", listener: Function) : Writable
    +once(event: string | symbol, listener: Function) : Writable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Writable
    +prependListener(event: "drain", listener: Function) : Writable
    +prependListener(event: "error", listener: Function) : Writable
    +prependListener(event: "finish", listener: Function) : Writable
    +prependListener(event: "pipe", listener: Function) : Writable
    +prependListener(event: "unpipe", listener: Function) : Writable
    +prependListener(event: string | symbol, listener: Function) : Writable
    +prependOnceListener(event: "close", listener: Function) : Writable
    +prependOnceListener(event: "drain", listener: Function) : Writable
    +prependOnceListener(event: "error", listener: Function) : Writable
    +prependOnceListener(event: "finish", listener: Function) : Writable
    +prependOnceListener(event: "pipe", listener: Function) : Writable
    +prependOnceListener(event: "unpipe", listener: Function) : Writable
    +prependOnceListener(event: string | symbol, listener: Function) : Writable
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Writable
    +removeListener(event: "close", listener: Function) : Writable
    +removeListener(event: "drain", listener: Function) : Writable
    +removeListener(event: "error", listener: Function) : Writable
    +removeListener(event: "finish", listener: Function) : Writable
    +removeListener(event: "pipe", listener: Function) : Writable
    +removeListener(event: "unpipe", listener: Function) : Writable
    +removeListener(event: string | symbol, listener: Function) : Writable
    +setDefaultEncoding(encoding: BufferEncoding) : Writable
    +setMaxListeners(n: number) : Writable
    +uncork() : void
    +write(chunk: any, callback: Function) : boolean
    +write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Writable" <|.. "Duplex"
class "Socket" {
    +allowHalfOpen : boolean
    +bufferSize : number
    +bytesRead : number
    +bytesWritten : number
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    +connecting : boolean
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +localAddress : string
    +localPort : number
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +remoteAddress : string
    +remoteFamily : string
    +remotePort : number
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: string, listener: Function) : Socket
    +addListener(event: "close", listener: Function) : Socket
    +addListener(event: "connect", listener: Function) : Socket
    +addListener(event: "data", listener: Function) : Socket
    +addListener(event: "drain", listener: Function) : Socket
    +addListener(event: "end", listener: Function) : Socket
    +addListener(event: "error", listener: Function) : Socket
    +addListener(event: "lookup", listener: Function) : Socket
    +addListener(event: "ready", listener: Function) : Socket
    +addListener(event: "timeout", listener: Function) : Socket
    +address() : Object | AddressInfo
    +connect(options: SocketConnectOpts, connectionListener: Function) : Socket
    +connect(port: number, host: string, connectionListener: Function) : Socket
    +connect(port: number, connectionListener: Function) : Socket
    +connect(path: string, connectionListener: Function) : Socket
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: string | symbol, args: any[]) : boolean
    +emit(event: "close", hadError: boolean) : boolean
    +emit(event: "connect") : boolean
    +emit(event: "data", data: Buffer) : boolean
    +emit(event: "drain") : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "lookup", err: Error, address: string, family: string | number, host: string) : boolean
    +emit(event: "ready") : boolean
    +emit(event: "timeout") : boolean
    +end(callback: Function) : void
    +end(buffer: string | Uint8Array, callback: Function) : void
    +end(str: string | Uint8Array, encoding: BufferEncoding, callback: Function) : void
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | Stream | Iterable<any> | AsyncIterable<any> | Promise<any> | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Socket
    +on(event: string, listener: Function) : Socket
    +on(event: "close", listener: Function) : Socket
    +on(event: "connect", listener: Function) : Socket
    +on(event: "data", listener: Function) : Socket
    +on(event: "drain", listener: Function) : Socket
    +on(event: "end", listener: Function) : Socket
    +on(event: "error", listener: Function) : Socket
    +on(event: "lookup", listener: Function) : Socket
    +on(event: "ready", listener: Function) : Socket
    +on(event: "timeout", listener: Function) : Socket
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: string, listener: Function) : Socket
    +once(event: "close", listener: Function) : Socket
    +once(event: "connect", listener: Function) : Socket
    +once(event: "data", listener: Function) : Socket
    +once(event: "drain", listener: Function) : Socket
    +once(event: "end", listener: Function) : Socket
    +once(event: "error", listener: Function) : Socket
    +once(event: "lookup", listener: Function) : Socket
    +once(event: "ready", listener: Function) : Socket
    +once(event: "timeout", listener: Function) : Socket
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Socket
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: string, listener: Function) : Socket
    +prependListener(event: "close", listener: Function) : Socket
    +prependListener(event: "connect", listener: Function) : Socket
    +prependListener(event: "data", listener: Function) : Socket
    +prependListener(event: "drain", listener: Function) : Socket
    +prependListener(event: "end", listener: Function) : Socket
    +prependListener(event: "error", listener: Function) : Socket
    +prependListener(event: "lookup", listener: Function) : Socket
    +prependListener(event: "ready", listener: Function) : Socket
    +prependListener(event: "timeout", listener: Function) : Socket
    +prependOnceListener(event: string, listener: Function) : Socket
    +prependOnceListener(event: "close", listener: Function) : Socket
    +prependOnceListener(event: "connect", listener: Function) : Socket
    +prependOnceListener(event: "data", listener: Function) : Socket
    +prependOnceListener(event: "drain", listener: Function) : Socket
    +prependOnceListener(event: "end", listener: Function) : Socket
    +prependOnceListener(event: "error", listener: Function) : Socket
    +prependOnceListener(event: "lookup", listener: Function) : Socket
    +prependOnceListener(event: "ready", listener: Function) : Socket
    +prependOnceListener(event: "timeout", listener: Function) : Socket
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +ref() : Socket
    +removeAllListeners(event: string | symbol) : Socket
    +removeListener(event: "close", listener: Function) : Socket
    +removeListener(event: "data", listener: Function) : Socket
    +removeListener(event: "end", listener: Function) : Socket
    +removeListener(event: "error", listener: Function) : Socket
    +removeListener(event: "pause", listener: Function) : Socket
    +removeListener(event: "readable", listener: Function) : Socket
    +removeListener(event: "resume", listener: Function) : Socket
    +removeListener(event: string | symbol, listener: Function) : Socket
    +resume() : Socket
    +setDefaultEncoding(encoding: BufferEncoding) : Socket
    +setEncoding(encoding: BufferEncoding) : Socket
    +setKeepAlive(enable: boolean, initialDelay: number) : Socket
    +setMaxListeners(n: number) : Socket
    +setNoDelay(noDelay: boolean) : Socket
    +setTimeout(timeout: number, callback: Function) : Socket
    +uncork() : void
    +unpipe(destination: WritableStream) : Socket
    +unref() : Socket
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Socket
    +write(buffer: string | Uint8Array, cb: Function) : boolean
    +write(str: string | Uint8Array, encoding: BufferEncoding, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_read(size: number) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Duplex" <|- - "Socket"
class "Transform" {
    +allowHalfOpen : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Transform
    +addListener(event: "data", listener: Function) : Transform
    +addListener(event: "end", listener: Function) : Transform
    +addListener(event: "error", listener: Function) : Transform
    +addListener(event: "pause", listener: Function) : Transform
    +addListener(event: "readable", listener: Function) : Transform
    +addListener(event: "resume", listener: Function) : Transform
    +addListener(event: string | symbol, listener: Function) : Transform
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | Stream | Iterable<any> | AsyncIterable<any> | Promise<any> | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Transform
    +on(event: "close", listener: Function) : Transform
    +on(event: "data", listener: Function) : Transform
    +on(event: "end", listener: Function) : Transform
    +on(event: "error", listener: Function) : Transform
    +on(event: "pause", listener: Function) : Transform
    +on(event: "readable", listener: Function) : Transform
    +on(event: "resume", listener: Function) : Transform
    +on(event: string | symbol, listener: Function) : Transform
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Transform
    +once(event: "data", listener: Function) : Transform
    +once(event: "end", listener: Function) : Transform
    +once(event: "error", listener: Function) : Transform
    +once(event: "pause", listener: Function) : Transform
    +once(event: "readable", listener: Function) : Transform
    +once(event: "resume", listener: Function) : Transform
    +once(event: string | symbol, listener: Function) : Transform
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Transform
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Transform
    +prependListener(event: "data", listener: Function) : Transform
    +prependListener(event: "end", listener: Function) : Transform
    +prependListener(event: "error", listener: Function) : Transform
    +prependListener(event: "pause", listener: Function) : Transform
    +prependListener(event: "readable", listener: Function) : Transform
    +prependListener(event: "resume", listener: Function) : Transform
    +prependListener(event: string | symbol, listener: Function) : Transform
    +prependOnceListener(event: "close", listener: Function) : Transform
    +prependOnceListener(event: "data", listener: Function) : Transform
    +prependOnceListener(event: "end", listener: Function) : Transform
    +prependOnceListener(event: "error", listener: Function) : Transform
    +prependOnceListener(event: "pause", listener: Function) : Transform
    +prependOnceListener(event: "readable", listener: Function) : Transform
    +prependOnceListener(event: "resume", listener: Function) : Transform
    +prependOnceListener(event: string | symbol, listener: Function) : Transform
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Transform
    +removeListener(event: "close", listener: Function) : Transform
    +removeListener(event: "data", listener: Function) : Transform
    +removeListener(event: "end", listener: Function) : Transform
    +removeListener(event: "error", listener: Function) : Transform
    +removeListener(event: "pause", listener: Function) : Transform
    +removeListener(event: "readable", listener: Function) : Transform
    +removeListener(event: "resume", listener: Function) : Transform
    +removeListener(event: string | symbol, listener: Function) : Transform
    +resume() : Transform
    +setDefaultEncoding(encoding: BufferEncoding) : Transform
    +setEncoding(encoding: BufferEncoding) : Transform
    +setMaxListeners(n: number) : Transform
    +uncork() : void
    +unpipe(destination: WritableStream) : Transform
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Transform
    +write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean
    +write(chunk: any, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_flush(callback: TransformCallback) : void
    +_read(size: number) : void
    +_transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Duplex" <|- - "Transform"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>