<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="4857px" preserveAspectRatio="none" style="width:658px;height:4857px;background:#00000000;" version="1.1" viewBox="0 0 658 4857" width="658px" zoomAndPan="magnify"><defs><filter height="300%" id="f1fl40sqmiuzoh" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[e659cb07397b6e885205c421089cc64a]
class OutgoingMessage--><rect codeLine="4" fill="#FEFECE" filter="url(#f1fl40sqmiuzoh)" height="1434.1934" id="OutgoingMessage" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="1268"/><ellipse cx="270.75" cy="1284" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M273.2231,1290.1431 Q272.6421,1290.4419 272.0029,1290.5913 Q271.3638,1290.7407 270.6582,1290.7407 Q268.1514,1290.7407 266.8315,1289.0889 Q265.5117,1287.437 265.5117,1284.3159 Q265.5117,1281.1865 266.8315,1279.5347 Q268.1514,1277.8828 270.6582,1277.8828 Q271.3638,1277.8828 272.0112,1278.0322 Q272.6587,1278.1816 273.2231,1278.4805 L273.2231,1281.2031 Q272.5923,1280.6221 271.9988,1280.3523 Q271.4053,1280.0825 270.7744,1280.0825 Q269.4297,1280.0825 268.7449,1281.1492 Q268.0601,1282.2158 268.0601,1284.3159 Q268.0601,1286.4077 268.7449,1287.4744 Q269.4297,1288.541 270.7744,1288.541 Q271.4053,1288.541 271.9988,1288.2712 Q272.5923,1288.0015 273.2231,1287.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="101" x="291.25" y="1288.5352">OutgoingMessage</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="1300" y2="1300"/><ellipse cx="18" cy="1311" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="1314.6348">captureRejections : boolean</text><ellipse cx="18" cy="1323.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="1327.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="1336.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="27" y="1340.5449">chunkedEncoding : boolean</text><ellipse cx="18" cy="1349.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="1353.5">connection : null | Socket</text><ellipse cx="18" cy="1362.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="1366.4551">defaultMaxListeners : number</text><ellipse cx="18" cy="1375.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="1379.4102">destroyed : boolean</text><ellipse cx="18" cy="1388.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="1392.3652">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="1401.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="27" y="1405.3203">finished : boolean</text><ellipse cx="18" cy="1414.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="27" y="1418.2754">headersSent : boolean</text><ellipse cx="18" cy="1427.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="27" y="1431.2305">req : IncomingMessage</text><ellipse cx="18" cy="1440.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="27" y="1444.1855">sendDate : boolean</text><ellipse cx="18" cy="1453.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="27" y="1457.1406">shouldKeepAlive : boolean</text><ellipse cx="18" cy="1466.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="27" y="1470.0957">socket : null | Socket</text><ellipse cx="18" cy="1479.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="27" y="1483.0508">useChunkedEncodingByDefault : boolean</text><ellipse cx="18" cy="1492.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="1496.0059">writable : boolean</text><ellipse cx="18" cy="1505.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="27" y="1508.9609">writableCorked : number</text><ellipse cx="18" cy="1518.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="27" y="1521.916">writableEnded : boolean</text><ellipse cx="18" cy="1531.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="1534.8711">writableFinished : boolean</text><ellipse cx="18" cy="1544.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="27" y="1547.8262">writableHighWaterMark : number</text><ellipse cx="18" cy="1557.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="27" y="1560.7813">writableLength : number</text><ellipse cx="18" cy="1570.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="1573.7363">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="1580.0566" y2="1580.0566"/><ellipse cx="18" cy="1591.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="347" x="27" y="1594.6914">addListener(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1604.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="347" x="27" y="1607.6465">addListener(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1616.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="347" x="27" y="1620.6016">addListener(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1629.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="27" y="1633.5566">addListener(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1642.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="342" x="27" y="1646.5117">addListener(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1655.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="27" y="1659.4668">addListener(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1668.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="27" y="1672.4219">addListener(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1681.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="414" x="27" y="1685.377">addTrailers(headers: OutgoingHttpHeaders | readonly [string, string][]) : void</text><ellipse cx="18" cy="1694.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="27" y="1698.332">cork() : void</text><ellipse cx="18" cy="1707.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="27" y="1711.2871">destroy(error: Error) : void</text><ellipse cx="18" cy="1720.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="1724.2422">emit(event: "close") : boolean</text><ellipse cx="18" cy="1733.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="1737.1973">emit(event: "drain") : boolean</text><ellipse cx="18" cy="1746.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="1750.1523">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="1759.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="27" y="1763.1074">emit(event: "finish") : boolean</text><ellipse cx="18" cy="1772.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="27" y="1776.0625">emit(event: "pipe", src: Readable) : boolean</text><ellipse cx="18" cy="1785.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="27" y="1789.0176">emit(event: "unpipe", src: Readable) : boolean</text><ellipse cx="18" cy="1798.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="1801.9727">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="1811.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="27" y="1814.9277">end(cb: Function) : void</text><ellipse cx="18" cy="1824.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="27" y="1827.8828">end(chunk: any, cb: Function) : void</text><ellipse cx="18" cy="1837.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="27" y="1840.8379">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="18" cy="1850.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="1853.793">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="1863.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="27" y="1866.748">flushHeaders() : void</text><ellipse cx="18" cy="1876.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="1879.7031">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="1889.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="27" y="1892.6582">getHeader(name: string) : undefined | string | number | string[]</text><ellipse cx="18" cy="1901.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="27" y="1905.6133">getHeaderNames() : string[]</text><ellipse cx="18" cy="1914.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="27" y="1918.5684">getHeaders() : OutgoingHttpHeaders</text><ellipse cx="18" cy="1927.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="1931.5234">getMaxListeners() : number</text><ellipse cx="18" cy="1940.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="27" y="1944.4785">hasHeader(name: string) : boolean</text><ellipse cx="18" cy="1953.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="1957.4336">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="1966.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="1970.3887">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="1979.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="1983.3438">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="1992.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="374" x="27" y="1996.2988">off(eventName: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2005.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="2009.2539">on(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2018.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="2022.209">on(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2031.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="2035.1641">on(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2044.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="27" y="2048.1191">on(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2057.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="27" y="2061.0742">on(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2070.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="27" y="2074.0293">on(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2083.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="2086.9844">on(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2096.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="2099.9395">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="2109.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="2112.8945">once(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2122.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="2125.8496">once(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2135.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="2138.8047">once(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2148.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="27" y="2151.7598">once(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2161.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="27" y="2164.7148">once(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2174.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="27" y="2177.6699">once(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2186.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="2190.625">once(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2199.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="2203.5801">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="2212.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="2216.5352">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="2225.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="2229.4902">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="2238.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="27" y="2242.4453">prependListener(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2251.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="27" y="2255.4004">prependListener(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2264.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="27" y="2268.3555">prependListener(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2277.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="374" x="27" y="2281.3105">prependListener(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2290.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="2294.2656">prependListener(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2303.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="381" x="27" y="2307.2207">prependListener(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2316.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="27" y="2320.1758">prependListener(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2329.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="400" x="27" y="2333.1309">prependOnceListener(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2342.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="400" x="27" y="2346.0859">prependOnceListener(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2355.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="400" x="27" y="2359.041">prependOnceListener(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2368.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="402" x="27" y="2371.9961">prependOnceListener(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2381.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="395" x="27" y="2384.9512">prependOnceListener(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2394.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="409" x="27" y="2397.9063">prependOnceListener(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2407.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="445" x="27" y="2410.8613">prependOnceListener(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2420.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="2423.8164">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="2433.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="27" y="2436.7715">removeAllListeners(event: string | symbol) : OutgoingMessage</text><ellipse cx="18" cy="2446.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="27" y="2449.7266">removeHeader(name: string) : void</text><ellipse cx="18" cy="2459.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="2462.6816">removeListener(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2472.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="2475.6367">removeListener(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2484.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="2488.5918">removeListener(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2497.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="27" y="2501.5469">removeListener(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2510.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="27" y="2514.502">removeListener(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2523.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="27" y="2527.457">removeListener(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2536.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="27" y="2540.4121">removeListener(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2549.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="27" y="2553.3672">setDefaultEncoding(encoding: BufferEncoding) : OutgoingMessage</text><ellipse cx="18" cy="2562.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="459" x="27" y="2566.3223">setHeader(name: string, value: string | number | readonly string[]) : OutgoingMessage</text><ellipse cx="18" cy="2575.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="27" y="2579.2773">setMaxListeners(n: number) : OutgoingMessage</text><ellipse cx="18" cy="2588.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="27" y="2592.2324">setTimeout(msecs: number, callback: Function) : OutgoingMessage</text><ellipse cx="18" cy="2601.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="27" y="2605.1875">uncork() : void</text><ellipse cx="18" cy="2614.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="2618.1426">write(chunk: any, callback: Function) : boolean</text><ellipse cx="18" cy="2627.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="27" y="2631.0977">write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean</text><ellipse cx="18" cy="2640.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="2644.0527">_construct(callback: Function) : void</text><ellipse cx="18" cy="2653.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="2657.0078">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="2666.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="27" y="2669.9629">_final(callback: Function) : void</text><ellipse cx="18" cy="2679.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="27" y="2682.918">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="18" cy="2692.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="27" y="2695.873">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[93f77cf1cd71031e7728e23fe162cbe1]
class Writable--><rect codeLine="113" fill="#FEFECE" filter="url(#f1fl40sqmiuzoh)" height="1201.002" id="Writable" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="7"/><ellipse cx="297.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M300.2231,29.1431 Q299.6421,29.4419 299.0029,29.5913 Q298.3638,29.7407 297.6582,29.7407 Q295.1514,29.7407 293.8315,28.0889 Q292.5117,26.437 292.5117,23.3159 Q292.5117,20.1865 293.8315,18.5347 Q295.1514,16.8828 297.6582,16.8828 Q298.3638,16.8828 299.0112,17.0322 Q299.6587,17.1816 300.2231,17.4805 L300.2231,20.2031 Q299.5923,19.6221 298.9988,19.3523 Q298.4053,19.0825 297.7744,19.0825 Q296.4297,19.0825 295.7449,20.1492 Q295.0601,21.2158 295.0601,23.3159 Q295.0601,25.4077 295.7449,26.4744 Q296.4297,27.541 297.7744,27.541 Q298.4053,27.541 298.9988,27.2712 Q299.5923,27.0015 300.2231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="47" x="318.25" y="27.5352">Writable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="39" y2="39"/><ellipse cx="18" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="53.6348">captureRejections : boolean</text><ellipse cx="18" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="66.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="75.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="79.5449">defaultMaxListeners : number</text><ellipse cx="18" cy="88.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="92.5">destroyed : boolean</text><ellipse cx="18" cy="101.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="105.4551">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="114.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="118.4102">writable : boolean</text><ellipse cx="18" cy="127.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="27" y="131.3652">writableCorked : number</text><ellipse cx="18" cy="140.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="27" y="144.3203">writableEnded : boolean</text><ellipse cx="18" cy="153.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="157.2754">writableFinished : boolean</text><ellipse cx="18" cy="166.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="27" y="170.2305">writableHighWaterMark : number</text><ellipse cx="18" cy="179.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="27" y="183.1855">writableLength : number</text><ellipse cx="18" cy="192.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="196.1406">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="202.4609" y2="202.4609"/><ellipse cx="18" cy="213.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="27" y="217.0957">addListener(event: "close", listener: Function) : Writable</text><ellipse cx="18" cy="226.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="27" y="230.0508">addListener(event: "drain", listener: Function) : Writable</text><ellipse cx="18" cy="239.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="27" y="243.0059">addListener(event: "error", listener: Function) : Writable</text><ellipse cx="18" cy="252.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="295" x="27" y="255.9609">addListener(event: "finish", listener: Function) : Writable</text><ellipse cx="18" cy="265.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="27" y="268.916">addListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="18" cy="278.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="27" y="281.8711">addListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="18" cy="291.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="27" y="294.8262">addListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="18" cy="304.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="27" y="307.7813">cork() : void</text><ellipse cx="18" cy="317.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="27" y="320.7363">destroy(error: Error) : void</text><ellipse cx="18" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="333.6914">emit(event: "close") : boolean</text><ellipse cx="18" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="346.6465">emit(event: "drain") : boolean</text><ellipse cx="18" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="359.6016">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="27" y="372.5566">emit(event: "finish") : boolean</text><ellipse cx="18" cy="381.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="27" y="385.5117">emit(event: "pipe", src: Readable) : boolean</text><ellipse cx="18" cy="394.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="27" y="398.4668">emit(event: "unpipe", src: Readable) : boolean</text><ellipse cx="18" cy="407.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="411.4219">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="420.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="27" y="424.377">end(cb: Function) : void</text><ellipse cx="18" cy="433.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="27" y="437.332">end(chunk: any, cb: Function) : void</text><ellipse cx="18" cy="446.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="27" y="450.2871">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="18" cy="459.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="463.2422">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="472.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="476.1973">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="485.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="489.1523">getMaxListeners() : number</text><ellipse cx="18" cy="498.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="502.1074">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="511.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="515.0625">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="524.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="528.0176">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="537.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="27" y="540.9727">off(eventName: string | symbol, listener: Function) : Writable</text><ellipse cx="18" cy="550.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="27" y="553.9277">on(event: "close", listener: Function) : Writable</text><ellipse cx="18" cy="563.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="27" y="566.8828">on(event: "drain", listener: Function) : Writable</text><ellipse cx="18" cy="576.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="27" y="579.8379">on(event: "error", listener: Function) : Writable</text><ellipse cx="18" cy="589.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="592.793">on(event: "finish", listener: Function) : Writable</text><ellipse cx="18" cy="602.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="27" y="605.748">on(event: "pipe", listener: Function) : Writable</text><ellipse cx="18" cy="615.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="27" y="618.7031">on(event: "unpipe", listener: Function) : Writable</text><ellipse cx="18" cy="628.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="631.6582">on(event: string | symbol, listener: Function) : Writable</text><ellipse cx="18" cy="640.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="644.6133">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="653.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="27" y="657.5684">once(event: "close", listener: Function) : Writable</text><ellipse cx="18" cy="666.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="27" y="670.5234">once(event: "drain", listener: Function) : Writable</text><ellipse cx="18" cy="679.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="27" y="683.4785">once(event: "error", listener: Function) : Writable</text><ellipse cx="18" cy="692.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="27" y="696.4336">once(event: "finish", listener: Function) : Writable</text><ellipse cx="18" cy="705.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="27" y="709.3887">once(event: "pipe", listener: Function) : Writable</text><ellipse cx="18" cy="718.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="27" y="722.3438">once(event: "unpipe", listener: Function) : Writable</text><ellipse cx="18" cy="731.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="27" y="735.2988">once(event: string | symbol, listener: Function) : Writable</text><ellipse cx="18" cy="744.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="748.2539">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="757.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="761.209">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="770.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="774.1641">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="783.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="787.1191">prependListener(event: "close", listener: Function) : Writable</text><ellipse cx="18" cy="796.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="800.0742">prependListener(event: "drain", listener: Function) : Writable</text><ellipse cx="18" cy="809.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="813.0293">prependListener(event: "error", listener: Function) : Writable</text><ellipse cx="18" cy="822.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="27" y="825.9844">prependListener(event: "finish", listener: Function) : Writable</text><ellipse cx="18" cy="835.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="838.9395">prependListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="18" cy="848.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="27" y="851.8945">prependListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="18" cy="861.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="27" y="864.8496">prependListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="18" cy="874.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="877.8047">prependOnceListener(event: "close", listener: Function) : Writable</text><ellipse cx="18" cy="887.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="890.7598">prependOnceListener(event: "drain", listener: Function) : Writable</text><ellipse cx="18" cy="900.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="903.7148">prependOnceListener(event: "error", listener: Function) : Writable</text><ellipse cx="18" cy="913.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="348" x="27" y="916.6699">prependOnceListener(event: "finish", listener: Function) : Writable</text><ellipse cx="18" cy="925.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="27" y="929.625">prependOnceListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="18" cy="938.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="942.5801">prependOnceListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="18" cy="951.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="27" y="955.5352">prependOnceListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="18" cy="964.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="968.4902">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="977.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="27" y="981.4453">removeAllListeners(event: string | symbol) : Writable</text><ellipse cx="18" cy="990.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="994.4004">removeListener(event: "close", listener: Function) : Writable</text><ellipse cx="18" cy="1003.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="1007.3555">removeListener(event: "drain", listener: Function) : Writable</text><ellipse cx="18" cy="1016.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="1020.3105">removeListener(event: "error", listener: Function) : Writable</text><ellipse cx="18" cy="1029.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="27" y="1033.2656">removeListener(event: "finish", listener: Function) : Writable</text><ellipse cx="18" cy="1042.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="27" y="1046.2207">removeListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="18" cy="1055.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="27" y="1059.1758">removeListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="18" cy="1068.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="27" y="1072.1309">removeListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="18" cy="1081.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="27" y="1085.0859">setDefaultEncoding(encoding: BufferEncoding) : Writable</text><ellipse cx="18" cy="1094.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="27" y="1098.041">setMaxListeners(n: number) : Writable</text><ellipse cx="18" cy="1107.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="27" y="1110.9961">uncork() : void</text><ellipse cx="18" cy="1120.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="1123.9512">write(chunk: any, callback: Function) : boolean</text><ellipse cx="18" cy="1133.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="27" y="1136.9063">write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean</text><ellipse cx="18" cy="1146.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="1149.8613">_construct(callback: Function) : void</text><ellipse cx="18" cy="1159.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="1162.8164">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="1172.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="27" y="1175.7715">_final(callback: Function) : void</text><ellipse cx="18" cy="1185.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="27" y="1188.7266">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="18" cy="1198.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="27" y="1201.6816">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[a121895fb83f86767acf88f1593932fd]
class ClientRequest--><rect codeLine="205" fill="#FEFECE" filter="url(#f1fl40sqmiuzoh)" height="2081.9473" id="ClientRequest" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="2762"/><ellipse cx="281.75" cy="2778" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M284.2231,2784.1431 Q283.6421,2784.4419 283.0029,2784.5913 Q282.3638,2784.7407 281.6582,2784.7407 Q279.1514,2784.7407 277.8315,2783.0889 Q276.5117,2781.437 276.5117,2778.3159 Q276.5117,2775.1865 277.8315,2773.5347 Q279.1514,2771.8828 281.6582,2771.8828 Q282.3638,2771.8828 283.0112,2772.0322 Q283.6587,2772.1816 284.2231,2772.4805 L284.2231,2775.2031 Q283.5923,2774.6221 282.9988,2774.3523 Q282.4053,2774.0825 281.7744,2774.0825 Q280.4297,2774.0825 279.7449,2775.1492 Q279.0601,2776.2158 279.0601,2778.3159 Q279.0601,2780.4077 279.7449,2781.4744 Q280.4297,2782.541 281.7744,2782.541 Q282.4053,2782.541 282.9988,2782.2712 Q283.5923,2782.0015 284.2231,2781.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="79" x="302.25" y="2782.5352">ClientRequest</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="2794" y2="2794"/><ellipse cx="18" cy="2805" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="2808.6348">aborted : boolean</text><ellipse cx="18" cy="2817.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="2821.5898">captureRejections : boolean</text><ellipse cx="18" cy="2830.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="2834.5449">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="2843.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="27" y="2847.5">chunkedEncoding : boolean</text><ellipse cx="18" cy="2856.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="2860.4551">connection : null | Socket</text><ellipse cx="18" cy="2869.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="2873.4102">defaultMaxListeners : number</text><ellipse cx="18" cy="2882.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="2886.3652">destroyed : boolean</text><ellipse cx="18" cy="2895.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="2899.3203">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="2908.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="27" y="2912.2754">finished : boolean</text><ellipse cx="18" cy="2921.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="27" y="2925.2305">headersSent : boolean</text><ellipse cx="18" cy="2934.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="27" y="2938.1855">host : string</text><ellipse cx="18" cy="2947.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="27" y="2951.1406">method : string</text><ellipse cx="18" cy="2960.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="27" y="2964.0957">path : string</text><ellipse cx="18" cy="2973.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="27" y="2977.0508">protocol : string</text><ellipse cx="18" cy="2986.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="27" y="2990.0059">req : IncomingMessage</text><ellipse cx="18" cy="2999.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="27" y="3002.9609">sendDate : boolean</text><ellipse cx="18" cy="3012.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="27" y="3015.916">shouldKeepAlive : boolean</text><ellipse cx="18" cy="3025.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="27" y="3028.8711">socket : null | Socket</text><ellipse cx="18" cy="3038.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="27" y="3041.8262">useChunkedEncodingByDefault : boolean</text><ellipse cx="18" cy="3051.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="3054.7813">writable : boolean</text><ellipse cx="18" cy="3064.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="27" y="3067.7363">writableCorked : number</text><ellipse cx="18" cy="3077.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="27" y="3080.6914">writableEnded : boolean</text><ellipse cx="18" cy="3090.0117" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="3093.6465">writableFinished : boolean</text><ellipse cx="18" cy="3102.9668" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="27" y="3106.6016">writableHighWaterMark : number</text><ellipse cx="18" cy="3115.9219" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="27" y="3119.5566">writableLength : number</text><ellipse cx="18" cy="3128.877" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="3132.5117">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="3138.832" y2="3138.832"/><ellipse cx="18" cy="3149.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="69" x="27" y="3153.4668">abort() : void</text><ellipse cx="18" cy="3162.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="3166.4219">addListener(event: "abort", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3175.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="339" x="27" y="3179.377">addListener(event: "connect", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3188.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="3192.332">addListener(event: "continue", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3201.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="27" y="3205.2871">addListener(event: "information", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3214.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="3218.2422">addListener(event: "response", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3227.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="27" y="3231.1973">addListener(event: "socket", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3240.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="27" y="3244.1523">addListener(event: "timeout", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3253.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="27" y="3257.1074">addListener(event: "upgrade", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3266.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="27" y="3270.0625">addListener(event: "close", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3279.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="27" y="3283.0176">addListener(event: "drain", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3292.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="27" y="3295.9727">addListener(event: "error", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3305.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="27" y="3308.9277">addListener(event: "finish", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3318.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="27" y="3321.8828">addListener(event: "pipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3331.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="27" y="3334.8379">addListener(event: "unpipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3344.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="27" y="3347.793">addListener(event: string | symbol, listener: Function) : ClientRequest</text><ellipse cx="18" cy="3357.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="414" x="27" y="3360.748">addTrailers(headers: OutgoingHttpHeaders | readonly [string, string][]) : void</text><ellipse cx="18" cy="3370.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="27" y="3373.7031">cork() : void</text><ellipse cx="18" cy="3383.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="27" y="3386.6582">destroy(error: Error) : void</text><ellipse cx="18" cy="3395.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="3399.6133">emit(event: "close") : boolean</text><ellipse cx="18" cy="3408.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="3412.5684">emit(event: "drain") : boolean</text><ellipse cx="18" cy="3421.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="3425.5234">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="3434.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="27" y="3438.4785">emit(event: "finish") : boolean</text><ellipse cx="18" cy="3447.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="27" y="3451.4336">emit(event: "pipe", src: Readable) : boolean</text><ellipse cx="18" cy="3460.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="27" y="3464.3887">emit(event: "unpipe", src: Readable) : boolean</text><ellipse cx="18" cy="3473.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="3477.3438">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="3486.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="27" y="3490.2988">end(cb: Function) : void</text><ellipse cx="18" cy="3499.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="27" y="3503.2539">end(chunk: any, cb: Function) : void</text><ellipse cx="18" cy="3512.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="27" y="3516.209">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="18" cy="3525.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="3529.1641">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="3538.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="27" y="3542.1191">flushHeaders() : void</text><ellipse cx="18" cy="3551.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="3555.0742">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="3564.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="27" y="3568.0293">getHeader(name: string) : undefined | string | number | string[]</text><ellipse cx="18" cy="3577.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="27" y="3580.9844">getHeaderNames() : string[]</text><ellipse cx="18" cy="3590.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="27" y="3593.9395">getHeaders() : OutgoingHttpHeaders</text><ellipse cx="18" cy="3603.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="3606.8945">getMaxListeners() : number</text><ellipse cx="18" cy="3616.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="3619.8496">getRawHeaderNames() : string[]</text><ellipse cx="18" cy="3629.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="27" y="3632.8047">hasHeader(name: string) : boolean</text><ellipse cx="18" cy="3642.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="3645.7598">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="3655.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="3658.7148">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="3668.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="3671.6699">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="3680.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="27" y="3684.625">off(eventName: string | symbol, listener: Function) : ClientRequest</text><ellipse cx="18" cy="3693.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="27" y="3697.5801">on(event: "abort", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3706.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="27" y="3710.5352">on(event: "connect", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3719.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="27" y="3723.4902">on(event: "continue", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3732.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="3736.4453">on(event: "information", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3745.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="27" y="3749.4004">on(event: "response", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3758.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="27" y="3762.3555">on(event: "socket", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3771.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="27" y="3775.3105">on(event: "timeout", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3784.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="3788.2656">on(event: "upgrade", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3797.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="275" x="27" y="3801.2207">on(event: "close", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3810.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="275" x="27" y="3814.1758">on(event: "drain", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3823.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="275" x="27" y="3827.1309">on(event: "error", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3836.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="27" y="3840.0859">on(event: "finish", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3849.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="27" y="3853.041">on(event: "pipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3862.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="27" y="3865.9961">on(event: "unpipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3875.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="27" y="3878.9512">on(event: string | symbol, listener: Function) : ClientRequest</text><ellipse cx="18" cy="3888.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="3891.9063">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="3901.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="27" y="3904.8613">once(event: "abort", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3914.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="27" y="3917.8164">once(event: "connect", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3927.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="27" y="3930.7715">once(event: "continue", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3940.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="27" y="3943.7266">once(event: "information", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3953.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="27" y="3956.6816">once(event: "response", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3966.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="27" y="3969.6367">once(event: "socket", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3978.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="27" y="3982.5918">once(event: "timeout", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3991.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="304" x="27" y="3995.5469">once(event: "upgrade", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4004.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="27" y="4008.502">once(event: "close", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4017.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="27" y="4021.457">once(event: "drain", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4030.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="27" y="4034.4121">once(event: "error", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4043.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="4047.3672">once(event: "finish", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4056.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="27" y="4060.3223">once(event: "pipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4069.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="27" y="4073.2773">once(event: "unpipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4082.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="332" x="27" y="4086.2324">once(event: string | symbol, listener: Function) : ClientRequest</text><ellipse cx="18" cy="4095.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="4099.1875">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="4108.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="4112.1426">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="4121.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="27" y="4125.0977">onSocket(socket: Socket) : void</text><ellipse cx="18" cy="4134.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="4138.0527">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="4147.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="350" x="27" y="4151.0078">prependListener(event: "abort", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4160.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="364" x="27" y="4163.9629">prependListener(event: "connect", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4173.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="27" y="4176.918">prependListener(event: "continue", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4186.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="384" x="27" y="4189.873">prependListener(event: "information", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4199.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="371" x="27" y="4202.8281">prependListener(event: "response", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4212.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="27" y="4215.7832">prependListener(event: "socket", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4225.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="27" y="4228.7383">prependListener(event: "timeout", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4238.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="4241.6934">prependListener(event: "upgrade", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4251.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="27" y="4254.6484">prependListener(event: "close", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4263.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="27" y="4267.6035">prependListener(event: "drain", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4276.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="27" y="4280.5586">prependListener(event: "error", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4289.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="27" y="4293.5137">prependListener(event: "finish", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4302.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="27" y="4306.4688">prependListener(event: "pipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4315.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="27" y="4319.4238">prependListener(event: "unpipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4328.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="394" x="27" y="4332.3789">prependListener(event: string | symbol, listener: Function) : ClientRequest</text><ellipse cx="18" cy="4341.6992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="378" x="27" y="4345.334">prependOnceListener(event: "abort", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4354.6543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="27" y="4358.2891">prependOnceListener(event: "connect", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4367.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="27" y="4371.2441">prependOnceListener(event: "continue", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4380.5645" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="27" y="4384.1992">prependOnceListener(event: "information", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4393.5195" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="399" x="27" y="4397.1543">prependOnceListener(event: "response", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4406.4746" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="384" x="27" y="4410.1094">prependOnceListener(event: "socket", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4419.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="27" y="4423.0645">prependOnceListener(event: "timeout", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4432.3848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="394" x="27" y="4436.0195">prependOnceListener(event: "upgrade", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4445.3398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="377" x="27" y="4448.9746">prependOnceListener(event: "close", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4458.2949" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="377" x="27" y="4461.9297">prependOnceListener(event: "drain", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4471.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="377" x="27" y="4474.8848">prependOnceListener(event: "error", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4484.2051" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="379" x="27" y="4487.8398">prependOnceListener(event: "finish", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4497.1602" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="27" y="4500.7949">prependOnceListener(event: "pipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4510.1152" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="27" y="4513.75">prependOnceListener(event: "unpipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4523.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="422" x="27" y="4526.7051">prependOnceListener(event: string | symbol, listener: Function) : ClientRequest</text><ellipse cx="18" cy="4536.0254" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="4539.6602">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="4548.9805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="4552.6152">removeAllListeners(event: string | symbol) : ClientRequest</text><ellipse cx="18" cy="4561.9355" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="27" y="4565.5703">removeHeader(name: string) : void</text><ellipse cx="18" cy="4574.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="27" y="4578.5254">removeListener(event: "close", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4587.8457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="27" y="4591.4805">removeListener(event: "drain", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4600.8008" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="27" y="4604.4355">removeListener(event: "error", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4613.7559" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="4617.3906">removeListener(event: "finish", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4626.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="339" x="27" y="4630.3457">removeListener(event: "pipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4639.666" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="27" y="4643.3008">removeListener(event: "unpipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="4652.6211" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="389" x="27" y="4656.2559">removeListener(event: string | symbol, listener: Function) : ClientRequest</text><ellipse cx="18" cy="4665.5762" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="27" y="4669.2109">setDefaultEncoding(encoding: BufferEncoding) : ClientRequest</text><ellipse cx="18" cy="4678.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="436" x="27" y="4682.166">setHeader(name: string, value: string | number | readonly string[]) : ClientRequest</text><ellipse cx="18" cy="4691.4863" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="4695.1211">setMaxListeners(n: number) : ClientRequest</text><ellipse cx="18" cy="4704.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="192" x="27" y="4708.0762">setNoDelay(noDelay: boolean) : void</text><ellipse cx="18" cy="4717.3965" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="339" x="27" y="4721.0313">setSocketKeepAlive(enable: boolean, initialDelay: number) : void</text><ellipse cx="18" cy="4730.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="342" x="27" y="4733.9863">setTimeout(timeout: number, callback: Function) : ClientRequest</text><ellipse cx="18" cy="4743.3066" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="27" y="4746.9414">uncork() : void</text><ellipse cx="18" cy="4756.2617" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="4759.8965">write(chunk: any, callback: Function) : boolean</text><ellipse cx="18" cy="4769.2168" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="27" y="4772.8516">write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean</text><ellipse cx="18" cy="4782.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="4785.8066">_construct(callback: Function) : void</text><ellipse cx="18" cy="4795.127" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="4798.7617">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="4808.082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="27" y="4811.7168">_final(callback: Function) : void</text><ellipse cx="18" cy="4821.0371" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="27" y="4824.6719">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="18" cy="4833.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="27" y="4837.627">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[54f74e101d05a9e9a2c879a3bc5d61b3]
reverse link Writable to OutgoingMessage--><path codeLine="204" d="M325.5,1228.06 C325.5,1241.26 325.5,1254.49 325.5,1267.74 " fill="none" id="Writable-backto-OutgoingMessage" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="318.5,1228.06,325.5,1208.06,332.5,1228.06,318.5,1228.06" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[68565e79af15f9a1434ccb3f1786a2ba]
reverse link OutgoingMessage to ClientRequest--><path codeLine="364" d="M325.5,2722.14 C325.5,2735.37 325.5,2748.65 325.5,2761.97 " fill="none" id="OutgoingMessage-backto-ClientRequest" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="318.5,2722.1,325.5,2702.1,332.5,2722.1,318.5,2722.1" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[4e9d974bb03d6a6d66a1565ce24db472]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "OutgoingMessage" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    +chunkedEncoding : boolean
    +connection : null | Socket
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +finished : boolean
    +headersSent : boolean
    +req : IncomingMessage
    +sendDate : boolean
    +shouldKeepAlive : boolean
    +socket : null | Socket
    +useChunkedEncodingByDefault : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : OutgoingMessage
    +addListener(event: "drain", listener: Function) : OutgoingMessage
    +addListener(event: "error", listener: Function) : OutgoingMessage
    +addListener(event: "finish", listener: Function) : OutgoingMessage
    +addListener(event: "pipe", listener: Function) : OutgoingMessage
    +addListener(event: "unpipe", listener: Function) : OutgoingMessage
    +addListener(event: string | symbol, listener: Function) : OutgoingMessage
    +addTrailers(headers: OutgoingHttpHeaders | readonly [string, string][]) : void
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "drain") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "finish") : boolean
    +emit(event: "pipe", src: Readable) : boolean
    +emit(event: "unpipe", src: Readable) : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    +flushHeaders() : void
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getHeader(name: string) : undefined | string | number | string[]
    +getHeaderNames() : string[]
    +getHeaders() : OutgoingHttpHeaders
    +getMaxListeners() : number
    +hasHeader(name: string) : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : OutgoingMessage
    +on(event: "close", listener: Function) : OutgoingMessage
    +on(event: "drain", listener: Function) : OutgoingMessage
    +on(event: "error", listener: Function) : OutgoingMessage
    +on(event: "finish", listener: Function) : OutgoingMessage
    +on(event: "pipe", listener: Function) : OutgoingMessage
    +on(event: "unpipe", listener: Function) : OutgoingMessage
    +on(event: string | symbol, listener: Function) : OutgoingMessage
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : OutgoingMessage
    +once(event: "drain", listener: Function) : OutgoingMessage
    +once(event: "error", listener: Function) : OutgoingMessage
    +once(event: "finish", listener: Function) : OutgoingMessage
    +once(event: "pipe", listener: Function) : OutgoingMessage
    +once(event: "unpipe", listener: Function) : OutgoingMessage
    +once(event: string | symbol, listener: Function) : OutgoingMessage
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : OutgoingMessage
    +prependListener(event: "drain", listener: Function) : OutgoingMessage
    +prependListener(event: "error", listener: Function) : OutgoingMessage
    +prependListener(event: "finish", listener: Function) : OutgoingMessage
    +prependListener(event: "pipe", listener: Function) : OutgoingMessage
    +prependListener(event: "unpipe", listener: Function) : OutgoingMessage
    +prependListener(event: string | symbol, listener: Function) : OutgoingMessage
    +prependOnceListener(event: "close", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "drain", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "error", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "finish", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "pipe", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "unpipe", listener: Function) : OutgoingMessage
    +prependOnceListener(event: string | symbol, listener: Function) : OutgoingMessage
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : OutgoingMessage
    +removeHeader(name: string) : void
    +removeListener(event: "close", listener: Function) : OutgoingMessage
    +removeListener(event: "drain", listener: Function) : OutgoingMessage
    +removeListener(event: "error", listener: Function) : OutgoingMessage
    +removeListener(event: "finish", listener: Function) : OutgoingMessage
    +removeListener(event: "pipe", listener: Function) : OutgoingMessage
    +removeListener(event: "unpipe", listener: Function) : OutgoingMessage
    +removeListener(event: string | symbol, listener: Function) : OutgoingMessage
    +setDefaultEncoding(encoding: BufferEncoding) : OutgoingMessage
    +setHeader(name: string, value: string | number | readonly string[]) : OutgoingMessage
    +setMaxListeners(n: number) : OutgoingMessage
    +setTimeout(msecs: number, callback: Function) : OutgoingMessage
    +uncork() : void
    +write(chunk: any, callback: Function) : boolean
    +write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
class "Writable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Writable
    +addListener(event: "drain", listener: Function) : Writable
    +addListener(event: "error", listener: Function) : Writable
    +addListener(event: "finish", listener: Function) : Writable
    +addListener(event: "pipe", listener: Function) : Writable
    +addListener(event: "unpipe", listener: Function) : Writable
    +addListener(event: string | symbol, listener: Function) : Writable
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "drain") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "finish") : boolean
    +emit(event: "pipe", src: Readable) : boolean
    +emit(event: "unpipe", src: Readable) : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Writable
    +on(event: "close", listener: Function) : Writable
    +on(event: "drain", listener: Function) : Writable
    +on(event: "error", listener: Function) : Writable
    +on(event: "finish", listener: Function) : Writable
    +on(event: "pipe", listener: Function) : Writable
    +on(event: "unpipe", listener: Function) : Writable
    +on(event: string | symbol, listener: Function) : Writable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Writable
    +once(event: "drain", listener: Function) : Writable
    +once(event: "error", listener: Function) : Writable
    +once(event: "finish", listener: Function) : Writable
    +once(event: "pipe", listener: Function) : Writable
    +once(event: "unpipe", listener: Function) : Writable
    +once(event: string | symbol, listener: Function) : Writable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Writable
    +prependListener(event: "drain", listener: Function) : Writable
    +prependListener(event: "error", listener: Function) : Writable
    +prependListener(event: "finish", listener: Function) : Writable
    +prependListener(event: "pipe", listener: Function) : Writable
    +prependListener(event: "unpipe", listener: Function) : Writable
    +prependListener(event: string | symbol, listener: Function) : Writable
    +prependOnceListener(event: "close", listener: Function) : Writable
    +prependOnceListener(event: "drain", listener: Function) : Writable
    +prependOnceListener(event: "error", listener: Function) : Writable
    +prependOnceListener(event: "finish", listener: Function) : Writable
    +prependOnceListener(event: "pipe", listener: Function) : Writable
    +prependOnceListener(event: "unpipe", listener: Function) : Writable
    +prependOnceListener(event: string | symbol, listener: Function) : Writable
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Writable
    +removeListener(event: "close", listener: Function) : Writable
    +removeListener(event: "drain", listener: Function) : Writable
    +removeListener(event: "error", listener: Function) : Writable
    +removeListener(event: "finish", listener: Function) : Writable
    +removeListener(event: "pipe", listener: Function) : Writable
    +removeListener(event: "unpipe", listener: Function) : Writable
    +removeListener(event: string | symbol, listener: Function) : Writable
    +setDefaultEncoding(encoding: BufferEncoding) : Writable
    +setMaxListeners(n: number) : Writable
    +uncork() : void
    +write(chunk: any, callback: Function) : boolean
    +write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Writable" <|- - "OutgoingMessage"
class "ClientRequest" {
    +aborted : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    +chunkedEncoding : boolean
    +connection : null | Socket
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +finished : boolean
    +headersSent : boolean
    +host : string
    +method : string
    +path : string
    +protocol : string
    +req : IncomingMessage
    +sendDate : boolean
    +shouldKeepAlive : boolean
    +socket : null | Socket
    +useChunkedEncodingByDefault : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +abort() : void
    +addListener(event: "abort", listener: Function) : ClientRequest
    +addListener(event: "connect", listener: Function) : ClientRequest
    +addListener(event: "continue", listener: Function) : ClientRequest
    +addListener(event: "information", listener: Function) : ClientRequest
    +addListener(event: "response", listener: Function) : ClientRequest
    +addListener(event: "socket", listener: Function) : ClientRequest
    +addListener(event: "timeout", listener: Function) : ClientRequest
    +addListener(event: "upgrade", listener: Function) : ClientRequest
    +addListener(event: "close", listener: Function) : ClientRequest
    +addListener(event: "drain", listener: Function) : ClientRequest
    +addListener(event: "error", listener: Function) : ClientRequest
    +addListener(event: "finish", listener: Function) : ClientRequest
    +addListener(event: "pipe", listener: Function) : ClientRequest
    +addListener(event: "unpipe", listener: Function) : ClientRequest
    +addListener(event: string | symbol, listener: Function) : ClientRequest
    +addTrailers(headers: OutgoingHttpHeaders | readonly [string, string][]) : void
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "drain") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "finish") : boolean
    +emit(event: "pipe", src: Readable) : boolean
    +emit(event: "unpipe", src: Readable) : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    +flushHeaders() : void
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getHeader(name: string) : undefined | string | number | string[]
    +getHeaderNames() : string[]
    +getHeaders() : OutgoingHttpHeaders
    +getMaxListeners() : number
    +getRawHeaderNames() : string[]
    +hasHeader(name: string) : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : ClientRequest
    +on(event: "abort", listener: Function) : ClientRequest
    +on(event: "connect", listener: Function) : ClientRequest
    +on(event: "continue", listener: Function) : ClientRequest
    +on(event: "information", listener: Function) : ClientRequest
    +on(event: "response", listener: Function) : ClientRequest
    +on(event: "socket", listener: Function) : ClientRequest
    +on(event: "timeout", listener: Function) : ClientRequest
    +on(event: "upgrade", listener: Function) : ClientRequest
    +on(event: "close", listener: Function) : ClientRequest
    +on(event: "drain", listener: Function) : ClientRequest
    +on(event: "error", listener: Function) : ClientRequest
    +on(event: "finish", listener: Function) : ClientRequest
    +on(event: "pipe", listener: Function) : ClientRequest
    +on(event: "unpipe", listener: Function) : ClientRequest
    +on(event: string | symbol, listener: Function) : ClientRequest
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "abort", listener: Function) : ClientRequest
    +once(event: "connect", listener: Function) : ClientRequest
    +once(event: "continue", listener: Function) : ClientRequest
    +once(event: "information", listener: Function) : ClientRequest
    +once(event: "response", listener: Function) : ClientRequest
    +once(event: "socket", listener: Function) : ClientRequest
    +once(event: "timeout", listener: Function) : ClientRequest
    +once(event: "upgrade", listener: Function) : ClientRequest
    +once(event: "close", listener: Function) : ClientRequest
    +once(event: "drain", listener: Function) : ClientRequest
    +once(event: "error", listener: Function) : ClientRequest
    +once(event: "finish", listener: Function) : ClientRequest
    +once(event: "pipe", listener: Function) : ClientRequest
    +once(event: "unpipe", listener: Function) : ClientRequest
    +once(event: string | symbol, listener: Function) : ClientRequest
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +onSocket(socket: Socket) : void
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "abort", listener: Function) : ClientRequest
    +prependListener(event: "connect", listener: Function) : ClientRequest
    +prependListener(event: "continue", listener: Function) : ClientRequest
    +prependListener(event: "information", listener: Function) : ClientRequest
    +prependListener(event: "response", listener: Function) : ClientRequest
    +prependListener(event: "socket", listener: Function) : ClientRequest
    +prependListener(event: "timeout", listener: Function) : ClientRequest
    +prependListener(event: "upgrade", listener: Function) : ClientRequest
    +prependListener(event: "close", listener: Function) : ClientRequest
    +prependListener(event: "drain", listener: Function) : ClientRequest
    +prependListener(event: "error", listener: Function) : ClientRequest
    +prependListener(event: "finish", listener: Function) : ClientRequest
    +prependListener(event: "pipe", listener: Function) : ClientRequest
    +prependListener(event: "unpipe", listener: Function) : ClientRequest
    +prependListener(event: string | symbol, listener: Function) : ClientRequest
    +prependOnceListener(event: "abort", listener: Function) : ClientRequest
    +prependOnceListener(event: "connect", listener: Function) : ClientRequest
    +prependOnceListener(event: "continue", listener: Function) : ClientRequest
    +prependOnceListener(event: "information", listener: Function) : ClientRequest
    +prependOnceListener(event: "response", listener: Function) : ClientRequest
    +prependOnceListener(event: "socket", listener: Function) : ClientRequest
    +prependOnceListener(event: "timeout", listener: Function) : ClientRequest
    +prependOnceListener(event: "upgrade", listener: Function) : ClientRequest
    +prependOnceListener(event: "close", listener: Function) : ClientRequest
    +prependOnceListener(event: "drain", listener: Function) : ClientRequest
    +prependOnceListener(event: "error", listener: Function) : ClientRequest
    +prependOnceListener(event: "finish", listener: Function) : ClientRequest
    +prependOnceListener(event: "pipe", listener: Function) : ClientRequest
    +prependOnceListener(event: "unpipe", listener: Function) : ClientRequest
    +prependOnceListener(event: string | symbol, listener: Function) : ClientRequest
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : ClientRequest
    +removeHeader(name: string) : void
    +removeListener(event: "close", listener: Function) : ClientRequest
    +removeListener(event: "drain", listener: Function) : ClientRequest
    +removeListener(event: "error", listener: Function) : ClientRequest
    +removeListener(event: "finish", listener: Function) : ClientRequest
    +removeListener(event: "pipe", listener: Function) : ClientRequest
    +removeListener(event: "unpipe", listener: Function) : ClientRequest
    +removeListener(event: string | symbol, listener: Function) : ClientRequest
    +setDefaultEncoding(encoding: BufferEncoding) : ClientRequest
    +setHeader(name: string, value: string | number | readonly string[]) : ClientRequest
    +setMaxListeners(n: number) : ClientRequest
    +setNoDelay(noDelay: boolean) : void
    +setSocketKeepAlive(enable: boolean, initialDelay: number) : void
    +setTimeout(timeout: number, callback: Function) : ClientRequest
    +uncork() : void
    +write(chunk: any, callback: Function) : boolean
    +write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"OutgoingMessage" <|- - "ClientRequest"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>