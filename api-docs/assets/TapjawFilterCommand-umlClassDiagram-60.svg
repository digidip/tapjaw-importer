<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="298px" preserveAspectRatio="none" style="width:820px;height:298px;background:#00000000;" version="1.1" viewBox="0 0 820 298" width="820px" zoomAndPan="magnify"><defs><filter height="300%" id="f1vw92h03gvkma" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[786b970dcd9b0356df190a74348f79ec]
class TapjawFilterCommand<T, M>--><rect codeLine="4" fill="#FEFECE" filter="url(#f1vw92h03gvkma)" height="164.5957" id="TapjawFilterCommand&lt;T, M&gt;" style="stroke:#A80036;stroke-width:1.5;" width="797" x="9" y="120"/><ellipse cx="315.25" cy="136" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M315.1133,131.3481 L313.9595,136.4199 L316.2754,136.4199 Z M313.6191,129.1069 L316.6157,129.1069 L319.9609,141.5 L317.5122,141.5 L316.7485,138.437 L313.4697,138.437 L312.7227,141.5 L310.2739,141.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="176" x="335.75" y="140.5352">TapjawFilterCommand&lt;T, M&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="805" y1="152" y2="152"/><polygon fill="none" points="20,158,24,162,20,166,16,162" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="176" x="29" y="166.6348">displayJsonParseErrors : boolean</text><polygon fill="none" points="20,170.9551,24,174.9551,20,178.9551,16,174.9551" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="29" y="179.5898">stdin : ReadableStream</text><polygon fill="none" points="20,183.9102,24,187.9102,20,191.9102,16,187.9102" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="29" y="192.5449">stdout : WritableStream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="805" y1="198.8652" y2="198.8652"/><ellipse cx="20" cy="209.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="190" x="29" y="213.5">register(program: Command) : void</text><ellipse cx="20" cy="222.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="619" x="29" y="226.4551">run(args: TapjawCommandArgs&lt;unknown&gt;, flags: T &amp; TapjawCommandDefaultFlags&lt;unknown&gt;) : Promise&lt;void&gt;</text><polygon fill="#FFFF44" points="20,230.7754,24,234.7754,20,238.7754,16,234.7754" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="29" y="239.4102">emit(message: M) : void</text><polygon fill="#FFFF44" points="20,243.7305,24,247.7305,20,251.7305,16,247.7305" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="147" x="29" y="252.3652">getLogger() : TapjawLogger</text><polygon fill="#FFFF44" points="20,256.6855,24,260.6855,20,264.6855,16,260.6855" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="29" y="265.3203">onBeforeExit() : Promise&lt;void&gt;</text><polygon fill="#FFFF44" points="20,269.6406,24,273.6406,20,277.6406,16,273.6406" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="771" x="29" y="278.2754">onMessageFilter(message: M, args: TapjawCommandArgs&lt;unknown&gt;, flags: T &amp; TapjawCommandDefaultFlags&lt;unknown&gt;) : Promise&lt;null | M&gt;</text><!--MD5=[19bf86b96bfaa3bab18522b2cc172216]
class TapjawCommand--><rect codeLine="15" fill="#FEFECE" filter="url(#f1vw92h03gvkma)" height="52.9551" id="TapjawCommand" style="stroke:#A80036;stroke-width:1.5;" width="233" x="291" y="7"/><ellipse cx="352.25" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M348.6777,19.2651 L348.6777,17.1069 L356.0571,17.1069 L356.0571,19.2651 L353.5918,19.2651 L353.5918,27.3418 L356.0571,27.3418 L356.0571,29.5 L348.6777,29.5 L348.6777,27.3418 L351.1431,27.3418 L351.1431,19.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="102" x="372.75" y="27.5352">TapjawCommand</text><line style="stroke:#A80036;stroke-width:1.5;" x1="292" x2="523" y1="39" y2="39"/><ellipse cx="302" cy="50" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="311" y="53.6348">run(args: unknown[]) : Promise&lt;void&gt;</text><!--MD5=[b1948ab38ab3f21155c85993d591f127]
reverse link TapjawCommand to TapjawFilterCommand<T, M>--><path codeLine="18" d="M407.5,80.41 C407.5,92.6 407.5,106.15 407.5,119.64 " fill="none" id="TapjawCommand-backto-TapjawFilterCommand&lt;T, M&gt;" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="400.5,80.23,407.5,60.23,414.5,80.23,400.5,80.23" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[fbae66c3a1f7753fa6294675eb7ae092]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
abstract class "TapjawFilterCommand<T, M>" {
    #displayJsonParseErrors : boolean
    #stdin : ReadableStream
    #stdout : WritableStream
    {static} +register(program: Command) : void
    +run(args: TapjawCommandArgs<unknown>, flags: T & TapjawCommandDefaultFlags<unknown>) : Promise<void>
    #emit(message: M) : void
    {static} #getLogger() : TapjawLogger
    #onBeforeExit() : Promise<void>
    {abstract} #onMessageFilter(message: M, args: TapjawCommandArgs<unknown>, flags: T & TapjawCommandDefaultFlags<unknown>) : Promise<null | M>
}
interface "TapjawCommand" {
    +run(args: unknown[]) : Promise<void>
}
"TapjawCommand" <|.. "TapjawFilterCommand<T, M>"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>