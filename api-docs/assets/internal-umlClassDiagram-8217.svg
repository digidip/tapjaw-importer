<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1567px" preserveAspectRatio="none" style="width:658px;height:1567px;background:#00000000;" version="1.1" viewBox="0 0 658 1567" width="658px" zoomAndPan="magnify"><defs><filter height="300%" id="f1lnl5t4v433bt" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[bf3e9baaddb7bbb8eafc257981afc540]
class internal--><rect codeLine="4" fill="#FEFECE" filter="url(#f1lnl5t4v433bt)" height="371.877" id="internal" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="426"/><ellipse cx="299.75" cy="442" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M302.2231,448.1431 Q301.6421,448.4419 301.0029,448.5913 Q300.3638,448.7407 299.6582,448.7407 Q297.1514,448.7407 295.8315,447.0889 Q294.5117,445.437 294.5117,442.3159 Q294.5117,439.1865 295.8315,437.5347 Q297.1514,435.8828 299.6582,435.8828 Q300.3638,435.8828 301.0112,436.0322 Q301.6587,436.1816 302.2231,436.4805 L302.2231,439.2031 Q301.5923,438.6221 300.9988,438.3523 Q300.4053,438.0825 299.7744,438.0825 Q298.4297,438.0825 297.7449,439.1492 Q297.0601,440.2158 297.0601,442.3159 Q297.0601,444.4077 297.7449,445.4744 Q298.4297,446.541 299.7744,446.541 Q300.4053,446.541 300.9988,446.2712 Q301.5923,446.0015 302.2231,445.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="43" x="320.25" y="446.5352">internal</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="458" y2="458"/><ellipse cx="18" cy="469" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="472.6348">captureRejections : boolean</text><ellipse cx="18" cy="481.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="485.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="494.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="498.5449">defaultMaxListeners : number</text><ellipse cx="18" cy="507.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="511.5">errorMonitor : typeof errorMonitor</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="517.8203" y2="517.8203"/><ellipse cx="18" cy="528.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="532.4551">addListener(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="18" cy="541.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="545.4102">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="554.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="558.3652">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="567.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="571.3203">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="580.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="584.2754">getMaxListeners() : number</text><ellipse cx="18" cy="593.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="597.2305">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="606.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="610.1855">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="619.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="623.1406">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="632.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="636.0957">off(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="18" cy="645.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="27" y="649.0508">on(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="18" cy="658.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="662.0059">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="671.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="27" y="674.9609">once(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="18" cy="684.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="687.916">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="697.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="700.8711">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="710.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="713.8262">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="723.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="27" y="726.7813">prependListener(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="18" cy="736.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="419" x="27" y="739.7363">prependOnceListener(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="18" cy="749.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="752.6914">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="762.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="27" y="765.6465">removeAllListeners(event: string | symbol) : internal</text><ellipse cx="18" cy="774.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="27" y="778.6016">removeListener(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="18" cy="787.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="27" y="791.5566">setMaxListeners(n: number) : internal</text><!--MD5=[f00238d7d3b345818710a28959a0e6a6]
class EventEmitter--><rect codeLine="31" fill="#FEFECE" filter="url(#f1lnl5t4v433bt)" height="358.9219" id="EventEmitter" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="7"/><ellipse cx="285.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M287.7231,29.1431 Q287.1421,29.4419 286.5029,29.5913 Q285.8638,29.7407 285.1582,29.7407 Q282.6514,29.7407 281.3315,28.0889 Q280.0117,26.437 280.0117,23.3159 Q280.0117,20.1865 281.3315,18.5347 Q282.6514,16.8828 285.1582,16.8828 Q285.8638,16.8828 286.5112,17.0322 Q287.1587,17.1816 287.7231,17.4805 L287.7231,20.2031 Q287.0923,19.6221 286.4988,19.3523 Q285.9053,19.0825 285.2744,19.0825 Q283.9297,19.0825 283.2449,20.1492 Q282.5601,21.2158 282.5601,23.3159 Q282.5601,25.4077 283.2449,26.4744 Q283.9297,27.541 285.2744,27.541 Q285.9053,27.541 286.4988,27.2712 Q287.0923,27.0015 287.7231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="72" x="305.75" y="27.5352">EventEmitter</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="39" y2="39"/><ellipse cx="18" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="53.6348">captureRejections : boolean</text><ellipse cx="18" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="66.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="75.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="79.5449">defaultMaxListeners : number</text><ellipse cx="18" cy="88.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="92.5">errorMonitor : typeof errorMonitor</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="98.8203" y2="98.8203"/><ellipse cx="18" cy="109.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="27" y="113.4551">addListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="122.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="126.4102">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="135.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="139.3652">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="148.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="152.3203">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="161.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="165.2754">getMaxListeners() : number</text><ellipse cx="18" cy="174.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="178.2305">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="187.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="191.1855">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="200.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="204.1406">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="213.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="27" y="217.0957">off(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="226.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="230.0508">on(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="239.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="243.0059">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="252.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="255.9609">once(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="265.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="268.916">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="278.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="281.8711">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="291.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="27" y="294.8262">prependListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="304.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="445" x="27" y="307.7813">prependOnceListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="317.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="320.7363">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="27" y="333.6914">removeAllListeners(event: string | symbol) : EventEmitter</text><ellipse cx="18" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="27" y="346.6465">removeListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="27" y="359.6016">setMaxListeners(n: number) : EventEmitter</text><!--MD5=[d71ee11ede0e83c966e8ef97d9465fe6]
class Stream--><rect codeLine="86" fill="#FEFECE" filter="url(#f1lnl5t4v433bt)" height="695.7539" id="Stream" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="858"/><ellipse cx="301.25" cy="874" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M303.7231,880.1431 Q303.1421,880.4419 302.5029,880.5913 Q301.8638,880.7407 301.1582,880.7407 Q298.6514,880.7407 297.3315,879.0889 Q296.0117,877.437 296.0117,874.3159 Q296.0117,871.1865 297.3315,869.5347 Q298.6514,867.8828 301.1582,867.8828 Q301.8638,867.8828 302.5112,868.0322 Q303.1587,868.1816 303.7231,868.4805 L303.7231,871.2031 Q303.0923,870.6221 302.4988,870.3523 Q301.9053,870.0825 301.2744,870.0825 Q299.9297,870.0825 299.2449,871.1492 Q298.5601,872.2158 298.5601,874.3159 Q298.5601,876.4077 299.2449,877.4744 Q299.9297,878.541 301.2744,878.541 Q301.9053,878.541 302.4988,878.2712 Q303.0923,878.0015 303.7231,877.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="40" x="321.75" y="878.5352">Stream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="890" y2="890"/><ellipse cx="18" cy="901" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="904.6348">captureRejections : boolean</text><ellipse cx="18" cy="913.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="917.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="926.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="930.5449">defaultMaxListeners : number</text><ellipse cx="18" cy="939.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="943.5">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="952.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="956.4551">captureRejections : boolean</text><ellipse cx="18" cy="965.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="969.4102">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="978.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="982.3652">defaultMaxListeners : number</text><ellipse cx="18" cy="991.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="995.3203">errorMonitor : typeof errorMonitor</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="1001.6406" y2="1001.6406"/><ellipse cx="18" cy="1012.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="27" y="1016.2754">addListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="1025.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="1029.2305">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="1038.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="1042.1855">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="1051.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="1055.1406">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="1064.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="1068.0957">getMaxListeners() : number</text><ellipse cx="18" cy="1077.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="1081.0508">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="1090.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="1094.0059">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="1103.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="1106.9609">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="1116.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="314" x="27" y="1119.916">off(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="1129.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="1132.8711">on(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="1142.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="1145.8262">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="1155.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="1158.7813">once(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="1168.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="1171.7363">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="1181.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="1184.6914">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="1194.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="1197.6465">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="1206.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="387" x="27" y="1210.6016">prependListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="1219.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="27" y="1223.5566">prependOnceListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="1232.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="1236.5117">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="1245.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="27" y="1249.4668">removeAllListeners(event: string | symbol) : Stream</text><ellipse cx="18" cy="1258.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="382" x="27" y="1262.4219">removeListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="1271.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="27" y="1275.377">setMaxListeners(n: number) : Stream</text><ellipse cx="18" cy="1284.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="27" y="1288.332">addListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="1297.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="1301.2871">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="1310.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="1314.2422">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="1323.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="1327.1973">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="1336.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="1340.1523">getMaxListeners() : number</text><ellipse cx="18" cy="1349.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="1353.1074">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="1362.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="1366.0625">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="1375.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="1379.0176">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="1388.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="314" x="27" y="1391.9727">off(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="1401.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="1404.9277">on(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="1414.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="1417.8828">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="1427.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="1430.8379">once(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="1440.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="1443.793">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="1453.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="1456.748">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="1466.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="1469.7031">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="1479.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="387" x="27" y="1482.6582">prependListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="1491.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="27" y="1495.6133">prependOnceListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="1504.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="1508.5684">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="1517.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="27" y="1521.5234">removeAllListeners(event: string | symbol) : Stream</text><ellipse cx="18" cy="1530.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="382" x="27" y="1534.4785">removeListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="1543.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="27" y="1547.4336">setMaxListeners(n: number) : Stream</text><!--MD5=[3d470edd04d10a06952846cd9664e40a]
reverse link EventEmitter to internal--><path codeLine="57" d="M325.5,386.21 C325.5,399.46 325.5,412.77 325.5,425.95 " fill="none" id="EventEmitter-backto-internal" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="318.5,386.18,325.5,366.18,332.5,386.18,318.5,386.18" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[d85e27ef9cf3e1d32e4e649c554601a0]
reverse link internal to Stream--><path codeLine="85" d="M313.3,818.37 C313.14,831.3 313.01,844.49 312.92,857.82 " fill="none" id="internal-backto-Stream" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="306.3,818.18,313.58,798.28,320.3,818.38,306.3,818.18" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[d85e27ef9cf3e1d32e4e649c554601a0]
reverse link internal to Stream--><path codeLine="113" d="M338.42,818.37 C338.59,831.3 338.72,844.49 338.82,857.82 " fill="none" id="internal-backto-Stream-1" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="331.42,818.38,338.12,798.28,345.42,818.18,331.42,818.38" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[12e4b77b2f610af58a18497c7e774253]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "internal" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +addListener(eventName: string | symbol, listener: Function) : internal
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : internal
    +on(eventName: string | symbol, listener: Function) : internal
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(eventName: string | symbol, listener: Function) : internal
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : internal
    +prependOnceListener(eventName: string | symbol, listener: Function) : internal
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : internal
    +removeListener(eventName: string | symbol, listener: Function) : internal
    +setMaxListeners(n: number) : internal
}
class "EventEmitter" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +addListener(eventName: string | symbol, listener: Function) : EventEmitter
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : EventEmitter
    +on(eventName: string | symbol, listener: Function) : EventEmitter
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(eventName: string | symbol, listener: Function) : EventEmitter
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : EventEmitter
    +prependOnceListener(eventName: string | symbol, listener: Function) : EventEmitter
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : EventEmitter
    +removeListener(eventName: string | symbol, listener: Function) : EventEmitter
    +setMaxListeners(n: number) : EventEmitter
}
"EventEmitter" <|- - "internal"
class "Stream" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +addListener(eventName: string | symbol, listener: Function) : Stream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Stream
    +on(eventName: string | symbol, listener: Function) : Stream
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(eventName: string | symbol, listener: Function) : Stream
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : Stream
    +prependOnceListener(eventName: string | symbol, listener: Function) : Stream
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Stream
    +removeListener(eventName: string | symbol, listener: Function) : Stream
    +setMaxListeners(n: number) : Stream
}
"internal" <|- - "Stream"
class "Stream" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +addListener(eventName: string | symbol, listener: Function) : Stream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Stream
    +on(eventName: string | symbol, listener: Function) : Stream
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(eventName: string | symbol, listener: Function) : Stream
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : Stream
    +prependOnceListener(eventName: string | symbol, listener: Function) : Stream
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Stream
    +removeListener(eventName: string | symbol, listener: Function) : Stream
    +setMaxListeners(n: number) : Stream
}
"internal" <|- - "Stream"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>