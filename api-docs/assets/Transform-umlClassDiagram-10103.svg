<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="4962px" preserveAspectRatio="none" style="width:821px;height:4962px;background:#00000000;" version="1.1" viewBox="0 0 821 4962" width="821px" zoomAndPan="magnify"><defs><filter height="300%" id="f1b6coe4laa8yd" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[004b1d6c4ca8aad4ba8b586a335ed4f3]
class Transform--><rect codeLine="4" fill="#FEFECE" filter="url(#f1b6coe4laa8yd)" height="1615.5645" id="Transform" style="stroke:#A80036;stroke-width:1.5;" width="800" x="7" y="1657"/><ellipse cx="372.75" cy="1673" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M375.2231,1679.1431 Q374.6421,1679.4419 374.0029,1679.5913 Q373.3638,1679.7407 372.6582,1679.7407 Q370.1514,1679.7407 368.8315,1678.0889 Q367.5117,1676.437 367.5117,1673.3159 Q367.5117,1670.1865 368.8315,1668.5347 Q370.1514,1666.8828 372.6582,1666.8828 Q373.3638,1666.8828 374.0112,1667.0322 Q374.6587,1667.1816 375.2231,1667.4805 L375.2231,1670.2031 Q374.5923,1669.6221 373.9988,1669.3523 Q373.4053,1669.0825 372.7744,1669.0825 Q371.4297,1669.0825 370.7449,1670.1492 Q370.0601,1671.2158 370.0601,1673.3159 Q370.0601,1675.4077 370.7449,1676.4744 Q371.4297,1677.541 372.7744,1677.541 Q373.4053,1677.541 373.9988,1677.2712 Q374.5923,1677.0015 375.2231,1676.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="60" x="393.25" y="1677.5352">Transform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="806" y1="1689" y2="1689"/><ellipse cx="18" cy="1700" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="1703.6348">allowHalfOpen : boolean</text><ellipse cx="18" cy="1712.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="1716.5898">captureRejections : boolean</text><ellipse cx="18" cy="1725.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="1729.5449">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="1738.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="1742.5">defaultMaxListeners : number</text><ellipse cx="18" cy="1751.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="1755.4551">destroyed : boolean</text><ellipse cx="18" cy="1764.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="1768.4102">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="1777.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="1781.3652">readable : boolean</text><ellipse cx="18" cy="1790.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="1794.3203">readableAborted : boolean</text><ellipse cx="18" cy="1803.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="1807.2754">readableDidRead : boolean</text><ellipse cx="18" cy="1816.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="27" y="1820.2305">readableEncoding : null | BufferEncoding</text><ellipse cx="18" cy="1829.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="27" y="1833.1855">readableEnded : boolean</text><ellipse cx="18" cy="1842.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="1846.1406">readableFlowing : null | boolean</text><ellipse cx="18" cy="1855.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="27" y="1859.0957">readableHighWaterMark : number</text><ellipse cx="18" cy="1868.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="1872.0508">readableLength : number</text><ellipse cx="18" cy="1881.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="27" y="1885.0059">readableObjectMode : boolean</text><ellipse cx="18" cy="1894.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="1897.9609">writable : boolean</text><ellipse cx="18" cy="1907.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="27" y="1910.916">writableCorked : number</text><ellipse cx="18" cy="1920.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="27" y="1923.8711">writableEnded : boolean</text><ellipse cx="18" cy="1933.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="1936.8262">writableFinished : boolean</text><ellipse cx="18" cy="1946.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="27" y="1949.7813">writableHighWaterMark : number</text><ellipse cx="18" cy="1959.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="27" y="1962.7363">writableLength : number</text><ellipse cx="18" cy="1972.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="1975.6914">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="806" y1="1982.0117" y2="1982.0117"/><ellipse cx="18" cy="1993.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="27" y="1996.6465">addListener(event: "close", listener: Function) : Transform</text><ellipse cx="18" cy="2005.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="27" y="2009.6016">addListener(event: "data", listener: Function) : Transform</text><ellipse cx="18" cy="2018.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="299" x="27" y="2022.5566">addListener(event: "end", listener: Function) : Transform</text><ellipse cx="18" cy="2031.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="27" y="2035.5117">addListener(event: "error", listener: Function) : Transform</text><ellipse cx="18" cy="2044.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="311" x="27" y="2048.4668">addListener(event: "pause", listener: Function) : Transform</text><ellipse cx="18" cy="2057.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="2061.4219">addListener(event: "readable", listener: Function) : Transform</text><ellipse cx="18" cy="2070.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="27" y="2074.377">addListener(event: "resume", listener: Function) : Transform</text><ellipse cx="18" cy="2083.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="352" x="27" y="2087.332">addListener(event: string | symbol, listener: Function) : Transform</text><ellipse cx="18" cy="2096.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="27" y="2100.2871">cork() : void</text><ellipse cx="18" cy="2109.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="27" y="2113.2422">destroy(error: Error) : void</text><ellipse cx="18" cy="2122.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="2126.1973">emit(event: "close") : boolean</text><ellipse cx="18" cy="2135.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="27" y="2139.1523">emit(event: "data", chunk: any) : boolean</text><ellipse cx="18" cy="2148.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="2152.1074">emit(event: "end") : boolean</text><ellipse cx="18" cy="2161.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="2165.0625">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="2174.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="2178.0176">emit(event: "pause") : boolean</text><ellipse cx="18" cy="2187.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="27" y="2190.9727">emit(event: "readable") : boolean</text><ellipse cx="18" cy="2200.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="27" y="2203.9277">emit(event: "resume") : boolean</text><ellipse cx="18" cy="2213.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="2216.8828">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="2226.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="27" y="2229.8379">end(cb: Function) : void</text><ellipse cx="18" cy="2239.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="27" y="2242.793">end(chunk: any, cb: Function) : void</text><ellipse cx="18" cy="2252.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="27" y="2255.748">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="18" cy="2265.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="2268.7031">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="2278.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="27" y="2281.6582">from(src: string | Object | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt; | Promise&lt;any&gt; | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex</text><ellipse cx="18" cy="2290.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="2294.6133">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="2303.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="2307.5684">getMaxListeners() : number</text><ellipse cx="18" cy="2316.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="27" y="2320.5234">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="18" cy="2329.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="2333.4785">isPaused() : boolean</text><ellipse cx="18" cy="2342.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="2346.4336">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="2355.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="2359.3887">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="2368.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="2372.3438">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="2381.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="27" y="2385.2988">off(eventName: string | symbol, listener: Function) : Transform</text><ellipse cx="18" cy="2394.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="27" y="2398.2539">on(event: "close", listener: Function) : Transform</text><ellipse cx="18" cy="2407.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="27" y="2411.209">on(event: "data", listener: Function) : Transform</text><ellipse cx="18" cy="2420.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="27" y="2424.1641">on(event: "end", listener: Function) : Transform</text><ellipse cx="18" cy="2433.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="27" y="2437.1191">on(event: "error", listener: Function) : Transform</text><ellipse cx="18" cy="2446.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="2450.0742">on(event: "pause", listener: Function) : Transform</text><ellipse cx="18" cy="2459.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="27" y="2463.0293">on(event: "readable", listener: Function) : Transform</text><ellipse cx="18" cy="2472.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="27" y="2475.9844">on(event: "resume", listener: Function) : Transform</text><ellipse cx="18" cy="2485.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="27" y="2488.9395">on(event: string | symbol, listener: Function) : Transform</text><ellipse cx="18" cy="2498.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="2501.8945">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="2511.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="27" y="2514.8496">once(event: "close", listener: Function) : Transform</text><ellipse cx="18" cy="2524.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="27" y="2527.8047">once(event: "data", listener: Function) : Transform</text><ellipse cx="18" cy="2537.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="2540.7598">once(event: "end", listener: Function) : Transform</text><ellipse cx="18" cy="2550.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="27" y="2553.7148">once(event: "error", listener: Function) : Transform</text><ellipse cx="18" cy="2563.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="27" y="2566.6699">once(event: "pause", listener: Function) : Transform</text><ellipse cx="18" cy="2575.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="27" y="2579.625">once(event: "readable", listener: Function) : Transform</text><ellipse cx="18" cy="2588.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="27" y="2592.5801">once(event: "resume", listener: Function) : Transform</text><ellipse cx="18" cy="2601.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="27" y="2605.5352">once(event: string | symbol, listener: Function) : Transform</text><ellipse cx="18" cy="2614.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="2618.4902">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="2627.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="2631.4453">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="2640.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="2644.4004">pause() : Transform</text><ellipse cx="18" cy="2653.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="2657.3555">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="2666.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="332" x="27" y="2670.3105">prependListener(event: "close", listener: Function) : Transform</text><ellipse cx="18" cy="2679.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="27" y="2683.2656">prependListener(event: "data", listener: Function) : Transform</text><ellipse cx="18" cy="2692.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="27" y="2696.2207">prependListener(event: "end", listener: Function) : Transform</text><ellipse cx="18" cy="2705.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="332" x="27" y="2709.1758">prependListener(event: "error", listener: Function) : Transform</text><ellipse cx="18" cy="2718.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="27" y="2722.1309">prependListener(event: "pause", listener: Function) : Transform</text><ellipse cx="18" cy="2731.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="350" x="27" y="2735.0859">prependListener(event: "readable", listener: Function) : Transform</text><ellipse cx="18" cy="2744.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="27" y="2748.041">prependListener(event: "resume", listener: Function) : Transform</text><ellipse cx="18" cy="2757.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="377" x="27" y="2760.9961">prependListener(event: string | symbol, listener: Function) : Transform</text><ellipse cx="18" cy="2770.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="27" y="2773.9512">prependOnceListener(event: "close", listener: Function) : Transform</text><ellipse cx="18" cy="2783.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="2786.9063">prependOnceListener(event: "data", listener: Function) : Transform</text><ellipse cx="18" cy="2796.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="352" x="27" y="2799.8613">prependOnceListener(event: "end", listener: Function) : Transform</text><ellipse cx="18" cy="2809.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="27" y="2812.8164">prependOnceListener(event: "error", listener: Function) : Transform</text><ellipse cx="18" cy="2822.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="364" x="27" y="2825.7715">prependOnceListener(event: "pause", listener: Function) : Transform</text><ellipse cx="18" cy="2835.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="378" x="27" y="2838.7266">prependOnceListener(event: "readable", listener: Function) : Transform</text><ellipse cx="18" cy="2848.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="27" y="2851.6816">prependOnceListener(event: "resume", listener: Function) : Transform</text><ellipse cx="18" cy="2861.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="27" y="2864.6367">prependOnceListener(event: string | symbol, listener: Function) : Transform</text><ellipse cx="18" cy="2873.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="2877.5918">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="18" cy="2886.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="2890.5469">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="2899.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="2903.502">read(size: number) : any</text><ellipse cx="18" cy="2912.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="27" y="2916.457">removeAllListeners(event: string | symbol) : Transform</text><ellipse cx="18" cy="2925.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="27" y="2929.4121">removeListener(event: "close", listener: Function) : Transform</text><ellipse cx="18" cy="2938.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="27" y="2942.3672">removeListener(event: "data", listener: Function) : Transform</text><ellipse cx="18" cy="2951.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="27" y="2955.3223">removeListener(event: "end", listener: Function) : Transform</text><ellipse cx="18" cy="2964.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="27" y="2968.2773">removeListener(event: "error", listener: Function) : Transform</text><ellipse cx="18" cy="2977.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="27" y="2981.2324">removeListener(event: "pause", listener: Function) : Transform</text><ellipse cx="18" cy="2990.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="27" y="2994.1875">removeListener(event: "readable", listener: Function) : Transform</text><ellipse cx="18" cy="3003.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="339" x="27" y="3007.1426">removeListener(event: "resume", listener: Function) : Transform</text><ellipse cx="18" cy="3016.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="27" y="3020.0977">removeListener(event: string | symbol, listener: Function) : Transform</text><ellipse cx="18" cy="3029.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="27" y="3033.0527">resume() : Transform</text><ellipse cx="18" cy="3042.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="27" y="3046.0078">setDefaultEncoding(encoding: BufferEncoding) : Transform</text><ellipse cx="18" cy="3055.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="3058.9629">setEncoding(encoding: BufferEncoding) : Transform</text><ellipse cx="18" cy="3068.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="27" y="3071.918">setMaxListeners(n: number) : Transform</text><ellipse cx="18" cy="3081.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="27" y="3084.873">uncork() : void</text><ellipse cx="18" cy="3094.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="27" y="3097.8281">unpipe(destination: WritableStream) : Transform</text><ellipse cx="18" cy="3107.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="27" y="3110.7832">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="18" cy="3120.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="228" x="27" y="3123.7383">wrap(stream: ReadableStream) : Transform</text><ellipse cx="18" cy="3133.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="27" y="3136.6934">write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="18" cy="3146.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="27" y="3149.6484">write(chunk: any, cb: Function) : boolean</text><ellipse cx="18" cy="3158.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="3162.6035">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="3171.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="3175.5586">_construct(callback: Function) : void</text><ellipse cx="18" cy="3184.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="3188.5137">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="3197.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="27" y="3201.4688">_final(callback: Function) : void</text><ellipse cx="18" cy="3210.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="224" x="27" y="3214.4238">_flush(callback: TransformCallback) : void</text><ellipse cx="18" cy="3223.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="3227.3789">_read(size: number) : void</text><ellipse cx="18" cy="3236.6992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="459" x="27" y="3240.334">_transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback) : void</text><ellipse cx="18" cy="3249.6543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="27" y="3253.2891">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="18" cy="3262.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="27" y="3266.2441">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[dbb0aac09fdd9457193737fcd885dcc9]
class Duplex--><rect codeLine="127" fill="#FEFECE" filter="url(#f1b6coe4laa8yd)" height="1589.6543" id="Duplex" style="stroke:#A80036;stroke-width:1.5;" width="800" x="7" y="7"/><ellipse cx="382.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M384.7231,29.1431 Q384.1421,29.4419 383.5029,29.5913 Q382.8638,29.7407 382.1582,29.7407 Q379.6514,29.7407 378.3315,28.0889 Q377.0117,26.437 377.0117,23.3159 Q377.0117,20.1865 378.3315,18.5347 Q379.6514,16.8828 382.1582,16.8828 Q382.8638,16.8828 383.5112,17.0322 Q384.1587,17.1816 384.7231,17.4805 L384.7231,20.2031 Q384.0923,19.6221 383.4988,19.3523 Q382.9053,19.0825 382.2744,19.0825 Q380.9297,19.0825 380.2449,20.1492 Q379.5601,21.2158 379.5601,23.3159 Q379.5601,25.4077 380.2449,26.4744 Q380.9297,27.541 382.2744,27.541 Q382.9053,27.541 383.4988,27.2712 Q384.0923,27.0015 384.7231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="41" x="402.75" y="27.5352">Duplex</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="806" y1="39" y2="39"/><ellipse cx="18" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="53.6348">allowHalfOpen : boolean</text><ellipse cx="18" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="66.5898">captureRejections : boolean</text><ellipse cx="18" cy="75.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="79.5449">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="88.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="92.5">defaultMaxListeners : number</text><ellipse cx="18" cy="101.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="105.4551">destroyed : boolean</text><ellipse cx="18" cy="114.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="118.4102">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="127.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="131.3652">readable : boolean</text><ellipse cx="18" cy="140.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="144.3203">readableAborted : boolean</text><ellipse cx="18" cy="153.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="157.2754">readableDidRead : boolean</text><ellipse cx="18" cy="166.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="27" y="170.2305">readableEncoding : null | BufferEncoding</text><ellipse cx="18" cy="179.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="27" y="183.1855">readableEnded : boolean</text><ellipse cx="18" cy="192.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="196.1406">readableFlowing : null | boolean</text><ellipse cx="18" cy="205.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="27" y="209.0957">readableHighWaterMark : number</text><ellipse cx="18" cy="218.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="222.0508">readableLength : number</text><ellipse cx="18" cy="231.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="27" y="235.0059">readableObjectMode : boolean</text><ellipse cx="18" cy="244.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="247.9609">writable : boolean</text><ellipse cx="18" cy="257.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="27" y="260.916">writableCorked : number</text><ellipse cx="18" cy="270.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="27" y="273.8711">writableEnded : boolean</text><ellipse cx="18" cy="283.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="286.8262">writableFinished : boolean</text><ellipse cx="18" cy="296.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="27" y="299.7813">writableHighWaterMark : number</text><ellipse cx="18" cy="309.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="27" y="312.7363">writableLength : number</text><ellipse cx="18" cy="322.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="325.6914">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="806" y1="332.0117" y2="332.0117"/><ellipse cx="18" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="27" y="346.6465">addListener(event: "close", listener: Function) : Duplex</text><ellipse cx="18" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="27" y="359.6016">addListener(event: "data", listener: Function) : Duplex</text><ellipse cx="18" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="27" y="372.5566">addListener(event: "end", listener: Function) : Duplex</text><ellipse cx="18" cy="381.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="27" y="385.5117">addListener(event: "error", listener: Function) : Duplex</text><ellipse cx="18" cy="394.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="398.4668">addListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="18" cy="407.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="27" y="411.4219">addListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="18" cy="420.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="27" y="424.377">addListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="18" cy="433.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="27" y="437.332">addListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="18" cy="446.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="27" y="450.2871">cork() : void</text><ellipse cx="18" cy="459.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="27" y="463.2422">destroy(error: Error) : void</text><ellipse cx="18" cy="472.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="476.1973">emit(event: "close") : boolean</text><ellipse cx="18" cy="485.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="27" y="489.1523">emit(event: "data", chunk: any) : boolean</text><ellipse cx="18" cy="498.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="502.1074">emit(event: "end") : boolean</text><ellipse cx="18" cy="511.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="515.0625">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="524.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="528.0176">emit(event: "pause") : boolean</text><ellipse cx="18" cy="537.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="27" y="540.9727">emit(event: "readable") : boolean</text><ellipse cx="18" cy="550.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="27" y="553.9277">emit(event: "resume") : boolean</text><ellipse cx="18" cy="563.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="566.8828">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="576.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="27" y="579.8379">end(cb: Function) : void</text><ellipse cx="18" cy="589.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="27" y="592.793">end(chunk: any, cb: Function) : void</text><ellipse cx="18" cy="602.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="27" y="605.748">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="18" cy="615.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="618.7031">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="628.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="27" y="631.6582">from(src: string | Object | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt; | Promise&lt;any&gt; | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex</text><ellipse cx="18" cy="640.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="644.6133">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="653.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="657.5684">getMaxListeners() : number</text><ellipse cx="18" cy="666.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="27" y="670.5234">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="18" cy="679.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="683.4785">isPaused() : boolean</text><ellipse cx="18" cy="692.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="696.4336">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="705.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="709.3887">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="718.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="722.3438">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="731.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="27" y="735.2988">off(eventName: string | symbol, listener: Function) : Duplex</text><ellipse cx="18" cy="744.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="27" y="748.2539">on(event: "close", listener: Function) : Duplex</text><ellipse cx="18" cy="757.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="27" y="761.209">on(event: "data", listener: Function) : Duplex</text><ellipse cx="18" cy="770.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="27" y="774.1641">on(event: "end", listener: Function) : Duplex</text><ellipse cx="18" cy="783.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="27" y="787.1191">on(event: "error", listener: Function) : Duplex</text><ellipse cx="18" cy="796.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="27" y="800.0742">on(event: "pause", listener: Function) : Duplex</text><ellipse cx="18" cy="809.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="27" y="813.0293">on(event: "readable", listener: Function) : Duplex</text><ellipse cx="18" cy="822.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="27" y="825.9844">on(event: "resume", listener: Function) : Duplex</text><ellipse cx="18" cy="835.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="27" y="838.9395">on(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="18" cy="848.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="851.8945">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="861.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="27" y="864.8496">once(event: "close", listener: Function) : Duplex</text><ellipse cx="18" cy="874.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="877.8047">once(event: "data", listener: Function) : Duplex</text><ellipse cx="18" cy="887.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="27" y="890.7598">once(event: "end", listener: Function) : Duplex</text><ellipse cx="18" cy="900.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="27" y="903.7148">once(event: "error", listener: Function) : Duplex</text><ellipse cx="18" cy="913.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="27" y="916.6699">once(event: "pause", listener: Function) : Duplex</text><ellipse cx="18" cy="925.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="27" y="929.625">once(event: "readable", listener: Function) : Duplex</text><ellipse cx="18" cy="938.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="27" y="942.5801">once(event: "resume", listener: Function) : Duplex</text><ellipse cx="18" cy="951.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="27" y="955.5352">once(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="18" cy="964.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="968.4902">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="977.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="981.4453">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="990.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="27" y="994.4004">pause() : Duplex</text><ellipse cx="18" cy="1003.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="1007.3555">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="1016.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="1020.3105">prependListener(event: "close", listener: Function) : Duplex</text><ellipse cx="18" cy="1029.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="27" y="1033.2656">prependListener(event: "data", listener: Function) : Duplex</text><ellipse cx="18" cy="1042.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="27" y="1046.2207">prependListener(event: "end", listener: Function) : Duplex</text><ellipse cx="18" cy="1055.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="1059.1758">prependListener(event: "error", listener: Function) : Duplex</text><ellipse cx="18" cy="1068.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="27" y="1072.1309">prependListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="18" cy="1081.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="27" y="1085.0859">prependListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="18" cy="1094.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="1098.041">prependListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="18" cy="1107.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="27" y="1110.9961">prependListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="18" cy="1120.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="27" y="1123.9512">prependOnceListener(event: "close", listener: Function) : Duplex</text><ellipse cx="18" cy="1133.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="27" y="1136.9063">prependOnceListener(event: "data", listener: Function) : Duplex</text><ellipse cx="18" cy="1146.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="27" y="1149.8613">prependOnceListener(event: "end", listener: Function) : Duplex</text><ellipse cx="18" cy="1159.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="27" y="1162.8164">prependOnceListener(event: "error", listener: Function) : Duplex</text><ellipse cx="18" cy="1172.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="27" y="1175.7715">prependOnceListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="18" cy="1185.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="27" y="1188.7266">prependOnceListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="18" cy="1198.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="27" y="1201.6816">prependOnceListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="18" cy="1211.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="27" y="1214.6367">prependOnceListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="18" cy="1223.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="1227.5918">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="18" cy="1236.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="1240.5469">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="1249.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="1253.502">read(size: number) : any</text><ellipse cx="18" cy="1262.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="27" y="1266.457">removeAllListeners(event: string | symbol) : Duplex</text><ellipse cx="18" cy="1275.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="27" y="1279.4121">removeListener(event: "close", listener: Function) : Duplex</text><ellipse cx="18" cy="1288.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="27" y="1292.3672">removeListener(event: "data", listener: Function) : Duplex</text><ellipse cx="18" cy="1301.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="27" y="1305.3223">removeListener(event: "end", listener: Function) : Duplex</text><ellipse cx="18" cy="1314.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="27" y="1318.2773">removeListener(event: "error", listener: Function) : Duplex</text><ellipse cx="18" cy="1327.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="27" y="1331.2324">removeListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="18" cy="1340.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="27" y="1344.1875">removeListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="18" cy="1353.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="27" y="1357.1426">removeListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="18" cy="1366.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="27" y="1370.0977">removeListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="18" cy="1379.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="27" y="1383.0527">resume() : Duplex</text><ellipse cx="18" cy="1392.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="27" y="1396.0078">setDefaultEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="18" cy="1405.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="27" y="1408.9629">setEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="18" cy="1418.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="27" y="1421.918">setMaxListeners(n: number) : Duplex</text><ellipse cx="18" cy="1431.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="27" y="1434.873">uncork() : void</text><ellipse cx="18" cy="1444.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="27" y="1447.8281">unpipe(destination: WritableStream) : Duplex</text><ellipse cx="18" cy="1457.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="27" y="1460.7832">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="18" cy="1470.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="27" y="1473.7383">wrap(stream: ReadableStream) : Duplex</text><ellipse cx="18" cy="1483.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="27" y="1486.6934">write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="18" cy="1496.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="27" y="1499.6484">write(chunk: any, cb: Function) : boolean</text><ellipse cx="18" cy="1508.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="1512.6035">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="1521.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="1525.5586">_construct(callback: Function) : void</text><ellipse cx="18" cy="1534.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="1538.5137">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="1547.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="27" y="1551.4688">_final(callback: Function) : void</text><ellipse cx="18" cy="1560.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="1564.4238">_read(size: number) : void</text><ellipse cx="18" cy="1573.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="27" y="1577.3789">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="18" cy="1586.6992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="27" y="1590.334">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[c332a8f2eb3e5e78a64cf1a468a953d8]
class PassThrough--><rect codeLine="249" fill="#FEFECE" filter="url(#f1b6coe4laa8yd)" height="1615.5645" id="PassThrough" style="stroke:#A80036;stroke-width:1.5;" width="800" x="7" y="3333"/><ellipse cx="365.75" cy="3349" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M368.2231,3355.1431 Q367.6421,3355.4419 367.0029,3355.5913 Q366.3638,3355.7407 365.6582,3355.7407 Q363.1514,3355.7407 361.8315,3354.0889 Q360.5117,3352.437 360.5117,3349.3159 Q360.5117,3346.1865 361.8315,3344.5347 Q363.1514,3342.8828 365.6582,3342.8828 Q366.3638,3342.8828 367.0112,3343.0322 Q367.6587,3343.1816 368.2231,3343.4805 L368.2231,3346.2031 Q367.5923,3345.6221 366.9988,3345.3523 Q366.4053,3345.0825 365.7744,3345.0825 Q364.4297,3345.0825 363.7449,3346.1492 Q363.0601,3347.2158 363.0601,3349.3159 Q363.0601,3351.4077 363.7449,3352.4744 Q364.4297,3353.541 365.7744,3353.541 Q366.4053,3353.541 366.9988,3353.2712 Q367.5923,3353.0015 368.2231,3352.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="74" x="386.25" y="3353.5352">PassThrough</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="806" y1="3365" y2="3365"/><ellipse cx="18" cy="3376" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="3379.6348">allowHalfOpen : boolean</text><ellipse cx="18" cy="3388.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="3392.5898">captureRejections : boolean</text><ellipse cx="18" cy="3401.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="3405.5449">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="3414.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="3418.5">defaultMaxListeners : number</text><ellipse cx="18" cy="3427.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="3431.4551">destroyed : boolean</text><ellipse cx="18" cy="3440.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="3444.4102">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="3453.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="3457.3652">readable : boolean</text><ellipse cx="18" cy="3466.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="3470.3203">readableAborted : boolean</text><ellipse cx="18" cy="3479.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="3483.2754">readableDidRead : boolean</text><ellipse cx="18" cy="3492.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="27" y="3496.2305">readableEncoding : null | BufferEncoding</text><ellipse cx="18" cy="3505.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="27" y="3509.1855">readableEnded : boolean</text><ellipse cx="18" cy="3518.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="3522.1406">readableFlowing : null | boolean</text><ellipse cx="18" cy="3531.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="27" y="3535.0957">readableHighWaterMark : number</text><ellipse cx="18" cy="3544.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="3548.0508">readableLength : number</text><ellipse cx="18" cy="3557.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="27" y="3561.0059">readableObjectMode : boolean</text><ellipse cx="18" cy="3570.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="3573.9609">writable : boolean</text><ellipse cx="18" cy="3583.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="27" y="3586.916">writableCorked : number</text><ellipse cx="18" cy="3596.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="27" y="3599.8711">writableEnded : boolean</text><ellipse cx="18" cy="3609.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="3612.8262">writableFinished : boolean</text><ellipse cx="18" cy="3622.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="27" y="3625.7813">writableHighWaterMark : number</text><ellipse cx="18" cy="3635.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="27" y="3638.7363">writableLength : number</text><ellipse cx="18" cy="3648.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="3651.6914">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="806" y1="3658.0117" y2="3658.0117"/><ellipse cx="18" cy="3669.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="27" y="3672.6465">addListener(event: "close", listener: Function) : PassThrough</text><ellipse cx="18" cy="3681.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="27" y="3685.6016">addListener(event: "data", listener: Function) : PassThrough</text><ellipse cx="18" cy="3694.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="3698.5566">addListener(event: "end", listener: Function) : PassThrough</text><ellipse cx="18" cy="3707.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="27" y="3711.5117">addListener(event: "error", listener: Function) : PassThrough</text><ellipse cx="18" cy="3720.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="3724.4668">addListener(event: "pause", listener: Function) : PassThrough</text><ellipse cx="18" cy="3733.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="339" x="27" y="3737.4219">addListener(event: "readable", listener: Function) : PassThrough</text><ellipse cx="18" cy="3746.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="27" y="3750.377">addListener(event: "resume", listener: Function) : PassThrough</text><ellipse cx="18" cy="3759.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="3763.332">addListener(event: string | symbol, listener: Function) : PassThrough</text><ellipse cx="18" cy="3772.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="27" y="3776.2871">cork() : void</text><ellipse cx="18" cy="3785.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="27" y="3789.2422">destroy(error: Error) : void</text><ellipse cx="18" cy="3798.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="3802.1973">emit(event: "close") : boolean</text><ellipse cx="18" cy="3811.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="27" y="3815.1523">emit(event: "data", chunk: any) : boolean</text><ellipse cx="18" cy="3824.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="3828.1074">emit(event: "end") : boolean</text><ellipse cx="18" cy="3837.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="3841.0625">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="3850.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="3854.0176">emit(event: "pause") : boolean</text><ellipse cx="18" cy="3863.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="27" y="3866.9727">emit(event: "readable") : boolean</text><ellipse cx="18" cy="3876.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="27" y="3879.9277">emit(event: "resume") : boolean</text><ellipse cx="18" cy="3889.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="3892.8828">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="3902.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="27" y="3905.8379">end(cb: Function) : void</text><ellipse cx="18" cy="3915.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="27" y="3918.793">end(chunk: any, cb: Function) : void</text><ellipse cx="18" cy="3928.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="27" y="3931.748">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="18" cy="3941.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="3944.7031">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="3954.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="27" y="3957.6582">from(src: string | Object | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt; | Promise&lt;any&gt; | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex</text><ellipse cx="18" cy="3966.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="3970.6133">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="3979.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="3983.5684">getMaxListeners() : number</text><ellipse cx="18" cy="3992.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="27" y="3996.5234">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="18" cy="4005.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="4009.4785">isPaused() : boolean</text><ellipse cx="18" cy="4018.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="4022.4336">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="4031.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="4035.3887">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="4044.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="4048.3438">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="4057.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="348" x="27" y="4061.2988">off(eventName: string | symbol, listener: Function) : PassThrough</text><ellipse cx="18" cy="4070.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="27" y="4074.2539">on(event: "close", listener: Function) : PassThrough</text><ellipse cx="18" cy="4083.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="27" y="4087.209">on(event: "data", listener: Function) : PassThrough</text><ellipse cx="18" cy="4096.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="4100.1641">on(event: "end", listener: Function) : PassThrough</text><ellipse cx="18" cy="4109.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="27" y="4113.1191">on(event: "error", listener: Function) : PassThrough</text><ellipse cx="18" cy="4122.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="27" y="4126.0742">on(event: "pause", listener: Function) : PassThrough</text><ellipse cx="18" cy="4135.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="27" y="4139.0293">on(event: "readable", listener: Function) : PassThrough</text><ellipse cx="18" cy="4148.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="27" y="4151.9844">on(event: "resume", listener: Function) : PassThrough</text><ellipse cx="18" cy="4161.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="27" y="4164.9395">on(event: string | symbol, listener: Function) : PassThrough</text><ellipse cx="18" cy="4174.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="4177.8945">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="4187.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="27" y="4190.8496">once(event: "close", listener: Function) : PassThrough</text><ellipse cx="18" cy="4200.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="27" y="4203.8047">once(event: "data", listener: Function) : PassThrough</text><ellipse cx="18" cy="4213.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="27" y="4216.7598">once(event: "end", listener: Function) : PassThrough</text><ellipse cx="18" cy="4226.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="27" y="4229.7148">once(event: "error", listener: Function) : PassThrough</text><ellipse cx="18" cy="4239.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="27" y="4242.6699">once(event: "pause", listener: Function) : PassThrough</text><ellipse cx="18" cy="4251.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="27" y="4255.625">once(event: "readable", listener: Function) : PassThrough</text><ellipse cx="18" cy="4264.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="27" y="4268.5801">once(event: "resume", listener: Function) : PassThrough</text><ellipse cx="18" cy="4277.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="27" y="4281.5352">once(event: string | symbol, listener: Function) : PassThrough</text><ellipse cx="18" cy="4290.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="4294.4902">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="4303.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="4307.4453">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="4316.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="27" y="4320.4004">pause() : PassThrough</text><ellipse cx="18" cy="4329.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="4333.3555">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="4342.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="4346.3105">prependListener(event: "close", listener: Function) : PassThrough</text><ellipse cx="18" cy="4355.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="27" y="4359.2656">prependListener(event: "data", listener: Function) : PassThrough</text><ellipse cx="18" cy="4368.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="27" y="4372.2207">prependListener(event: "end", listener: Function) : PassThrough</text><ellipse cx="18" cy="4381.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="4385.1758">prependListener(event: "error", listener: Function) : PassThrough</text><ellipse cx="18" cy="4394.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="350" x="27" y="4398.1309">prependListener(event: "pause", listener: Function) : PassThrough</text><ellipse cx="18" cy="4407.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="364" x="27" y="4411.0859">prependListener(event: "readable", listener: Function) : PassThrough</text><ellipse cx="18" cy="4420.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="27" y="4424.041">prependListener(event: "resume", listener: Function) : PassThrough</text><ellipse cx="18" cy="4433.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="27" y="4436.9961">prependListener(event: string | symbol, listener: Function) : PassThrough</text><ellipse cx="18" cy="4446.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="374" x="27" y="4449.9512">prependOnceListener(event: "close", listener: Function) : PassThrough</text><ellipse cx="18" cy="4459.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="27" y="4462.9063">prependOnceListener(event: "data", listener: Function) : PassThrough</text><ellipse cx="18" cy="4472.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="4475.8613">prependOnceListener(event: "end", listener: Function) : PassThrough</text><ellipse cx="18" cy="4485.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="374" x="27" y="4488.8164">prependOnceListener(event: "error", listener: Function) : PassThrough</text><ellipse cx="18" cy="4498.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="378" x="27" y="4501.7715">prependOnceListener(event: "pause", listener: Function) : PassThrough</text><ellipse cx="18" cy="4511.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="27" y="4514.7266">prependOnceListener(event: "readable", listener: Function) : PassThrough</text><ellipse cx="18" cy="4524.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="27" y="4527.6816">prependOnceListener(event: "resume", listener: Function) : PassThrough</text><ellipse cx="18" cy="4537.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="419" x="27" y="4540.6367">prependOnceListener(event: string | symbol, listener: Function) : PassThrough</text><ellipse cx="18" cy="4549.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="4553.5918">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="18" cy="4562.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="4566.5469">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="4575.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="4579.502">read(size: number) : any</text><ellipse cx="18" cy="4588.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="27" y="4592.457">removeAllListeners(event: string | symbol) : PassThrough</text><ellipse cx="18" cy="4601.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="27" y="4605.4121">removeListener(event: "close", listener: Function) : PassThrough</text><ellipse cx="18" cy="4614.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="27" y="4618.3672">removeListener(event: "data", listener: Function) : PassThrough</text><ellipse cx="18" cy="4627.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="27" y="4631.3223">removeListener(event: "end", listener: Function) : PassThrough</text><ellipse cx="18" cy="4640.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="27" y="4644.2773">removeListener(event: "error", listener: Function) : PassThrough</text><ellipse cx="18" cy="4653.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="27" y="4657.2324">removeListener(event: "pause", listener: Function) : PassThrough</text><ellipse cx="18" cy="4666.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="27" y="4670.1875">removeListener(event: "readable", listener: Function) : PassThrough</text><ellipse cx="18" cy="4679.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="27" y="4683.1426">removeListener(event: "resume", listener: Function) : PassThrough</text><ellipse cx="18" cy="4692.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="27" y="4696.0977">removeListener(event: string | symbol, listener: Function) : PassThrough</text><ellipse cx="18" cy="4705.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="27" y="4709.0527">resume() : PassThrough</text><ellipse cx="18" cy="4718.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="27" y="4722.0078">setDefaultEncoding(encoding: BufferEncoding) : PassThrough</text><ellipse cx="18" cy="4731.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="4734.9629">setEncoding(encoding: BufferEncoding) : PassThrough</text><ellipse cx="18" cy="4744.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="230" x="27" y="4747.918">setMaxListeners(n: number) : PassThrough</text><ellipse cx="18" cy="4757.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="27" y="4760.873">uncork() : void</text><ellipse cx="18" cy="4770.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="271" x="27" y="4773.8281">unpipe(destination: WritableStream) : PassThrough</text><ellipse cx="18" cy="4783.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="27" y="4786.7832">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="18" cy="4796.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="27" y="4799.7383">wrap(stream: ReadableStream) : PassThrough</text><ellipse cx="18" cy="4809.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="27" y="4812.6934">write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="18" cy="4822.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="27" y="4825.6484">write(chunk: any, cb: Function) : boolean</text><ellipse cx="18" cy="4834.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="4838.6035">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="4847.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="4851.5586">_construct(callback: Function) : void</text><ellipse cx="18" cy="4860.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="4864.5137">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="4873.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="27" y="4877.4688">_final(callback: Function) : void</text><ellipse cx="18" cy="4886.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="224" x="27" y="4890.4238">_flush(callback: TransformCallback) : void</text><ellipse cx="18" cy="4899.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="4903.3789">_read(size: number) : void</text><ellipse cx="18" cy="4912.6992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="459" x="27" y="4916.334">_transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback) : void</text><ellipse cx="18" cy="4925.6543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="27" y="4929.2891">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="18" cy="4938.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="27" y="4942.2441">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[7d14d80e7db99eb0e17e10209142389b]
reverse link Duplex to Transform--><path codeLine="248" d="M407,1617.09 C407,1630.32 407,1643.56 407,1656.79 " fill="none" id="Duplex-backto-Transform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="400,1617.01,407,1597.01,414,1617.01,400,1617.01" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[511618a2712f34f30e7a326124f72073]
reverse link Transform to PassThrough--><path codeLine="372" d="M407,3293.3 C407,3306.49 407,3319.69 407,3332.88 " fill="none" id="Transform-backto-PassThrough" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="400,3293.27,407,3273.27,414,3293.27,400,3293.27" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[ee7a821f2d8effcf4475f873aa166dd9]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "Transform" {
    +allowHalfOpen : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Transform
    +addListener(event: "data", listener: Function) : Transform
    +addListener(event: "end", listener: Function) : Transform
    +addListener(event: "error", listener: Function) : Transform
    +addListener(event: "pause", listener: Function) : Transform
    +addListener(event: "readable", listener: Function) : Transform
    +addListener(event: "resume", listener: Function) : Transform
    +addListener(event: string | symbol, listener: Function) : Transform
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | Stream | Iterable<any> | AsyncIterable<any> | Promise<any> | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Transform
    +on(event: "close", listener: Function) : Transform
    +on(event: "data", listener: Function) : Transform
    +on(event: "end", listener: Function) : Transform
    +on(event: "error", listener: Function) : Transform
    +on(event: "pause", listener: Function) : Transform
    +on(event: "readable", listener: Function) : Transform
    +on(event: "resume", listener: Function) : Transform
    +on(event: string | symbol, listener: Function) : Transform
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Transform
    +once(event: "data", listener: Function) : Transform
    +once(event: "end", listener: Function) : Transform
    +once(event: "error", listener: Function) : Transform
    +once(event: "pause", listener: Function) : Transform
    +once(event: "readable", listener: Function) : Transform
    +once(event: "resume", listener: Function) : Transform
    +once(event: string | symbol, listener: Function) : Transform
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Transform
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Transform
    +prependListener(event: "data", listener: Function) : Transform
    +prependListener(event: "end", listener: Function) : Transform
    +prependListener(event: "error", listener: Function) : Transform
    +prependListener(event: "pause", listener: Function) : Transform
    +prependListener(event: "readable", listener: Function) : Transform
    +prependListener(event: "resume", listener: Function) : Transform
    +prependListener(event: string | symbol, listener: Function) : Transform
    +prependOnceListener(event: "close", listener: Function) : Transform
    +prependOnceListener(event: "data", listener: Function) : Transform
    +prependOnceListener(event: "end", listener: Function) : Transform
    +prependOnceListener(event: "error", listener: Function) : Transform
    +prependOnceListener(event: "pause", listener: Function) : Transform
    +prependOnceListener(event: "readable", listener: Function) : Transform
    +prependOnceListener(event: "resume", listener: Function) : Transform
    +prependOnceListener(event: string | symbol, listener: Function) : Transform
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Transform
    +removeListener(event: "close", listener: Function) : Transform
    +removeListener(event: "data", listener: Function) : Transform
    +removeListener(event: "end", listener: Function) : Transform
    +removeListener(event: "error", listener: Function) : Transform
    +removeListener(event: "pause", listener: Function) : Transform
    +removeListener(event: "readable", listener: Function) : Transform
    +removeListener(event: "resume", listener: Function) : Transform
    +removeListener(event: string | symbol, listener: Function) : Transform
    +resume() : Transform
    +setDefaultEncoding(encoding: BufferEncoding) : Transform
    +setEncoding(encoding: BufferEncoding) : Transform
    +setMaxListeners(n: number) : Transform
    +uncork() : void
    +unpipe(destination: WritableStream) : Transform
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Transform
    +write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean
    +write(chunk: any, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_flush(callback: TransformCallback) : void
    +_read(size: number) : void
    +_transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
class "Duplex" {
    +allowHalfOpen : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Duplex
    +addListener(event: "data", listener: Function) : Duplex
    +addListener(event: "end", listener: Function) : Duplex
    +addListener(event: "error", listener: Function) : Duplex
    +addListener(event: "pause", listener: Function) : Duplex
    +addListener(event: "readable", listener: Function) : Duplex
    +addListener(event: "resume", listener: Function) : Duplex
    +addListener(event: string | symbol, listener: Function) : Duplex
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | Stream | Iterable<any> | AsyncIterable<any> | Promise<any> | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Duplex
    +on(event: "close", listener: Function) : Duplex
    +on(event: "data", listener: Function) : Duplex
    +on(event: "end", listener: Function) : Duplex
    +on(event: "error", listener: Function) : Duplex
    +on(event: "pause", listener: Function) : Duplex
    +on(event: "readable", listener: Function) : Duplex
    +on(event: "resume", listener: Function) : Duplex
    +on(event: string | symbol, listener: Function) : Duplex
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Duplex
    +once(event: "data", listener: Function) : Duplex
    +once(event: "end", listener: Function) : Duplex
    +once(event: "error", listener: Function) : Duplex
    +once(event: "pause", listener: Function) : Duplex
    +once(event: "readable", listener: Function) : Duplex
    +once(event: "resume", listener: Function) : Duplex
    +once(event: string | symbol, listener: Function) : Duplex
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Duplex
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Duplex
    +prependListener(event: "data", listener: Function) : Duplex
    +prependListener(event: "end", listener: Function) : Duplex
    +prependListener(event: "error", listener: Function) : Duplex
    +prependListener(event: "pause", listener: Function) : Duplex
    +prependListener(event: "readable", listener: Function) : Duplex
    +prependListener(event: "resume", listener: Function) : Duplex
    +prependListener(event: string | symbol, listener: Function) : Duplex
    +prependOnceListener(event: "close", listener: Function) : Duplex
    +prependOnceListener(event: "data", listener: Function) : Duplex
    +prependOnceListener(event: "end", listener: Function) : Duplex
    +prependOnceListener(event: "error", listener: Function) : Duplex
    +prependOnceListener(event: "pause", listener: Function) : Duplex
    +prependOnceListener(event: "readable", listener: Function) : Duplex
    +prependOnceListener(event: "resume", listener: Function) : Duplex
    +prependOnceListener(event: string | symbol, listener: Function) : Duplex
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Duplex
    +removeListener(event: "close", listener: Function) : Duplex
    +removeListener(event: "data", listener: Function) : Duplex
    +removeListener(event: "end", listener: Function) : Duplex
    +removeListener(event: "error", listener: Function) : Duplex
    +removeListener(event: "pause", listener: Function) : Duplex
    +removeListener(event: "readable", listener: Function) : Duplex
    +removeListener(event: "resume", listener: Function) : Duplex
    +removeListener(event: string | symbol, listener: Function) : Duplex
    +resume() : Duplex
    +setDefaultEncoding(encoding: BufferEncoding) : Duplex
    +setEncoding(encoding: BufferEncoding) : Duplex
    +setMaxListeners(n: number) : Duplex
    +uncork() : void
    +unpipe(destination: WritableStream) : Duplex
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Duplex
    +write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean
    +write(chunk: any, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_read(size: number) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Duplex" <|- - "Transform"
class "PassThrough" {
    +allowHalfOpen : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : PassThrough
    +addListener(event: "data", listener: Function) : PassThrough
    +addListener(event: "end", listener: Function) : PassThrough
    +addListener(event: "error", listener: Function) : PassThrough
    +addListener(event: "pause", listener: Function) : PassThrough
    +addListener(event: "readable", listener: Function) : PassThrough
    +addListener(event: "resume", listener: Function) : PassThrough
    +addListener(event: string | symbol, listener: Function) : PassThrough
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | Stream | Iterable<any> | AsyncIterable<any> | Promise<any> | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : PassThrough
    +on(event: "close", listener: Function) : PassThrough
    +on(event: "data", listener: Function) : PassThrough
    +on(event: "end", listener: Function) : PassThrough
    +on(event: "error", listener: Function) : PassThrough
    +on(event: "pause", listener: Function) : PassThrough
    +on(event: "readable", listener: Function) : PassThrough
    +on(event: "resume", listener: Function) : PassThrough
    +on(event: string | symbol, listener: Function) : PassThrough
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : PassThrough
    +once(event: "data", listener: Function) : PassThrough
    +once(event: "end", listener: Function) : PassThrough
    +once(event: "error", listener: Function) : PassThrough
    +once(event: "pause", listener: Function) : PassThrough
    +once(event: "readable", listener: Function) : PassThrough
    +once(event: "resume", listener: Function) : PassThrough
    +once(event: string | symbol, listener: Function) : PassThrough
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : PassThrough
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : PassThrough
    +prependListener(event: "data", listener: Function) : PassThrough
    +prependListener(event: "end", listener: Function) : PassThrough
    +prependListener(event: "error", listener: Function) : PassThrough
    +prependListener(event: "pause", listener: Function) : PassThrough
    +prependListener(event: "readable", listener: Function) : PassThrough
    +prependListener(event: "resume", listener: Function) : PassThrough
    +prependListener(event: string | symbol, listener: Function) : PassThrough
    +prependOnceListener(event: "close", listener: Function) : PassThrough
    +prependOnceListener(event: "data", listener: Function) : PassThrough
    +prependOnceListener(event: "end", listener: Function) : PassThrough
    +prependOnceListener(event: "error", listener: Function) : PassThrough
    +prependOnceListener(event: "pause", listener: Function) : PassThrough
    +prependOnceListener(event: "readable", listener: Function) : PassThrough
    +prependOnceListener(event: "resume", listener: Function) : PassThrough
    +prependOnceListener(event: string | symbol, listener: Function) : PassThrough
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : PassThrough
    +removeListener(event: "close", listener: Function) : PassThrough
    +removeListener(event: "data", listener: Function) : PassThrough
    +removeListener(event: "end", listener: Function) : PassThrough
    +removeListener(event: "error", listener: Function) : PassThrough
    +removeListener(event: "pause", listener: Function) : PassThrough
    +removeListener(event: "readable", listener: Function) : PassThrough
    +removeListener(event: "resume", listener: Function) : PassThrough
    +removeListener(event: string | symbol, listener: Function) : PassThrough
    +resume() : PassThrough
    +setDefaultEncoding(encoding: BufferEncoding) : PassThrough
    +setEncoding(encoding: BufferEncoding) : PassThrough
    +setMaxListeners(n: number) : PassThrough
    +uncork() : void
    +unpipe(destination: WritableStream) : PassThrough
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : PassThrough
    +write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean
    +write(chunk: any, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_flush(callback: TransformCallback) : void
    +_read(size: number) : void
    +_transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Transform" <|- - "PassThrough"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>