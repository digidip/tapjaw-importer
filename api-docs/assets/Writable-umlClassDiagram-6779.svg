<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="4845px" preserveAspectRatio="none" style="width:1633px;height:4845px;background:#00000000;" version="1.1" viewBox="0 0 1633 4845" width="1633px" zoomAndPan="magnify"><defs><filter height="300%" id="f10qt07d2a7so2" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[93f77cf1cd71031e7728e23fe162cbe1]
class Writable--><rect codeLine="4" fill="#FEFECE" filter="url(#f10qt07d2a7so2)" height="1201.002" id="Writable" style="stroke:#A80036;stroke-width:1.5;" width="637" x="761" y="439"/><ellipse cx="1051.75" cy="455" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1054.2231,461.1431 Q1053.6421,461.4419 1053.0029,461.5913 Q1052.3638,461.7407 1051.6582,461.7407 Q1049.1514,461.7407 1047.8315,460.0889 Q1046.5117,458.437 1046.5117,455.3159 Q1046.5117,452.1865 1047.8315,450.5347 Q1049.1514,448.8828 1051.6582,448.8828 Q1052.3638,448.8828 1053.0112,449.0322 Q1053.6587,449.1816 1054.2231,449.4805 L1054.2231,452.2031 Q1053.5923,451.6221 1052.9988,451.3523 Q1052.4053,451.0825 1051.7744,451.0825 Q1050.4297,451.0825 1049.7449,452.1492 Q1049.0601,453.2158 1049.0601,455.3159 Q1049.0601,457.4077 1049.7449,458.4744 Q1050.4297,459.541 1051.7744,459.541 Q1052.4053,459.541 1052.9988,459.2712 Q1053.5923,459.0015 1054.2231,458.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="47" x="1072.25" y="459.5352">Writable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="762" x2="1397" y1="471" y2="471"/><ellipse cx="772" cy="482" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="781" y="485.6348">captureRejections : boolean</text><ellipse cx="772" cy="494.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="781" y="498.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="772" cy="507.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="781" y="511.5449">defaultMaxListeners : number</text><ellipse cx="772" cy="520.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="781" y="524.5">destroyed : boolean</text><ellipse cx="772" cy="533.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="781" y="537.4551">errorMonitor : typeof errorMonitor</text><ellipse cx="772" cy="546.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="781" y="550.4102">writable : boolean</text><ellipse cx="772" cy="559.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="781" y="563.3652">writableCorked : number</text><ellipse cx="772" cy="572.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="781" y="576.3203">writableEnded : boolean</text><ellipse cx="772" cy="585.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="781" y="589.2754">writableFinished : boolean</text><ellipse cx="772" cy="598.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="781" y="602.2305">writableHighWaterMark : number</text><ellipse cx="772" cy="611.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="781" y="615.1855">writableLength : number</text><ellipse cx="772" cy="624.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="781" y="628.1406">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="762" x2="1397" y1="634.4609" y2="634.4609"/><ellipse cx="772" cy="645.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="781" y="649.0957">addListener(event: "close", listener: Function) : Writable</text><ellipse cx="772" cy="658.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="781" y="662.0508">addListener(event: "drain", listener: Function) : Writable</text><ellipse cx="772" cy="671.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="781" y="675.0059">addListener(event: "error", listener: Function) : Writable</text><ellipse cx="772" cy="684.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="295" x="781" y="687.9609">addListener(event: "finish", listener: Function) : Writable</text><ellipse cx="772" cy="697.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="781" y="700.916">addListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="772" cy="710.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="781" y="713.8711">addListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="772" cy="723.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="781" y="726.8262">addListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="772" cy="736.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="781" y="739.7813">cork() : void</text><ellipse cx="772" cy="749.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="781" y="752.7363">destroy(error: Error) : void</text><ellipse cx="772" cy="762.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="781" y="765.6914">emit(event: "close") : boolean</text><ellipse cx="772" cy="775.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="781" y="778.6465">emit(event: "drain") : boolean</text><ellipse cx="772" cy="787.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="781" y="791.6016">emit(event: "error", err: Error) : boolean</text><ellipse cx="772" cy="800.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="781" y="804.5566">emit(event: "finish") : boolean</text><ellipse cx="772" cy="813.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="781" y="817.5117">emit(event: "pipe", src: Readable) : boolean</text><ellipse cx="772" cy="826.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="781" y="830.4668">emit(event: "unpipe", src: Readable) : boolean</text><ellipse cx="772" cy="839.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="781" y="843.4219">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="772" cy="852.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="781" y="856.377">end(cb: Function) : void</text><ellipse cx="772" cy="865.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="781" y="869.332">end(chunk: any, cb: Function) : void</text><ellipse cx="772" cy="878.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="781" y="882.2871">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="772" cy="891.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="781" y="895.2422">eventNames() : (string | symbol)[]</text><ellipse cx="772" cy="904.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="781" y="908.1973">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="772" cy="917.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="781" y="921.1523">getMaxListeners() : number</text><ellipse cx="772" cy="930.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="781" y="934.1074">listenerCount(eventName: string | symbol) : number</text><ellipse cx="772" cy="943.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="781" y="947.0625">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="772" cy="956.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="781" y="960.0176">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="772" cy="969.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="781" y="972.9727">off(eventName: string | symbol, listener: Function) : Writable</text><ellipse cx="772" cy="982.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="781" y="985.9277">on(event: "close", listener: Function) : Writable</text><ellipse cx="772" cy="995.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="781" y="998.8828">on(event: "drain", listener: Function) : Writable</text><ellipse cx="772" cy="1008.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="781" y="1011.8379">on(event: "error", listener: Function) : Writable</text><ellipse cx="772" cy="1021.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="781" y="1024.793">on(event: "finish", listener: Function) : Writable</text><ellipse cx="772" cy="1034.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="781" y="1037.748">on(event: "pipe", listener: Function) : Writable</text><ellipse cx="772" cy="1047.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="781" y="1050.7031">on(event: "unpipe", listener: Function) : Writable</text><ellipse cx="772" cy="1060.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="781" y="1063.6582">on(event: string | symbol, listener: Function) : Writable</text><ellipse cx="772" cy="1072.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="781" y="1076.6133">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="772" cy="1085.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="781" y="1089.5684">once(event: "close", listener: Function) : Writable</text><ellipse cx="772" cy="1098.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="781" y="1102.5234">once(event: "drain", listener: Function) : Writable</text><ellipse cx="772" cy="1111.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="781" y="1115.4785">once(event: "error", listener: Function) : Writable</text><ellipse cx="772" cy="1124.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="781" y="1128.4336">once(event: "finish", listener: Function) : Writable</text><ellipse cx="772" cy="1137.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="781" y="1141.3887">once(event: "pipe", listener: Function) : Writable</text><ellipse cx="772" cy="1150.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="781" y="1154.3438">once(event: "unpipe", listener: Function) : Writable</text><ellipse cx="772" cy="1163.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="781" y="1167.2988">once(event: string | symbol, listener: Function) : Writable</text><ellipse cx="772" cy="1176.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="781" y="1180.2539">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="772" cy="1189.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="781" y="1193.209">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="772" cy="1202.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="781" y="1206.1641">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="772" cy="1215.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="781" y="1219.1191">prependListener(event: "close", listener: Function) : Writable</text><ellipse cx="772" cy="1228.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="781" y="1232.0742">prependListener(event: "drain", listener: Function) : Writable</text><ellipse cx="772" cy="1241.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="781" y="1245.0293">prependListener(event: "error", listener: Function) : Writable</text><ellipse cx="772" cy="1254.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="781" y="1257.9844">prependListener(event: "finish", listener: Function) : Writable</text><ellipse cx="772" cy="1267.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="781" y="1270.9395">prependListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="772" cy="1280.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="781" y="1283.8945">prependListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="772" cy="1293.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="781" y="1296.8496">prependListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="772" cy="1306.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="781" y="1309.8047">prependOnceListener(event: "close", listener: Function) : Writable</text><ellipse cx="772" cy="1319.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="781" y="1322.7598">prependOnceListener(event: "drain", listener: Function) : Writable</text><ellipse cx="772" cy="1332.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="781" y="1335.7148">prependOnceListener(event: "error", listener: Function) : Writable</text><ellipse cx="772" cy="1345.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="348" x="781" y="1348.6699">prependOnceListener(event: "finish", listener: Function) : Writable</text><ellipse cx="772" cy="1357.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="781" y="1361.625">prependOnceListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="772" cy="1370.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="781" y="1374.5801">prependOnceListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="772" cy="1383.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="781" y="1387.5352">prependOnceListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="772" cy="1396.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="781" y="1400.4902">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="772" cy="1409.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="781" y="1413.4453">removeAllListeners(event: string | symbol) : Writable</text><ellipse cx="772" cy="1422.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="781" y="1426.4004">removeListener(event: "close", listener: Function) : Writable</text><ellipse cx="772" cy="1435.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="781" y="1439.3555">removeListener(event: "drain", listener: Function) : Writable</text><ellipse cx="772" cy="1448.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="781" y="1452.3105">removeListener(event: "error", listener: Function) : Writable</text><ellipse cx="772" cy="1461.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="781" y="1465.2656">removeListener(event: "finish", listener: Function) : Writable</text><ellipse cx="772" cy="1474.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="781" y="1478.2207">removeListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="772" cy="1487.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="781" y="1491.1758">removeListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="772" cy="1500.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="781" y="1504.1309">removeListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="772" cy="1513.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="781" y="1517.0859">setDefaultEncoding(encoding: BufferEncoding) : Writable</text><ellipse cx="772" cy="1526.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="781" y="1530.041">setMaxListeners(n: number) : Writable</text><ellipse cx="772" cy="1539.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="781" y="1542.9961">uncork() : void</text><ellipse cx="772" cy="1552.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="781" y="1555.9512">write(chunk: any, callback: Function) : boolean</text><ellipse cx="772" cy="1565.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="781" y="1568.9063">write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean</text><ellipse cx="772" cy="1578.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="781" y="1581.8613">_construct(callback: Function) : void</text><ellipse cx="772" cy="1591.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="781" y="1594.8164">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="772" cy="1604.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="781" y="1607.7715">_final(callback: Function) : void</text><ellipse cx="772" cy="1617.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="781" y="1620.7266">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="772" cy="1630.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="781" y="1633.6816">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[d71ee11ede0e83c966e8ef97d9465fe6]
class Stream--><rect codeLine="95" fill="#FEFECE" filter="url(#f10qt07d2a7so2)" height="371.877" id="Stream" style="stroke:#A80036;stroke-width:1.5;" width="637" x="463" y="7"/><ellipse cx="757.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M759.7231,29.1431 Q759.1421,29.4419 758.5029,29.5913 Q757.8638,29.7407 757.1582,29.7407 Q754.6514,29.7407 753.3315,28.0889 Q752.0117,26.437 752.0117,23.3159 Q752.0117,20.1865 753.3315,18.5347 Q754.6514,16.8828 757.1582,16.8828 Q757.8638,16.8828 758.5112,17.0322 Q759.1587,17.1816 759.7231,17.4805 L759.7231,20.2031 Q759.0923,19.6221 758.4988,19.3523 Q757.9053,19.0825 757.2744,19.0825 Q755.9297,19.0825 755.2449,20.1492 Q754.5601,21.2158 754.5601,23.3159 Q754.5601,25.4077 755.2449,26.4744 Q755.9297,27.541 757.2744,27.541 Q757.9053,27.541 758.4988,27.2712 Q759.0923,27.0015 759.7231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="40" x="777.75" y="27.5352">Stream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="464" x2="1099" y1="39" y2="39"/><ellipse cx="474" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="483" y="53.6348">captureRejections : boolean</text><ellipse cx="474" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="483" y="66.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="474" cy="75.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="483" y="79.5449">defaultMaxListeners : number</text><ellipse cx="474" cy="88.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="483" y="92.5">errorMonitor : typeof errorMonitor</text><line style="stroke:#A80036;stroke-width:1.5;" x1="464" x2="1099" y1="98.8203" y2="98.8203"/><ellipse cx="474" cy="109.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="483" y="113.4551">addListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="474" cy="122.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="483" y="126.4102">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="474" cy="135.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="483" y="139.3652">eventNames() : (string | symbol)[]</text><ellipse cx="474" cy="148.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="483" y="152.3203">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="474" cy="161.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="483" y="165.2754">getMaxListeners() : number</text><ellipse cx="474" cy="174.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="483" y="178.2305">listenerCount(eventName: string | symbol) : number</text><ellipse cx="474" cy="187.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="483" y="191.1855">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="474" cy="200.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="483" y="204.1406">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="474" cy="213.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="314" x="483" y="217.0957">off(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="474" cy="226.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="483" y="230.0508">on(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="474" cy="239.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="483" y="243.0059">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="474" cy="252.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="483" y="255.9609">once(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="474" cy="265.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="483" y="268.916">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="474" cy="278.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="483" y="281.8711">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="474" cy="291.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="483" y="294.8262">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="474" cy="304.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="387" x="483" y="307.7813">prependListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="474" cy="317.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="483" y="320.7363">prependOnceListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="474" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="483" y="333.6914">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="474" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="483" y="346.6465">removeAllListeners(event: string | symbol) : Stream</text><ellipse cx="474" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="382" x="483" y="359.6016">removeListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="474" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="483" y="372.5566">setMaxListeners(n: number) : Stream</text><!--MD5=[75295b061bf85356a312df551dda4666]
class WritableStream--><rect codeLine="123" fill="#FEFECE" filter="url(#f10qt07d2a7so2)" height="320.0566" id="WritableStream" style="stroke:#A80036;stroke-width:1.5;" width="484" x="1135.5" y="33"/><ellipse cx="1329.75" cy="49" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1326.1777,45.2651 L1326.1777,43.1069 L1333.5571,43.1069 L1333.5571,45.2651 L1331.0918,45.2651 L1331.0918,53.3418 L1333.5571,53.3418 L1333.5571,55.5 L1326.1777,55.5 L1326.1777,53.3418 L1328.6431,53.3418 L1328.6431,45.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="87" x="1350.25" y="53.5352">WritableStream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1136.5" x2="1618.5" y1="65" y2="65"/><ellipse cx="1146.5" cy="76" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="1155.5" y="79.6348">writable : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1136.5" x2="1618.5" y1="85.9551" y2="85.9551"/><ellipse cx="1146.5" cy="96.9551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="1155.5" y="100.5898">addListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="1146.5" cy="109.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="1155.5" y="113.5449">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="1146.5" cy="122.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="1155.5" y="126.5">end(cb: Function) : void</text><ellipse cx="1146.5" cy="135.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="1155.5" y="139.4551">end(data: string | Uint8Array, cb: Function) : void</text><ellipse cx="1146.5" cy="148.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="1155.5" y="152.4102">end(str: string, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="1146.5" cy="161.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="1155.5" y="165.3652">eventNames() : (string | symbol)[]</text><ellipse cx="1146.5" cy="174.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="1155.5" y="178.3203">getMaxListeners() : number</text><ellipse cx="1146.5" cy="187.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="1155.5" y="191.2754">listenerCount(eventName: string | symbol) : number</text><ellipse cx="1146.5" cy="200.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="1155.5" y="204.2305">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="1146.5" cy="213.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="1155.5" y="217.1855">off(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="1146.5" cy="226.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="1155.5" y="230.1406">on(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="1146.5" cy="239.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="1155.5" y="243.0957">once(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="1146.5" cy="252.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="430" x="1155.5" y="256.0508">prependListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="1146.5" cy="265.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="458" x="1155.5" y="269.0059">prependOnceListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="1146.5" cy="278.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="1155.5" y="281.9609">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="1146.5" cy="291.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="1155.5" y="294.916">removeAllListeners(event: string | symbol) : WritableStream</text><ellipse cx="1146.5" cy="304.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="425" x="1155.5" y="307.8711">removeListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="1146.5" cy="317.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="1155.5" y="320.8262">setMaxListeners(n: number) : WritableStream</text><ellipse cx="1146.5" cy="330.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="1155.5" y="333.7813">write(buffer: string | Uint8Array, cb: Function) : boolean</text><ellipse cx="1146.5" cy="343.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="1155.5" y="346.7363">write(str: string, encoding: BufferEncoding, cb: Function) : boolean</text><!--MD5=[e659cb07397b6e885205c421089cc64a]
class OutgoingMessage--><rect codeLine="147" fill="#FEFECE" filter="url(#f10qt07d2a7so2)" height="1434.1934" id="OutgoingMessage" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="2548.5"/><ellipse cx="270.75" cy="2564.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M273.2231,2570.6431 Q272.6421,2570.9419 272.0029,2571.0913 Q271.3638,2571.2407 270.6582,2571.2407 Q268.1514,2571.2407 266.8315,2569.5889 Q265.5117,2567.937 265.5117,2564.8159 Q265.5117,2561.6865 266.8315,2560.0347 Q268.1514,2558.3828 270.6582,2558.3828 Q271.3638,2558.3828 272.0112,2558.5322 Q272.6587,2558.6816 273.2231,2558.9805 L273.2231,2561.7031 Q272.5923,2561.1221 271.9988,2560.8523 Q271.4053,2560.5825 270.7744,2560.5825 Q269.4297,2560.5825 268.7449,2561.6492 Q268.0601,2562.7158 268.0601,2564.8159 Q268.0601,2566.9077 268.7449,2567.9744 Q269.4297,2569.041 270.7744,2569.041 Q271.4053,2569.041 271.9988,2568.7712 Q272.5923,2568.5015 273.2231,2567.9204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="101" x="291.25" y="2569.0352">OutgoingMessage</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="2580.5" y2="2580.5"/><ellipse cx="18" cy="2591.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="2595.1348">captureRejections : boolean</text><ellipse cx="18" cy="2604.4551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="2608.0898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="2617.4102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="27" y="2621.0449">chunkedEncoding : boolean</text><ellipse cx="18" cy="2630.3652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="2634">connection : null | Socket</text><ellipse cx="18" cy="2643.3203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="2646.9551">defaultMaxListeners : number</text><ellipse cx="18" cy="2656.2754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="2659.9102">destroyed : boolean</text><ellipse cx="18" cy="2669.2305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="2672.8652">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="2682.1855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="27" y="2685.8203">finished : boolean</text><ellipse cx="18" cy="2695.1406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="27" y="2698.7754">headersSent : boolean</text><ellipse cx="18" cy="2708.0957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="27" y="2711.7305">req : IncomingMessage</text><ellipse cx="18" cy="2721.0508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="27" y="2724.6855">sendDate : boolean</text><ellipse cx="18" cy="2734.0059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="27" y="2737.6406">shouldKeepAlive : boolean</text><ellipse cx="18" cy="2746.9609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="27" y="2750.5957">socket : null | Socket</text><ellipse cx="18" cy="2759.916" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="27" y="2763.5508">useChunkedEncodingByDefault : boolean</text><ellipse cx="18" cy="2772.8711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="2776.5059">writable : boolean</text><ellipse cx="18" cy="2785.8262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="27" y="2789.4609">writableCorked : number</text><ellipse cx="18" cy="2798.7813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="27" y="2802.416">writableEnded : boolean</text><ellipse cx="18" cy="2811.7363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="2815.3711">writableFinished : boolean</text><ellipse cx="18" cy="2824.6914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="27" y="2828.3262">writableHighWaterMark : number</text><ellipse cx="18" cy="2837.6465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="27" y="2841.2813">writableLength : number</text><ellipse cx="18" cy="2850.6016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="2854.2363">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="2860.5566" y2="2860.5566"/><ellipse cx="18" cy="2871.5566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="347" x="27" y="2875.1914">addListener(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2884.5117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="347" x="27" y="2888.1465">addListener(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2897.4668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="347" x="27" y="2901.1016">addListener(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2910.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="27" y="2914.0566">addListener(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2923.377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="342" x="27" y="2927.0117">addListener(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2936.332" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="27" y="2939.9668">addListener(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2949.2871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="27" y="2952.9219">addListener(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2962.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="414" x="27" y="2965.877">addTrailers(headers: OutgoingHttpHeaders | readonly [string, string][]) : void</text><ellipse cx="18" cy="2975.1973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="27" y="2978.832">cork() : void</text><ellipse cx="18" cy="2988.1523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="27" y="2991.7871">destroy(error: Error) : void</text><ellipse cx="18" cy="3001.1074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="3004.7422">emit(event: "close") : boolean</text><ellipse cx="18" cy="3014.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="3017.6973">emit(event: "drain") : boolean</text><ellipse cx="18" cy="3027.0176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="3030.6523">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="3039.9727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="27" y="3043.6074">emit(event: "finish") : boolean</text><ellipse cx="18" cy="3052.9277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="27" y="3056.5625">emit(event: "pipe", src: Readable) : boolean</text><ellipse cx="18" cy="3065.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="27" y="3069.5176">emit(event: "unpipe", src: Readable) : boolean</text><ellipse cx="18" cy="3078.8379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="3082.4727">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="3091.793" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="27" y="3095.4277">end(cb: Function) : void</text><ellipse cx="18" cy="3104.748" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="27" y="3108.3828">end(chunk: any, cb: Function) : void</text><ellipse cx="18" cy="3117.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="27" y="3121.3379">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="18" cy="3130.6582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="3134.293">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="3143.6133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="27" y="3147.248">flushHeaders() : void</text><ellipse cx="18" cy="3156.5684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="3160.2031">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="3169.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="27" y="3173.1582">getHeader(name: string) : undefined | string | number | string[]</text><ellipse cx="18" cy="3182.4785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="27" y="3186.1133">getHeaderNames() : string[]</text><ellipse cx="18" cy="3195.4336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="27" y="3199.0684">getHeaders() : OutgoingHttpHeaders</text><ellipse cx="18" cy="3208.3887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="3212.0234">getMaxListeners() : number</text><ellipse cx="18" cy="3221.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="27" y="3224.9785">hasHeader(name: string) : boolean</text><ellipse cx="18" cy="3234.2988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="3237.9336">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="3247.2539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="3250.8887">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="3260.209" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="3263.8438">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="3273.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="374" x="27" y="3276.7988">off(eventName: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3286.1191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="3289.7539">on(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3299.0742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="3302.709">on(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3312.0293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="3315.6641">on(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3324.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="27" y="3328.6191">on(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3337.9395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="27" y="3341.5742">on(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3350.8945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="27" y="3354.5293">on(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3363.8496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="3367.4844">on(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3376.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="3380.4395">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="3389.7598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="3393.3945">once(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3402.7148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="3406.3496">once(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3415.6699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="3419.3047">once(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3428.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="27" y="3432.2598">once(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3441.5801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="27" y="3445.2148">once(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3454.5352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="27" y="3458.1699">once(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3467.4902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="3471.125">once(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3480.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="3484.0801">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="3493.4004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="3497.0352">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="3506.3555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="3509.9902">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="3519.3105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="27" y="3522.9453">prependListener(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3532.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="27" y="3535.9004">prependListener(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3545.2207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="27" y="3548.8555">prependListener(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3558.1758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="374" x="27" y="3561.8105">prependListener(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3571.1309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="3574.7656">prependListener(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3584.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="381" x="27" y="3587.7207">prependListener(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3597.041" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="27" y="3600.6758">prependListener(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3609.9961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="400" x="27" y="3613.6309">prependOnceListener(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3622.9512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="400" x="27" y="3626.5859">prependOnceListener(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3635.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="400" x="27" y="3639.541">prependOnceListener(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3648.8613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="402" x="27" y="3652.4961">prependOnceListener(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3661.8164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="395" x="27" y="3665.4512">prependOnceListener(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3674.7715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="409" x="27" y="3678.4063">prependOnceListener(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3687.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="445" x="27" y="3691.3613">prependOnceListener(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3700.6816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="3704.3164">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="3713.6367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="27" y="3717.2715">removeAllListeners(event: string | symbol) : OutgoingMessage</text><ellipse cx="18" cy="3726.5918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="27" y="3730.2266">removeHeader(name: string) : void</text><ellipse cx="18" cy="3739.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="3743.1816">removeListener(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3752.502" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="3756.1367">removeListener(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3765.457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="3769.0918">removeListener(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3778.4121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="27" y="3782.0469">removeListener(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3791.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="27" y="3795.002">removeListener(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3804.3223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="27" y="3807.957">removeListener(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3817.2773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="27" y="3820.9121">removeListener(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3830.2324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="27" y="3833.8672">setDefaultEncoding(encoding: BufferEncoding) : OutgoingMessage</text><ellipse cx="18" cy="3843.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="459" x="27" y="3846.8223">setHeader(name: string, value: string | number | readonly string[]) : OutgoingMessage</text><ellipse cx="18" cy="3856.1426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="27" y="3859.7773">setMaxListeners(n: number) : OutgoingMessage</text><ellipse cx="18" cy="3869.0977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="27" y="3872.7324">setTimeout(msecs: number, callback: Function) : OutgoingMessage</text><ellipse cx="18" cy="3882.0527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="27" y="3885.6875">uncork() : void</text><ellipse cx="18" cy="3895.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="3898.6426">write(chunk: any, callback: Function) : boolean</text><ellipse cx="18" cy="3907.9629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="27" y="3911.5977">write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean</text><ellipse cx="18" cy="3920.918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="3924.5527">_construct(callback: Function) : void</text><ellipse cx="18" cy="3933.873" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="3937.5078">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="3946.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="27" y="3950.4629">_final(callback: Function) : void</text><ellipse cx="18" cy="3959.7832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="27" y="3963.418">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="18" cy="3972.7383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="27" y="3976.373">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[dbb0aac09fdd9457193737fcd885dcc9]
class Duplex--><rect codeLine="379" fill="#FEFECE" filter="url(#f10qt07d2a7so2)" height="3131.3086" id="Duplex" style="stroke:#A80036;stroke-width:1.5;" width="800" x="679.5" y="1700"/><ellipse cx="1054.75" cy="1716" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1057.2231,1722.1431 Q1056.6421,1722.4419 1056.0029,1722.5913 Q1055.3638,1722.7407 1054.6582,1722.7407 Q1052.1514,1722.7407 1050.8315,1721.0889 Q1049.5117,1719.437 1049.5117,1716.3159 Q1049.5117,1713.1865 1050.8315,1711.5347 Q1052.1514,1709.8828 1054.6582,1709.8828 Q1055.3638,1709.8828 1056.0112,1710.0322 Q1056.6587,1710.1816 1057.2231,1710.4805 L1057.2231,1713.2031 Q1056.5923,1712.6221 1055.9988,1712.3523 Q1055.4053,1712.0825 1054.7744,1712.0825 Q1053.4297,1712.0825 1052.7449,1713.1492 Q1052.0601,1714.2158 1052.0601,1716.3159 Q1052.0601,1718.4077 1052.7449,1719.4744 Q1053.4297,1720.541 1054.7744,1720.541 Q1055.4053,1720.541 1055.9988,1720.2712 Q1056.5923,1720.0015 1057.2231,1719.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="41" x="1075.25" y="1720.5352">Duplex</text><line style="stroke:#A80036;stroke-width:1.5;" x1="680.5" x2="1478.5" y1="1732" y2="1732"/><ellipse cx="690.5" cy="1743" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="699.5" y="1746.6348">allowHalfOpen : boolean</text><ellipse cx="690.5" cy="1755.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="699.5" y="1759.5898">captureRejections : boolean</text><ellipse cx="690.5" cy="1768.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="699.5" y="1772.5449">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="690.5" cy="1781.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="699.5" y="1785.5">defaultMaxListeners : number</text><ellipse cx="690.5" cy="1794.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="699.5" y="1798.4551">destroyed : boolean</text><ellipse cx="690.5" cy="1807.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="699.5" y="1811.4102">errorMonitor : typeof errorMonitor</text><ellipse cx="690.5" cy="1820.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="699.5" y="1824.3652">readable : boolean</text><ellipse cx="690.5" cy="1833.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699.5" y="1837.3203">readableAborted : boolean</text><ellipse cx="690.5" cy="1846.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699.5" y="1850.2754">readableDidRead : boolean</text><ellipse cx="690.5" cy="1859.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="699.5" y="1863.2305">readableEncoding : null | BufferEncoding</text><ellipse cx="690.5" cy="1872.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="699.5" y="1876.1855">readableEnded : boolean</text><ellipse cx="690.5" cy="1885.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="699.5" y="1889.1406">readableFlowing : null | boolean</text><ellipse cx="690.5" cy="1898.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="699.5" y="1902.0957">readableHighWaterMark : number</text><ellipse cx="690.5" cy="1911.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="699.5" y="1915.0508">readableLength : number</text><ellipse cx="690.5" cy="1924.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="699.5" y="1928.0059">readableObjectMode : boolean</text><ellipse cx="690.5" cy="1937.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="699.5" y="1940.9609">writable : boolean</text><ellipse cx="690.5" cy="1950.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="699.5" y="1953.916">writableCorked : number</text><ellipse cx="690.5" cy="1963.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="699.5" y="1966.8711">writableEnded : boolean</text><ellipse cx="690.5" cy="1976.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699.5" y="1979.8262">writableFinished : boolean</text><ellipse cx="690.5" cy="1989.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="699.5" y="1992.7813">writableHighWaterMark : number</text><ellipse cx="690.5" cy="2002.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="699.5" y="2005.7363">writableLength : number</text><ellipse cx="690.5" cy="2015.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="2018.6914">writableObjectMode : boolean</text><ellipse cx="690.5" cy="2028.0117" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="699.5" y="2031.6465">allowHalfOpen : boolean</text><ellipse cx="690.5" cy="2040.9668" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="699.5" y="2044.6016">captureRejections : boolean</text><ellipse cx="690.5" cy="2053.9219" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="699.5" y="2057.5566">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="690.5" cy="2066.877" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="699.5" y="2070.5117">defaultMaxListeners : number</text><ellipse cx="690.5" cy="2079.832" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="699.5" y="2083.4668">destroyed : boolean</text><ellipse cx="690.5" cy="2092.7871" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="699.5" y="2096.4219">errorMonitor : typeof errorMonitor</text><ellipse cx="690.5" cy="2105.7422" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="699.5" y="2109.377">readable : boolean</text><ellipse cx="690.5" cy="2118.6973" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699.5" y="2122.332">readableAborted : boolean</text><ellipse cx="690.5" cy="2131.6523" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699.5" y="2135.2871">readableDidRead : boolean</text><ellipse cx="690.5" cy="2144.6074" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="699.5" y="2148.2422">readableEncoding : null | BufferEncoding</text><ellipse cx="690.5" cy="2157.5625" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="699.5" y="2161.1973">readableEnded : boolean</text><ellipse cx="690.5" cy="2170.5176" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="699.5" y="2174.1523">readableFlowing : null | boolean</text><ellipse cx="690.5" cy="2183.4727" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="699.5" y="2187.1074">readableHighWaterMark : number</text><ellipse cx="690.5" cy="2196.4277" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="699.5" y="2200.0625">readableLength : number</text><ellipse cx="690.5" cy="2209.3828" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="699.5" y="2213.0176">readableObjectMode : boolean</text><ellipse cx="690.5" cy="2222.3379" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="699.5" y="2225.9727">writable : boolean</text><ellipse cx="690.5" cy="2235.293" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="699.5" y="2238.9277">writableCorked : number</text><ellipse cx="690.5" cy="2248.248" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="699.5" y="2251.8828">writableEnded : boolean</text><ellipse cx="690.5" cy="2261.2031" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699.5" y="2264.8379">writableFinished : boolean</text><ellipse cx="690.5" cy="2274.1582" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="699.5" y="2277.793">writableHighWaterMark : number</text><ellipse cx="690.5" cy="2287.1133" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="699.5" y="2290.748">writableLength : number</text><ellipse cx="690.5" cy="2300.0684" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="2303.7031">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="680.5" x2="1478.5" y1="2310.0234" y2="2310.0234"/><ellipse cx="690.5" cy="2321.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699.5" y="2324.6582">addListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2333.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="699.5" y="2337.6133">addListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2346.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="699.5" y="2350.5684">addListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2359.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699.5" y="2363.5234">addListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2372.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="699.5" y="2376.4785">addListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2385.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="699.5" y="2389.4336">addListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2398.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="699.5" y="2402.3887">addListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2411.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="699.5" y="2415.3438">addListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="2424.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="699.5" y="2428.2988">cork() : void</text><ellipse cx="690.5" cy="2437.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="699.5" y="2441.2539">destroy(error: Error) : void</text><ellipse cx="690.5" cy="2450.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="699.5" y="2454.209">emit(event: "close") : boolean</text><ellipse cx="690.5" cy="2463.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="699.5" y="2467.1641">emit(event: "data", chunk: any) : boolean</text><ellipse cx="690.5" cy="2476.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="699.5" y="2480.1191">emit(event: "end") : boolean</text><ellipse cx="690.5" cy="2489.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="699.5" y="2493.0742">emit(event: "error", err: Error) : boolean</text><ellipse cx="690.5" cy="2502.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="2506.0293">emit(event: "pause") : boolean</text><ellipse cx="690.5" cy="2515.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="699.5" y="2518.9844">emit(event: "readable") : boolean</text><ellipse cx="690.5" cy="2528.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="699.5" y="2531.9395">emit(event: "resume") : boolean</text><ellipse cx="690.5" cy="2541.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="699.5" y="2544.8945">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="690.5" cy="2554.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="699.5" y="2557.8496">end(cb: Function) : void</text><ellipse cx="690.5" cy="2567.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="699.5" y="2570.8047">end(chunk: any, cb: Function) : void</text><ellipse cx="690.5" cy="2580.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="699.5" y="2583.7598">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="690.5" cy="2593.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="699.5" y="2596.7148">eventNames() : (string | symbol)[]</text><ellipse cx="690.5" cy="2606.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="699.5" y="2609.6699">from(src: string | Object | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt; | Promise&lt;any&gt; | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex</text><ellipse cx="690.5" cy="2618.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="699.5" y="2622.625">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="690.5" cy="2631.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="699.5" y="2635.5801">getMaxListeners() : number</text><ellipse cx="690.5" cy="2644.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="699.5" y="2648.5352">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="690.5" cy="2657.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="699.5" y="2661.4902">isPaused() : boolean</text><ellipse cx="690.5" cy="2670.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="699.5" y="2674.4453">listenerCount(eventName: string | symbol) : number</text><ellipse cx="690.5" cy="2683.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="699.5" y="2687.4004">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="690.5" cy="2696.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="699.5" y="2700.3555">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="2709.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="699.5" y="2713.3105">off(eventName: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="2722.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="2726.2656">on(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2735.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="699.5" y="2739.2207">on(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2748.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="699.5" y="2752.1758">on(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2761.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="2765.1309">on(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2774.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="699.5" y="2778.0859">on(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2787.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="699.5" y="2791.041">on(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2800.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="2803.9961">on(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2813.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="699.5" y="2816.9512">on(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="2826.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="699.5" y="2829.9063">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690.5" cy="2839.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="2842.8613">once(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2852.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699.5" y="2855.8164">once(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2865.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="699.5" y="2868.7715">once(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2878.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="2881.7266">once(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2891.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="699.5" y="2894.6816">once(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2904.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="699.5" y="2907.6367">once(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2916.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="699.5" y="2920.5918">once(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2929.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="699.5" y="2933.5469">once(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="2942.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="699.5" y="2946.502">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690.5" cy="2955.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="699.5" y="2959.457">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690.5" cy="2968.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="699.5" y="2972.4121">pause() : Duplex</text><ellipse cx="690.5" cy="2981.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="699.5" y="2985.3672">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="690.5" cy="2994.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699.5" y="2998.3223">prependListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3007.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="3011.2773">prependListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3020.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="699.5" y="3024.2324">prependListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3033.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699.5" y="3037.1875">prependListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3046.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="699.5" y="3050.1426">prependListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3059.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="699.5" y="3063.0977">prependListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3072.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="699.5" y="3076.0527">prependListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3085.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="699.5" y="3089.0078">prependListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3098.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699.5" y="3101.9629">prependOnceListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3111.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="699.5" y="3114.918">prependOnceListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3124.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="699.5" y="3127.873">prependOnceListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3137.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699.5" y="3140.8281">prependOnceListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3150.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="699.5" y="3153.7832">prependOnceListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3163.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="699.5" y="3166.7383">prependOnceListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3176.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="699.5" y="3179.6934">prependOnceListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3189.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="699.5" y="3192.6484">prependOnceListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3201.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="699.5" y="3205.6035">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="690.5" cy="3214.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="699.5" y="3218.5586">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="3227.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="699.5" y="3231.5137">read(size: number) : any</text><ellipse cx="690.5" cy="3240.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="699.5" y="3244.4688">removeAllListeners(event: string | symbol) : Duplex</text><ellipse cx="690.5" cy="3253.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="3257.4238">removeListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3266.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="699.5" y="3270.3789">removeListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3279.6992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="699.5" y="3283.334">removeListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3292.6543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="3296.2891">removeListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3305.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="699.5" y="3309.2441">removeListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3318.5645" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="699.5" y="3322.1992">removeListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3331.5195" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="699.5" y="3335.1543">removeListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3344.4746" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="699.5" y="3348.1094">removeListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3357.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="699.5" y="3361.0645">resume() : Duplex</text><ellipse cx="690.5" cy="3370.3848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="699.5" y="3374.0195">setDefaultEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="690.5" cy="3383.3398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="699.5" y="3386.9746">setEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="690.5" cy="3396.2949" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="699.5" y="3399.9297">setMaxListeners(n: number) : Duplex</text><ellipse cx="690.5" cy="3409.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="699.5" y="3412.8848">uncork() : void</text><ellipse cx="690.5" cy="3422.2051" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="699.5" y="3425.8398">unpipe(destination: WritableStream) : Duplex</text><ellipse cx="690.5" cy="3435.1602" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="699.5" y="3438.7949">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="690.5" cy="3448.1152" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="699.5" y="3451.75">wrap(stream: ReadableStream) : Duplex</text><ellipse cx="690.5" cy="3461.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="699.5" y="3464.7051">write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="690.5" cy="3474.0254" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="699.5" y="3477.6602">write(chunk: any, cb: Function) : boolean</text><ellipse cx="690.5" cy="3486.9805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699.5" y="3490.6152">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690.5" cy="3499.9355" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="699.5" y="3503.5703">_construct(callback: Function) : void</text><ellipse cx="690.5" cy="3512.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="699.5" y="3516.5254">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="690.5" cy="3525.8457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="699.5" y="3529.4805">_final(callback: Function) : void</text><ellipse cx="690.5" cy="3538.8008" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699.5" y="3542.4355">_read(size: number) : void</text><ellipse cx="690.5" cy="3551.7559" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="699.5" y="3555.3906">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="690.5" cy="3564.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="699.5" y="3568.3457">_writev(chunks: Object[], callback: Function) : void</text><ellipse cx="690.5" cy="3577.666" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699.5" y="3581.3008">addListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3590.6211" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="699.5" y="3594.2559">addListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3603.5762" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="699.5" y="3607.2109">addListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3616.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699.5" y="3620.166">addListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3629.4863" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="699.5" y="3633.1211">addListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3642.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="699.5" y="3646.0762">addListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3655.3965" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="699.5" y="3659.0313">addListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3668.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="699.5" y="3671.9863">addListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3681.3066" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="699.5" y="3684.9414">cork() : void</text><ellipse cx="690.5" cy="3694.2617" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="699.5" y="3697.8965">destroy(error: Error) : void</text><ellipse cx="690.5" cy="3707.2168" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="699.5" y="3710.8516">emit(event: "close") : boolean</text><ellipse cx="690.5" cy="3720.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="699.5" y="3723.8066">emit(event: "data", chunk: any) : boolean</text><ellipse cx="690.5" cy="3733.127" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="699.5" y="3736.7617">emit(event: "end") : boolean</text><ellipse cx="690.5" cy="3746.082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="699.5" y="3749.7168">emit(event: "error", err: Error) : boolean</text><ellipse cx="690.5" cy="3759.0371" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="3762.6719">emit(event: "pause") : boolean</text><ellipse cx="690.5" cy="3771.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="699.5" y="3775.627">emit(event: "readable") : boolean</text><ellipse cx="690.5" cy="3784.9473" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="699.5" y="3788.582">emit(event: "resume") : boolean</text><ellipse cx="690.5" cy="3797.9023" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="699.5" y="3801.5371">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="690.5" cy="3810.8574" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="699.5" y="3814.4922">end(cb: Function) : void</text><ellipse cx="690.5" cy="3823.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="699.5" y="3827.4473">end(chunk: any, cb: Function) : void</text><ellipse cx="690.5" cy="3836.7676" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="699.5" y="3840.4023">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="690.5" cy="3849.7227" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="699.5" y="3853.3574">eventNames() : (string | symbol)[]</text><ellipse cx="690.5" cy="3862.6777" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="699.5" y="3866.3125">from(src: string | Object | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt; | Promise&lt;any&gt; | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex</text><ellipse cx="690.5" cy="3875.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="699.5" y="3879.2676">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="690.5" cy="3888.5879" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="699.5" y="3892.2227">getMaxListeners() : number</text><ellipse cx="690.5" cy="3901.543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="699.5" y="3905.1777">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="690.5" cy="3914.498" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="699.5" y="3918.1328">isPaused() : boolean</text><ellipse cx="690.5" cy="3927.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="699.5" y="3931.0879">listenerCount(eventName: string | symbol) : number</text><ellipse cx="690.5" cy="3940.4082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="699.5" y="3944.043">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="690.5" cy="3953.3633" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="699.5" y="3956.998">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="3966.3184" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="699.5" y="3969.9531">off(eventName: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3979.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="3982.9082">on(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3992.2285" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="699.5" y="3995.8633">on(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4005.1836" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="699.5" y="4008.8184">on(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4018.1387" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="4021.7734">on(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4031.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="699.5" y="4034.7285">on(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4044.0488" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="699.5" y="4047.6836">on(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4057.0039" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="4060.6387">on(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4069.959" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="699.5" y="4073.5938">on(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4082.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="699.5" y="4086.5488">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690.5" cy="4095.8691" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="4099.5039">once(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4108.8242" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699.5" y="4112.459">once(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4121.7793" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="699.5" y="4125.4141">once(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4134.7344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="4138.3691">once(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4147.6895" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="699.5" y="4151.3242">once(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4160.6445" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="699.5" y="4164.2793">once(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4173.5996" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="699.5" y="4177.2344">once(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4186.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="699.5" y="4190.1895">once(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4199.5098" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="699.5" y="4203.1445">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690.5" cy="4212.4648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="699.5" y="4216.0996">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690.5" cy="4225.4199" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="699.5" y="4229.0547">pause() : Duplex</text><ellipse cx="690.5" cy="4238.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="699.5" y="4242.0098">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="690.5" cy="4251.3301" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699.5" y="4254.9648">prependListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4264.2852" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="4267.9199">prependListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4277.2402" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="699.5" y="4280.875">prependListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4290.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699.5" y="4293.8301">prependListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4303.1504" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="699.5" y="4306.7852">prependListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4316.1055" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="699.5" y="4319.7402">prependListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4329.0605" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="699.5" y="4332.6953">prependListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4342.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="699.5" y="4345.6504">prependListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4354.9707" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699.5" y="4358.6055">prependOnceListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4367.9258" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="699.5" y="4371.5605">prependOnceListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4380.8809" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="699.5" y="4384.5156">prependOnceListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4393.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699.5" y="4397.4707">prependOnceListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4406.791" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="699.5" y="4410.4258">prependOnceListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4419.7461" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="699.5" y="4423.3809">prependOnceListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4432.7012" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="699.5" y="4436.3359">prependOnceListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4445.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="699.5" y="4449.291">prependOnceListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4458.6113" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="699.5" y="4462.2461">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="690.5" cy="4471.5664" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="699.5" y="4475.2012">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="4484.5215" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="699.5" y="4488.1563">read(size: number) : any</text><ellipse cx="690.5" cy="4497.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="699.5" y="4501.1113">removeAllListeners(event: string | symbol) : Duplex</text><ellipse cx="690.5" cy="4510.4316" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="4514.0664">removeListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4523.3867" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="699.5" y="4527.0215">removeListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4536.3418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="699.5" y="4539.9766">removeListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4549.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="4552.9316">removeListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4562.252" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="699.5" y="4565.8867">removeListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4575.207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="699.5" y="4578.8418">removeListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4588.1621" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="699.5" y="4591.7969">removeListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4601.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="699.5" y="4604.752">removeListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4614.0723" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="699.5" y="4617.707">resume() : Duplex</text><ellipse cx="690.5" cy="4627.0273" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="699.5" y="4630.6621">setDefaultEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="690.5" cy="4639.9824" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="699.5" y="4643.6172">setEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="690.5" cy="4652.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="699.5" y="4656.5723">setMaxListeners(n: number) : Duplex</text><ellipse cx="690.5" cy="4665.8926" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="699.5" y="4669.5273">uncork() : void</text><ellipse cx="690.5" cy="4678.8477" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="699.5" y="4682.4824">unpipe(destination: WritableStream) : Duplex</text><ellipse cx="690.5" cy="4691.8027" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="699.5" y="4695.4375">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="690.5" cy="4704.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="699.5" y="4708.3926">wrap(stream: ReadableStream) : Duplex</text><ellipse cx="690.5" cy="4717.7129" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="699.5" y="4721.3477">write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="690.5" cy="4730.668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="699.5" y="4734.3027">write(chunk: any, cb: Function) : boolean</text><ellipse cx="690.5" cy="4743.623" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699.5" y="4747.2578">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690.5" cy="4756.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="699.5" y="4760.2129">_construct(callback: Function) : void</text><ellipse cx="690.5" cy="4769.5332" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="699.5" y="4773.168">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="690.5" cy="4782.4883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="699.5" y="4786.123">_final(callback: Function) : void</text><ellipse cx="690.5" cy="4795.4434" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699.5" y="4799.0781">_read(size: number) : void</text><ellipse cx="690.5" cy="4808.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="699.5" y="4812.0332">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="690.5" cy="4821.3535" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="699.5" y="4824.9883">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[c5033a169493e9fc7c976c9808c34910]
reverse link Stream to Writable--><path codeLine="122" d="M853.53,398.12 C858.19,411.33 862.99,424.93 867.9,438.84 " fill="none" id="Stream-backto-Writable" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="846.86,400.26,846.81,379.07,860.06,395.6,846.86,400.26" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[722c79936b051f4d7c91a0b945b9cd18]
reverse link WritableStream to Writable--><path codeLine="146" d="M1314.59,372.27 C1307.18,393.28 1299.34,415.51 1291.19,438.6 " fill="none" id="WritableStream-backto-Writable" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1308.02,369.87,1321.27,353.34,1321.22,374.53,1308.02,369.87" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[54f74e101d05a9e9a2c879a3bc5d61b3]
reverse link Writable to OutgoingMessage--><path codeLine="256" d="M750.97,1516.05 C717.52,1576.33 686.66,1638.48 661.5,1700 C552.06,1967.58 476.08,2276.13 424.43,2548.14 " fill="none" id="Writable-backto-OutgoingMessage" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="745.06,1512.27,760.95,1498.25,757.27,1519.12,745.06,1512.27" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[b14a26cd20596b28f442b4a89d6e536c]
reverse link Writable to Duplex--><path codeLine="378" d="M1067.93,1660.48 C1067.86,1673.47 1067.8,1686.58 1067.74,1699.79 " fill="none" id="Writable-backto-Duplex" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1060.93,1660.11,1068.04,1640.15,1074.93,1660.19,1060.93,1660.11" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[b14a26cd20596b28f442b4a89d6e536c]
reverse link Writable to Duplex--><path codeLine="500" d="M1091.75,1660.48 C1091.82,1673.47 1091.89,1686.58 1091.95,1699.79 " fill="none" id="Writable-backto-Duplex-1" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1084.75,1660.19,1091.64,1640.15,1098.75,1660.11,1084.75,1660.19" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[20417d0f75778eabfb54303d459a2c77]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "Writable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Writable
    +addListener(event: "drain", listener: Function) : Writable
    +addListener(event: "error", listener: Function) : Writable
    +addListener(event: "finish", listener: Function) : Writable
    +addListener(event: "pipe", listener: Function) : Writable
    +addListener(event: "unpipe", listener: Function) : Writable
    +addListener(event: string | symbol, listener: Function) : Writable
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "drain") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "finish") : boolean
    +emit(event: "pipe", src: Readable) : boolean
    +emit(event: "unpipe", src: Readable) : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Writable
    +on(event: "close", listener: Function) : Writable
    +on(event: "drain", listener: Function) : Writable
    +on(event: "error", listener: Function) : Writable
    +on(event: "finish", listener: Function) : Writable
    +on(event: "pipe", listener: Function) : Writable
    +on(event: "unpipe", listener: Function) : Writable
    +on(event: string | symbol, listener: Function) : Writable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Writable
    +once(event: "drain", listener: Function) : Writable
    +once(event: "error", listener: Function) : Writable
    +once(event: "finish", listener: Function) : Writable
    +once(event: "pipe", listener: Function) : Writable
    +once(event: "unpipe", listener: Function) : Writable
    +once(event: string | symbol, listener: Function) : Writable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Writable
    +prependListener(event: "drain", listener: Function) : Writable
    +prependListener(event: "error", listener: Function) : Writable
    +prependListener(event: "finish", listener: Function) : Writable
    +prependListener(event: "pipe", listener: Function) : Writable
    +prependListener(event: "unpipe", listener: Function) : Writable
    +prependListener(event: string | symbol, listener: Function) : Writable
    +prependOnceListener(event: "close", listener: Function) : Writable
    +prependOnceListener(event: "drain", listener: Function) : Writable
    +prependOnceListener(event: "error", listener: Function) : Writable
    +prependOnceListener(event: "finish", listener: Function) : Writable
    +prependOnceListener(event: "pipe", listener: Function) : Writable
    +prependOnceListener(event: "unpipe", listener: Function) : Writable
    +prependOnceListener(event: string | symbol, listener: Function) : Writable
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Writable
    +removeListener(event: "close", listener: Function) : Writable
    +removeListener(event: "drain", listener: Function) : Writable
    +removeListener(event: "error", listener: Function) : Writable
    +removeListener(event: "finish", listener: Function) : Writable
    +removeListener(event: "pipe", listener: Function) : Writable
    +removeListener(event: "unpipe", listener: Function) : Writable
    +removeListener(event: string | symbol, listener: Function) : Writable
    +setDefaultEncoding(encoding: BufferEncoding) : Writable
    +setMaxListeners(n: number) : Writable
    +uncork() : void
    +write(chunk: any, callback: Function) : boolean
    +write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
class "Stream" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +addListener(eventName: string | symbol, listener: Function) : Stream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Stream
    +on(eventName: string | symbol, listener: Function) : Stream
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(eventName: string | symbol, listener: Function) : Stream
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : Stream
    +prependOnceListener(eventName: string | symbol, listener: Function) : Stream
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Stream
    +removeListener(eventName: string | symbol, listener: Function) : Stream
    +setMaxListeners(n: number) : Stream
}
"Stream" <|- - "Writable"
interface "WritableStream" {
    +writable : boolean
    +addListener(eventName: string | symbol, listener: Function) : WritableStream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(data: string | Uint8Array, cb: Function) : void
    +end(str: string, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : WritableStream
    +on(eventName: string | symbol, listener: Function) : WritableStream
    +once(eventName: string | symbol, listener: Function) : WritableStream
    +prependListener(eventName: string | symbol, listener: Function) : WritableStream
    +prependOnceListener(eventName: string | symbol, listener: Function) : WritableStream
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : WritableStream
    +removeListener(eventName: string | symbol, listener: Function) : WritableStream
    +setMaxListeners(n: number) : WritableStream
    +write(buffer: string | Uint8Array, cb: Function) : boolean
    +write(str: string, encoding: BufferEncoding, cb: Function) : boolean
}
"WritableStream" <|.. "Writable"
class "OutgoingMessage" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    +chunkedEncoding : boolean
    +connection : null | Socket
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +finished : boolean
    +headersSent : boolean
    +req : IncomingMessage
    +sendDate : boolean
    +shouldKeepAlive : boolean
    +socket : null | Socket
    +useChunkedEncodingByDefault : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : OutgoingMessage
    +addListener(event: "drain", listener: Function) : OutgoingMessage
    +addListener(event: "error", listener: Function) : OutgoingMessage
    +addListener(event: "finish", listener: Function) : OutgoingMessage
    +addListener(event: "pipe", listener: Function) : OutgoingMessage
    +addListener(event: "unpipe", listener: Function) : OutgoingMessage
    +addListener(event: string | symbol, listener: Function) : OutgoingMessage
    +addTrailers(headers: OutgoingHttpHeaders | readonly [string, string][]) : void
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "drain") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "finish") : boolean
    +emit(event: "pipe", src: Readable) : boolean
    +emit(event: "unpipe", src: Readable) : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    +flushHeaders() : void
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getHeader(name: string) : undefined | string | number | string[]
    +getHeaderNames() : string[]
    +getHeaders() : OutgoingHttpHeaders
    +getMaxListeners() : number
    +hasHeader(name: string) : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : OutgoingMessage
    +on(event: "close", listener: Function) : OutgoingMessage
    +on(event: "drain", listener: Function) : OutgoingMessage
    +on(event: "error", listener: Function) : OutgoingMessage
    +on(event: "finish", listener: Function) : OutgoingMessage
    +on(event: "pipe", listener: Function) : OutgoingMessage
    +on(event: "unpipe", listener: Function) : OutgoingMessage
    +on(event: string | symbol, listener: Function) : OutgoingMessage
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : OutgoingMessage
    +once(event: "drain", listener: Function) : OutgoingMessage
    +once(event: "error", listener: Function) : OutgoingMessage
    +once(event: "finish", listener: Function) : OutgoingMessage
    +once(event: "pipe", listener: Function) : OutgoingMessage
    +once(event: "unpipe", listener: Function) : OutgoingMessage
    +once(event: string | symbol, listener: Function) : OutgoingMessage
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : OutgoingMessage
    +prependListener(event: "drain", listener: Function) : OutgoingMessage
    +prependListener(event: "error", listener: Function) : OutgoingMessage
    +prependListener(event: "finish", listener: Function) : OutgoingMessage
    +prependListener(event: "pipe", listener: Function) : OutgoingMessage
    +prependListener(event: "unpipe", listener: Function) : OutgoingMessage
    +prependListener(event: string | symbol, listener: Function) : OutgoingMessage
    +prependOnceListener(event: "close", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "drain", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "error", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "finish", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "pipe", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "unpipe", listener: Function) : OutgoingMessage
    +prependOnceListener(event: string | symbol, listener: Function) : OutgoingMessage
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : OutgoingMessage
    +removeHeader(name: string) : void
    +removeListener(event: "close", listener: Function) : OutgoingMessage
    +removeListener(event: "drain", listener: Function) : OutgoingMessage
    +removeListener(event: "error", listener: Function) : OutgoingMessage
    +removeListener(event: "finish", listener: Function) : OutgoingMessage
    +removeListener(event: "pipe", listener: Function) : OutgoingMessage
    +removeListener(event: "unpipe", listener: Function) : OutgoingMessage
    +removeListener(event: string | symbol, listener: Function) : OutgoingMessage
    +setDefaultEncoding(encoding: BufferEncoding) : OutgoingMessage
    +setHeader(name: string, value: string | number | readonly string[]) : OutgoingMessage
    +setMaxListeners(n: number) : OutgoingMessage
    +setTimeout(msecs: number, callback: Function) : OutgoingMessage
    +uncork() : void
    +write(chunk: any, callback: Function) : boolean
    +write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Writable" <|- - "OutgoingMessage"
class "Duplex" {
    +allowHalfOpen : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Duplex
    +addListener(event: "data", listener: Function) : Duplex
    +addListener(event: "end", listener: Function) : Duplex
    +addListener(event: "error", listener: Function) : Duplex
    +addListener(event: "pause", listener: Function) : Duplex
    +addListener(event: "readable", listener: Function) : Duplex
    +addListener(event: "resume", listener: Function) : Duplex
    +addListener(event: string | symbol, listener: Function) : Duplex
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | Stream | Iterable<any> | AsyncIterable<any> | Promise<any> | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Duplex
    +on(event: "close", listener: Function) : Duplex
    +on(event: "data", listener: Function) : Duplex
    +on(event: "end", listener: Function) : Duplex
    +on(event: "error", listener: Function) : Duplex
    +on(event: "pause", listener: Function) : Duplex
    +on(event: "readable", listener: Function) : Duplex
    +on(event: "resume", listener: Function) : Duplex
    +on(event: string | symbol, listener: Function) : Duplex
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Duplex
    +once(event: "data", listener: Function) : Duplex
    +once(event: "end", listener: Function) : Duplex
    +once(event: "error", listener: Function) : Duplex
    +once(event: "pause", listener: Function) : Duplex
    +once(event: "readable", listener: Function) : Duplex
    +once(event: "resume", listener: Function) : Duplex
    +once(event: string | symbol, listener: Function) : Duplex
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Duplex
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Duplex
    +prependListener(event: "data", listener: Function) : Duplex
    +prependListener(event: "end", listener: Function) : Duplex
    +prependListener(event: "error", listener: Function) : Duplex
    +prependListener(event: "pause", listener: Function) : Duplex
    +prependListener(event: "readable", listener: Function) : Duplex
    +prependListener(event: "resume", listener: Function) : Duplex
    +prependListener(event: string | symbol, listener: Function) : Duplex
    +prependOnceListener(event: "close", listener: Function) : Duplex
    +prependOnceListener(event: "data", listener: Function) : Duplex
    +prependOnceListener(event: "end", listener: Function) : Duplex
    +prependOnceListener(event: "error", listener: Function) : Duplex
    +prependOnceListener(event: "pause", listener: Function) : Duplex
    +prependOnceListener(event: "readable", listener: Function) : Duplex
    +prependOnceListener(event: "resume", listener: Function) : Duplex
    +prependOnceListener(event: string | symbol, listener: Function) : Duplex
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Duplex
    +removeListener(event: "close", listener: Function) : Duplex
    +removeListener(event: "data", listener: Function) : Duplex
    +removeListener(event: "end", listener: Function) : Duplex
    +removeListener(event: "error", listener: Function) : Duplex
    +removeListener(event: "pause", listener: Function) : Duplex
    +removeListener(event: "readable", listener: Function) : Duplex
    +removeListener(event: "resume", listener: Function) : Duplex
    +removeListener(event: string | symbol, listener: Function) : Duplex
    +resume() : Duplex
    +setDefaultEncoding(encoding: BufferEncoding) : Duplex
    +setEncoding(encoding: BufferEncoding) : Duplex
    +setMaxListeners(n: number) : Duplex
    +uncork() : void
    +unpipe(destination: WritableStream) : Duplex
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Duplex
    +write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean
    +write(chunk: any, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_read(size: number) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Writable" <|.. "Duplex"
class "Duplex" {
    +allowHalfOpen : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Duplex
    +addListener(event: "data", listener: Function) : Duplex
    +addListener(event: "end", listener: Function) : Duplex
    +addListener(event: "error", listener: Function) : Duplex
    +addListener(event: "pause", listener: Function) : Duplex
    +addListener(event: "readable", listener: Function) : Duplex
    +addListener(event: "resume", listener: Function) : Duplex
    +addListener(event: string | symbol, listener: Function) : Duplex
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | Stream | Iterable<any> | AsyncIterable<any> | Promise<any> | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Duplex
    +on(event: "close", listener: Function) : Duplex
    +on(event: "data", listener: Function) : Duplex
    +on(event: "end", listener: Function) : Duplex
    +on(event: "error", listener: Function) : Duplex
    +on(event: "pause", listener: Function) : Duplex
    +on(event: "readable", listener: Function) : Duplex
    +on(event: "resume", listener: Function) : Duplex
    +on(event: string | symbol, listener: Function) : Duplex
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Duplex
    +once(event: "data", listener: Function) : Duplex
    +once(event: "end", listener: Function) : Duplex
    +once(event: "error", listener: Function) : Duplex
    +once(event: "pause", listener: Function) : Duplex
    +once(event: "readable", listener: Function) : Duplex
    +once(event: "resume", listener: Function) : Duplex
    +once(event: string | symbol, listener: Function) : Duplex
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Duplex
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Duplex
    +prependListener(event: "data", listener: Function) : Duplex
    +prependListener(event: "end", listener: Function) : Duplex
    +prependListener(event: "error", listener: Function) : Duplex
    +prependListener(event: "pause", listener: Function) : Duplex
    +prependListener(event: "readable", listener: Function) : Duplex
    +prependListener(event: "resume", listener: Function) : Duplex
    +prependListener(event: string | symbol, listener: Function) : Duplex
    +prependOnceListener(event: "close", listener: Function) : Duplex
    +prependOnceListener(event: "data", listener: Function) : Duplex
    +prependOnceListener(event: "end", listener: Function) : Duplex
    +prependOnceListener(event: "error", listener: Function) : Duplex
    +prependOnceListener(event: "pause", listener: Function) : Duplex
    +prependOnceListener(event: "readable", listener: Function) : Duplex
    +prependOnceListener(event: "resume", listener: Function) : Duplex
    +prependOnceListener(event: string | symbol, listener: Function) : Duplex
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Duplex
    +removeListener(event: "close", listener: Function) : Duplex
    +removeListener(event: "data", listener: Function) : Duplex
    +removeListener(event: "end", listener: Function) : Duplex
    +removeListener(event: "error", listener: Function) : Duplex
    +removeListener(event: "pause", listener: Function) : Duplex
    +removeListener(event: "readable", listener: Function) : Duplex
    +removeListener(event: "resume", listener: Function) : Duplex
    +removeListener(event: string | symbol, listener: Function) : Duplex
    +resume() : Duplex
    +setDefaultEncoding(encoding: BufferEncoding) : Duplex
    +setEncoding(encoding: BufferEncoding) : Duplex
    +setMaxListeners(n: number) : Duplex
    +uncork() : void
    +unpipe(destination: WritableStream) : Duplex
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Duplex
    +write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean
    +write(chunk: any, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_read(size: number) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Writable" <|.. "Duplex"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>