<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="5001px" preserveAspectRatio="none" style="width:1637px;height:5001px;background:#00000000;" version="1.1" viewBox="0 0 1637 5001" width="1637px" zoomAndPan="magnify"><defs><filter height="300%" id="f1n1n93ejt9oeg" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[c367c524f13260ba207946109d621584]
class Readable--><rect codeLine="4" fill="#FEFECE" filter="url(#f1n1n93ejt9oeg)" height="1343.5078" id="Readable" style="stroke:#A80036;stroke-width:1.5;" width="637" x="761" y="452"/><ellipse cx="1047.75" cy="468" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1050.2231,474.1431 Q1049.6421,474.4419 1049.0029,474.5913 Q1048.3638,474.7407 1047.6582,474.7407 Q1045.1514,474.7407 1043.8315,473.0889 Q1042.5117,471.437 1042.5117,468.3159 Q1042.5117,465.1865 1043.8315,463.5347 Q1045.1514,461.8828 1047.6582,461.8828 Q1048.3638,461.8828 1049.0112,462.0322 Q1049.6587,462.1816 1050.2231,462.4805 L1050.2231,465.2031 Q1049.5923,464.6221 1048.9988,464.3523 Q1048.4053,464.0825 1047.7744,464.0825 Q1046.4297,464.0825 1045.7449,465.1492 Q1045.0601,466.2158 1045.0601,468.3159 Q1045.0601,470.4077 1045.7449,471.4744 Q1046.4297,472.541 1047.7744,472.541 Q1048.4053,472.541 1048.9988,472.2712 Q1049.5923,472.0015 1050.2231,471.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="55" x="1068.25" y="472.5352">Readable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="762" x2="1397" y1="484" y2="484"/><ellipse cx="772" cy="495" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="781" y="498.6348">captureRejections : boolean</text><ellipse cx="772" cy="507.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="781" y="511.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="772" cy="520.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="781" y="524.5449">defaultMaxListeners : number</text><ellipse cx="772" cy="533.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="781" y="537.5">destroyed : boolean</text><ellipse cx="772" cy="546.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="781" y="550.4551">errorMonitor : typeof errorMonitor</text><ellipse cx="772" cy="559.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="781" y="563.4102">readable : boolean</text><ellipse cx="772" cy="572.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="781" y="576.3652">readableAborted : boolean</text><ellipse cx="772" cy="585.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="781" y="589.3203">readableDidRead : boolean</text><ellipse cx="772" cy="598.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="781" y="602.2754">readableEncoding : null | BufferEncoding</text><ellipse cx="772" cy="611.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="781" y="615.2305">readableEnded : boolean</text><ellipse cx="772" cy="624.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="781" y="628.1855">readableFlowing : null | boolean</text><ellipse cx="772" cy="637.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="781" y="641.1406">readableHighWaterMark : number</text><ellipse cx="772" cy="650.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="781" y="654.0957">readableLength : number</text><ellipse cx="772" cy="663.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="781" y="667.0508">readableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="762" x2="1397" y1="673.3711" y2="673.3711"/><ellipse cx="772" cy="684.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="781" y="688.0059">addListener(event: "close", listener: Function) : Readable</text><ellipse cx="772" cy="697.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="781" y="700.9609">addListener(event: "data", listener: Function) : Readable</text><ellipse cx="772" cy="710.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="781" y="713.916">addListener(event: "end", listener: Function) : Readable</text><ellipse cx="772" cy="723.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="781" y="726.8711">addListener(event: "error", listener: Function) : Readable</text><ellipse cx="772" cy="736.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="781" y="739.8262">addListener(event: "pause", listener: Function) : Readable</text><ellipse cx="772" cy="749.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="781" y="752.7813">addListener(event: "readable", listener: Function) : Readable</text><ellipse cx="772" cy="762.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="781" y="765.7363">addListener(event: "resume", listener: Function) : Readable</text><ellipse cx="772" cy="775.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="781" y="778.6914">addListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="772" cy="788.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="781" y="791.6465">destroy(error: Error) : void</text><ellipse cx="772" cy="800.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="781" y="804.6016">emit(event: "close") : boolean</text><ellipse cx="772" cy="813.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="781" y="817.5566">emit(event: "data", chunk: any) : boolean</text><ellipse cx="772" cy="826.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="781" y="830.5117">emit(event: "end") : boolean</text><ellipse cx="772" cy="839.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="781" y="843.4668">emit(event: "error", err: Error) : boolean</text><ellipse cx="772" cy="852.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="781" y="856.4219">emit(event: "pause") : boolean</text><ellipse cx="772" cy="865.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="781" y="869.377">emit(event: "readable") : boolean</text><ellipse cx="772" cy="878.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="781" y="882.332">emit(event: "resume") : boolean</text><ellipse cx="772" cy="891.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="781" y="895.2871">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="772" cy="904.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="781" y="908.2422">eventNames() : (string | symbol)[]</text><ellipse cx="772" cy="917.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="478" x="781" y="921.1973">from(iterable: Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;, options: ReadableOptions) : Readable</text><ellipse cx="772" cy="930.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="781" y="934.1523">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="772" cy="943.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="781" y="947.1074">getMaxListeners() : number</text><ellipse cx="772" cy="956.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="781" y="960.0625">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="772" cy="969.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="781" y="973.0176">isPaused() : boolean</text><ellipse cx="772" cy="982.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="781" y="985.9727">listenerCount(eventName: string | symbol) : number</text><ellipse cx="772" cy="995.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="781" y="998.9277">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="772" cy="1008.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="781" y="1011.8828">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="772" cy="1021.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="781" y="1024.8379">off(eventName: string | symbol, listener: Function) : Readable</text><ellipse cx="772" cy="1034.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="781" y="1037.793">on(event: "close", listener: Function) : Readable</text><ellipse cx="772" cy="1047.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="781" y="1050.748">on(event: "data", listener: Function) : Readable</text><ellipse cx="772" cy="1060.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="781" y="1063.7031">on(event: "end", listener: Function) : Readable</text><ellipse cx="772" cy="1073.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="781" y="1076.6582">on(event: "error", listener: Function) : Readable</text><ellipse cx="772" cy="1085.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="781" y="1089.6133">on(event: "pause", listener: Function) : Readable</text><ellipse cx="772" cy="1098.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="781" y="1102.5684">on(event: "readable", listener: Function) : Readable</text><ellipse cx="772" cy="1111.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="781" y="1115.5234">on(event: "resume", listener: Function) : Readable</text><ellipse cx="772" cy="1124.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="781" y="1128.4785">on(event: string | symbol, listener: Function) : Readable</text><ellipse cx="772" cy="1137.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="781" y="1141.4336">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="772" cy="1150.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="781" y="1154.3887">once(event: "close", listener: Function) : Readable</text><ellipse cx="772" cy="1163.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="781" y="1167.3438">once(event: "data", listener: Function) : Readable</text><ellipse cx="772" cy="1176.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="781" y="1180.2988">once(event: "end", listener: Function) : Readable</text><ellipse cx="772" cy="1189.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="781" y="1193.2539">once(event: "error", listener: Function) : Readable</text><ellipse cx="772" cy="1202.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="781" y="1206.209">once(event: "pause", listener: Function) : Readable</text><ellipse cx="772" cy="1215.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="781" y="1219.1641">once(event: "readable", listener: Function) : Readable</text><ellipse cx="772" cy="1228.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="781" y="1232.1191">once(event: "resume", listener: Function) : Readable</text><ellipse cx="772" cy="1241.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="781" y="1245.0742">once(event: string | symbol, listener: Function) : Readable</text><ellipse cx="772" cy="1254.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="781" y="1258.0293">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="772" cy="1267.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="781" y="1270.9844">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="772" cy="1280.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="781" y="1283.9395">pause() : Readable</text><ellipse cx="772" cy="1293.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="781" y="1296.8945">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="772" cy="1306.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="781" y="1309.8496">prependListener(event: "close", listener: Function) : Readable</text><ellipse cx="772" cy="1319.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="781" y="1322.8047">prependListener(event: "data", listener: Function) : Readable</text><ellipse cx="772" cy="1332.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="781" y="1335.7598">prependListener(event: "end", listener: Function) : Readable</text><ellipse cx="772" cy="1345.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="781" y="1348.7148">prependListener(event: "error", listener: Function) : Readable</text><ellipse cx="772" cy="1358.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="781" y="1361.6699">prependListener(event: "pause", listener: Function) : Readable</text><ellipse cx="772" cy="1370.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="781" y="1374.625">prependListener(event: "readable", listener: Function) : Readable</text><ellipse cx="772" cy="1383.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="781" y="1387.5801">prependListener(event: "resume", listener: Function) : Readable</text><ellipse cx="772" cy="1396.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="781" y="1400.5352">prependListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="772" cy="1409.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="781" y="1413.4902">prependOnceListener(event: "close", listener: Function) : Readable</text><ellipse cx="772" cy="1422.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="781" y="1426.4453">prependOnceListener(event: "data", listener: Function) : Readable</text><ellipse cx="772" cy="1435.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="781" y="1439.4004">prependOnceListener(event: "end", listener: Function) : Readable</text><ellipse cx="772" cy="1448.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="781" y="1452.3555">prependOnceListener(event: "error", listener: Function) : Readable</text><ellipse cx="772" cy="1461.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="781" y="1465.3105">prependOnceListener(event: "pause", listener: Function) : Readable</text><ellipse cx="772" cy="1474.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="781" y="1478.2656">prependOnceListener(event: "readable", listener: Function) : Readable</text><ellipse cx="772" cy="1487.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="781" y="1491.2207">prependOnceListener(event: "resume", listener: Function) : Readable</text><ellipse cx="772" cy="1500.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="781" y="1504.1758">prependOnceListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="772" cy="1513.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="781" y="1517.1309">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="772" cy="1526.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="781" y="1530.0859">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="772" cy="1539.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="781" y="1543.041">read(size: number) : any</text><ellipse cx="772" cy="1552.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="781" y="1555.9961">removeAllListeners(event: string | symbol) : Readable</text><ellipse cx="772" cy="1565.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="781" y="1568.9512">removeListener(event: "close", listener: Function) : Readable</text><ellipse cx="772" cy="1578.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="781" y="1581.9063">removeListener(event: "data", listener: Function) : Readable</text><ellipse cx="772" cy="1591.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="781" y="1594.8613">removeListener(event: "end", listener: Function) : Readable</text><ellipse cx="772" cy="1604.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="781" y="1607.8164">removeListener(event: "error", listener: Function) : Readable</text><ellipse cx="772" cy="1617.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="781" y="1620.7715">removeListener(event: "pause", listener: Function) : Readable</text><ellipse cx="772" cy="1630.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="781" y="1633.7266">removeListener(event: "readable", listener: Function) : Readable</text><ellipse cx="772" cy="1643.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="781" y="1646.6816">removeListener(event: "resume", listener: Function) : Readable</text><ellipse cx="772" cy="1656.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="781" y="1659.6367">removeListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="772" cy="1668.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="781" y="1672.5918">resume() : Readable</text><ellipse cx="772" cy="1681.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="781" y="1685.5469">setEncoding(encoding: BufferEncoding) : Readable</text><ellipse cx="772" cy="1694.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="781" y="1698.502">setMaxListeners(n: number) : Readable</text><ellipse cx="772" cy="1707.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="781" y="1711.457">unpipe(destination: WritableStream) : Readable</text><ellipse cx="772" cy="1720.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="781" y="1724.4121">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="772" cy="1733.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="781" y="1737.3672">wrap(stream: ReadableStream) : Readable</text><ellipse cx="772" cy="1746.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="781" y="1750.3223">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="772" cy="1759.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="781" y="1763.2773">_construct(callback: Function) : void</text><ellipse cx="772" cy="1772.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="781" y="1776.2324">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="772" cy="1785.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="781" y="1789.1875">_read(size: number) : void</text><!--MD5=[d71ee11ede0e83c966e8ef97d9465fe6]
class Stream--><rect codeLine="106" fill="#FEFECE" filter="url(#f1n1n93ejt9oeg)" height="371.877" id="Stream" style="stroke:#A80036;stroke-width:1.5;" width="637" x="462" y="13.5"/><ellipse cx="756.25" cy="29.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M758.7231,35.6431 Q758.1421,35.9419 757.5029,36.0913 Q756.8638,36.2407 756.1582,36.2407 Q753.6514,36.2407 752.3315,34.5889 Q751.0117,32.937 751.0117,29.8159 Q751.0117,26.6865 752.3315,25.0347 Q753.6514,23.3828 756.1582,23.3828 Q756.8638,23.3828 757.5112,23.5322 Q758.1587,23.6816 758.7231,23.9805 L758.7231,26.7031 Q758.0923,26.1221 757.4988,25.8523 Q756.9053,25.5825 756.2744,25.5825 Q754.9297,25.5825 754.2449,26.6492 Q753.5601,27.7158 753.5601,29.8159 Q753.5601,31.9077 754.2449,32.9744 Q754.9297,34.041 756.2744,34.041 Q756.9053,34.041 757.4988,33.7712 Q758.0923,33.5015 758.7231,32.9204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="40" x="776.75" y="34.0352">Stream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="463" x2="1098" y1="45.5" y2="45.5"/><ellipse cx="473" cy="56.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="482" y="60.1348">captureRejections : boolean</text><ellipse cx="473" cy="69.4551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="482" y="73.0898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="473" cy="82.4102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="482" y="86.0449">defaultMaxListeners : number</text><ellipse cx="473" cy="95.3652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="482" y="99">errorMonitor : typeof errorMonitor</text><line style="stroke:#A80036;stroke-width:1.5;" x1="463" x2="1098" y1="105.3203" y2="105.3203"/><ellipse cx="473" cy="116.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="482" y="119.9551">addListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="473" cy="129.2754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="482" y="132.9102">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="473" cy="142.2305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="482" y="145.8652">eventNames() : (string | symbol)[]</text><ellipse cx="473" cy="155.1855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="482" y="158.8203">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="473" cy="168.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="482" y="171.7754">getMaxListeners() : number</text><ellipse cx="473" cy="181.0957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="482" y="184.7305">listenerCount(eventName: string | symbol) : number</text><ellipse cx="473" cy="194.0508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="482" y="197.6855">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="473" cy="207.0059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="482" y="210.6406">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="473" cy="219.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="314" x="482" y="223.5957">off(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="473" cy="232.916" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="482" y="236.5508">on(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="473" cy="245.8711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="482" y="249.5059">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="473" cy="258.8262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="482" y="262.4609">once(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="473" cy="271.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="482" y="275.416">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="473" cy="284.7363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="482" y="288.3711">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="473" cy="297.6914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="482" y="301.3262">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="473" cy="310.6465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="387" x="482" y="314.2813">prependListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="473" cy="323.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="482" y="327.2363">prependOnceListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="473" cy="336.5566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="482" y="340.1914">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="473" cy="349.5117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="482" y="353.1465">removeAllListeners(event: string | symbol) : Stream</text><ellipse cx="473" cy="362.4668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="382" x="482" y="366.1016">removeListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="473" cy="375.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="482" y="379.0566">setMaxListeners(n: number) : Stream</text><!--MD5=[2ae9bde532a65868123a40364e87803a]
class ReadableStream--><rect codeLine="134" fill="#FEFECE" filter="url(#f1n1n93ejt9oeg)" height="384.832" id="ReadableStream" style="stroke:#A80036;stroke-width:1.5;" width="489" x="1134" y="7"/><ellipse cx="1326.75" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1323.1777,19.2651 L1323.1777,17.1069 L1330.5571,17.1069 L1330.5571,19.2651 L1328.0918,19.2651 L1328.0918,27.3418 L1330.5571,27.3418 L1330.5571,29.5 L1323.1777,29.5 L1323.1777,27.3418 L1325.6431,27.3418 L1325.6431,19.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="95" x="1347.25" y="27.5352">ReadableStream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1135" x2="1622" y1="39" y2="39"/><ellipse cx="1145" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="1154" y="53.6348">readable : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1135" x2="1622" y1="59.9551" y2="59.9551"/><ellipse cx="1145" cy="70.9551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="410" x="1154" y="74.5898">addListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="1145" cy="83.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="1154" y="87.5449">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="1145" cy="96.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="1154" y="100.5">eventNames() : (string | symbol)[]</text><ellipse cx="1145" cy="109.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="1154" y="113.4551">getMaxListeners() : number</text><ellipse cx="1145" cy="122.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="1154" y="126.4102">isPaused() : boolean</text><ellipse cx="1145" cy="135.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="1154" y="139.3652">listenerCount(eventName: string | symbol) : number</text><ellipse cx="1145" cy="148.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="1154" y="152.3203">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="1145" cy="161.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="1154" y="165.2754">off(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="1145" cy="174.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="1154" y="178.2305">on(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="1145" cy="187.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="1154" y="191.1855">once(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="1145" cy="200.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="1154" y="204.1406">pause() : ReadableStream</text><ellipse cx="1145" cy="213.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="1154" y="217.0957">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="1145" cy="226.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="435" x="1154" y="230.0508">prependListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="1145" cy="239.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="463" x="1154" y="243.0059">prependOnceListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="1145" cy="252.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="1154" y="255.9609">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="1145" cy="265.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="1154" y="268.916">read(size: number) : string | Buffer</text><ellipse cx="1145" cy="278.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="1154" y="281.8711">removeAllListeners(event: string | symbol) : ReadableStream</text><ellipse cx="1145" cy="291.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="430" x="1154" y="294.8262">removeListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="1145" cy="304.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="1154" y="307.7813">resume() : ReadableStream</text><ellipse cx="1145" cy="317.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="1154" y="320.7363">setEncoding(encoding: BufferEncoding) : ReadableStream</text><ellipse cx="1145" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="1154" y="333.6914">setMaxListeners(n: number) : ReadableStream</text><ellipse cx="1145" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="1154" y="346.6465">unpipe(destination: WritableStream) : ReadableStream</text><ellipse cx="1145" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="1154" y="359.6016">unshift(chunk: string | Uint8Array, encoding: BufferEncoding) : void</text><ellipse cx="1145" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="1154" y="372.5566">wrap(oldStream: ReadableStream) : ReadableStream</text><ellipse cx="1145" cy="381.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="1154" y="385.5117">[asyncIterator]() : AsyncIterableIterator&lt;string | Buffer&gt;</text><!--MD5=[c976e0eb2d2b974c6a969bae55fd2ccf]
class IncomingMessage--><rect codeLine="163" fill="#FEFECE" filter="url(#f1n1n93ejt9oeg)" height="1550.7891" id="IncomingMessage" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="2646"/><ellipse cx="270.75" cy="2662" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M273.2231,2668.1431 Q272.6421,2668.4419 272.0029,2668.5913 Q271.3638,2668.7407 270.6582,2668.7407 Q268.1514,2668.7407 266.8315,2667.0889 Q265.5117,2665.437 265.5117,2662.3159 Q265.5117,2659.1865 266.8315,2657.5347 Q268.1514,2655.8828 270.6582,2655.8828 Q271.3638,2655.8828 272.0112,2656.0322 Q272.6587,2656.1816 273.2231,2656.4805 L273.2231,2659.2031 Q272.5923,2658.6221 271.9988,2658.3523 Q271.4053,2658.0825 270.7744,2658.0825 Q269.4297,2658.0825 268.7449,2659.1492 Q268.0601,2660.2158 268.0601,2662.3159 Q268.0601,2664.4077 268.7449,2665.4744 Q269.4297,2666.541 270.7744,2666.541 Q271.4053,2666.541 271.9988,2666.2712 Q272.5923,2666.0015 273.2231,2665.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="101" x="291.25" y="2666.5352">IncomingMessage</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="2678" y2="2678"/><ellipse cx="18" cy="2689" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="2692.6348">aborted : boolean</text><ellipse cx="18" cy="2701.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="2705.5898">captureRejections : boolean</text><ellipse cx="18" cy="2714.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="2718.5449">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="2727.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="27" y="2731.5">complete : boolean</text><ellipse cx="18" cy="2740.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="27" y="2744.4551">connection : Socket</text><ellipse cx="18" cy="2753.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="2757.4102">defaultMaxListeners : number</text><ellipse cx="18" cy="2766.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="2770.3652">destroyed : boolean</text><ellipse cx="18" cy="2779.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="2783.3203">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="2792.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="2796.2754">headers : IncomingHttpHeaders</text><ellipse cx="18" cy="2805.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="27" y="2809.2305">httpVersion : string</text><ellipse cx="18" cy="2818.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="144" x="27" y="2822.1855">httpVersionMajor : number</text><ellipse cx="18" cy="2831.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="145" x="27" y="2835.1406">httpVersionMinor : number</text><ellipse cx="18" cy="2844.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="27" y="2848.0957">method : string</text><ellipse cx="18" cy="2857.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="27" y="2861.0508">rawHeaders : string[]</text><ellipse cx="18" cy="2870.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="27" y="2874.0059">rawTrailers : string[]</text><ellipse cx="18" cy="2883.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="2886.9609">readable : boolean</text><ellipse cx="18" cy="2896.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="2899.916">readableAborted : boolean</text><ellipse cx="18" cy="2909.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="2912.8711">readableDidRead : boolean</text><ellipse cx="18" cy="2922.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="27" y="2925.8262">readableEncoding : null | BufferEncoding</text><ellipse cx="18" cy="2935.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="27" y="2938.7813">readableEnded : boolean</text><ellipse cx="18" cy="2948.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="2951.7363">readableFlowing : null | boolean</text><ellipse cx="18" cy="2961.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="27" y="2964.6914">readableHighWaterMark : number</text><ellipse cx="18" cy="2974.0117" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="2977.6465">readableLength : number</text><ellipse cx="18" cy="2986.9668" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="27" y="2990.6016">readableObjectMode : boolean</text><ellipse cx="18" cy="2999.9219" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="27" y="3003.5566">socket : Socket</text><ellipse cx="18" cy="3012.877" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="27" y="3016.5117">statusCode : number</text><ellipse cx="18" cy="3025.832" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="27" y="3029.4668">statusMessage : string</text><ellipse cx="18" cy="3038.7871" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="27" y="3042.4219">trailers : Dict&lt;string&gt;</text><ellipse cx="18" cy="3051.7422" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="56" x="27" y="3055.377">url : string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="3061.6973" y2="3061.6973"/><ellipse cx="18" cy="3072.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="3076.332">addListener(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3085.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="27" y="3089.2871">addListener(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3098.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="27" y="3102.2422">addListener(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3111.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="3115.1973">addListener(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3124.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="350" x="27" y="3128.1523">addListener(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3137.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="364" x="27" y="3141.1074">addListener(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3150.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="27" y="3154.0625">addListener(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3163.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="27" y="3167.0176">addListener(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3176.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="27" y="3179.9727">destroy(error: Error) : void</text><ellipse cx="18" cy="3189.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="3192.9277">emit(event: "close") : boolean</text><ellipse cx="18" cy="3202.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="27" y="3205.8828">emit(event: "data", chunk: any) : boolean</text><ellipse cx="18" cy="3215.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="3218.8379">emit(event: "end") : boolean</text><ellipse cx="18" cy="3228.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="3231.793">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="3241.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="3244.748">emit(event: "pause") : boolean</text><ellipse cx="18" cy="3254.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="27" y="3257.7031">emit(event: "readable") : boolean</text><ellipse cx="18" cy="3267.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="27" y="3270.6582">emit(event: "resume") : boolean</text><ellipse cx="18" cy="3279.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="3283.6133">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="3292.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="3296.5684">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="3305.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="478" x="27" y="3309.5234">from(iterable: Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;, options: ReadableOptions) : Readable</text><ellipse cx="18" cy="3318.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="3322.4785">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="3331.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="3335.4336">getMaxListeners() : number</text><ellipse cx="18" cy="3344.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="27" y="3348.3887">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="18" cy="3357.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="3361.3438">isPaused() : boolean</text><ellipse cx="18" cy="3370.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="3374.2988">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="3383.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="3387.2539">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="3396.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="3400.209">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="3409.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="27" y="3413.1641">off(eventName: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3422.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="27" y="3426.1191">on(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3435.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="3439.0742">on(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3448.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="3452.0293">on(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3461.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="27" y="3464.9844">on(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3474.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="27" y="3477.9395">on(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3487.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="27" y="3490.8945">on(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3500.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="27" y="3503.8496">on(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3513.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="342" x="27" y="3516.8047">on(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3526.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="3529.7598">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="3539.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="27" y="3542.7148">once(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3552.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="304" x="27" y="3555.6699">once(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3564.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="27" y="3568.625">once(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3577.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="27" y="3581.5801">once(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3590.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="3594.5352">once(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3603.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="27" y="3607.4902">once(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3616.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="27" y="3620.4453">once(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3629.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="354" x="27" y="3633.4004">once(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3642.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="3646.3555">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="3655.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="3659.3105">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="3668.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="145" x="27" y="3672.2656">pause() : IncomingMessage</text><ellipse cx="18" cy="3681.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="3685.2207">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="3694.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="371" x="27" y="3698.1758">prependListener(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3707.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="3711.1309">prependListener(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3720.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="27" y="3724.0859">prependListener(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3733.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="371" x="27" y="3737.041">prependListener(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3746.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="375" x="27" y="3749.9961">prependListener(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3759.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="389" x="27" y="3762.9512">prependListener(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3772.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="383" x="27" y="3775.9063">prependListener(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3785.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="416" x="27" y="3788.8613">prependListener(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3798.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="399" x="27" y="3801.8164">prependOnceListener(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3811.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="394" x="27" y="3814.7715">prependOnceListener(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3824.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="27" y="3827.7266">prependOnceListener(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3837.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="399" x="27" y="3840.6816">prependOnceListener(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3850.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="403" x="27" y="3853.6367">prependOnceListener(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3862.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="27" y="3866.5918">prependOnceListener(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3875.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="411" x="27" y="3879.5469">prependOnceListener(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3888.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="444" x="27" y="3892.502">prependOnceListener(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3901.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="3905.457">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="18" cy="3914.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="3918.4121">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="3927.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="3931.3672">read(size: number) : any</text><ellipse cx="18" cy="3940.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="332" x="27" y="3944.3223">removeAllListeners(event: string | symbol) : IncomingMessage</text><ellipse cx="18" cy="3953.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="3957.2773">removeListener(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3966.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="27" y="3970.2324">removeListener(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3979.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="27" y="3983.1875">removeListener(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3992.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="3996.1426">removeListener(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="4005.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="370" x="27" y="4009.0977">removeListener(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="4018.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="384" x="27" y="4022.0527">removeListener(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="4031.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="378" x="27" y="4035.0078">removeListener(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="4044.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="411" x="27" y="4047.9629">removeListener(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="4057.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="27" y="4060.918">resume() : IncomingMessage</text><ellipse cx="18" cy="4070.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="27" y="4073.873">setEncoding(encoding: BufferEncoding) : IncomingMessage</text><ellipse cx="18" cy="4083.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="27" y="4086.8281">setMaxListeners(n: number) : IncomingMessage</text><ellipse cx="18" cy="4096.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="27" y="4099.7832">setTimeout(msecs: number, callback: Function) : IncomingMessage</text><ellipse cx="18" cy="4109.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="27" y="4112.7383">unpipe(destination: WritableStream) : IncomingMessage</text><ellipse cx="18" cy="4122.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="27" y="4125.6934">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="18" cy="4135.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="27" y="4138.6484">wrap(stream: ReadableStream) : IncomingMessage</text><ellipse cx="18" cy="4147.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="4151.6035">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="4160.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="4164.5586">_construct(callback: Function) : void</text><ellipse cx="18" cy="4173.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="4177.5137">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="4186.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="4190.4688">_read(size: number) : void</text><!--MD5=[dbb0aac09fdd9457193737fcd885dcc9]
class Duplex--><rect codeLine="404" fill="#FEFECE" filter="url(#f1n1n93ejt9oeg)" height="3131.3086" id="Duplex" style="stroke:#A80036;stroke-width:1.5;" width="800" x="679.5" y="1856"/><ellipse cx="1054.75" cy="1872" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1057.2231,1878.1431 Q1056.6421,1878.4419 1056.0029,1878.5913 Q1055.3638,1878.7407 1054.6582,1878.7407 Q1052.1514,1878.7407 1050.8315,1877.0889 Q1049.5117,1875.437 1049.5117,1872.3159 Q1049.5117,1869.1865 1050.8315,1867.5347 Q1052.1514,1865.8828 1054.6582,1865.8828 Q1055.3638,1865.8828 1056.0112,1866.0322 Q1056.6587,1866.1816 1057.2231,1866.4805 L1057.2231,1869.2031 Q1056.5923,1868.6221 1055.9988,1868.3523 Q1055.4053,1868.0825 1054.7744,1868.0825 Q1053.4297,1868.0825 1052.7449,1869.1492 Q1052.0601,1870.2158 1052.0601,1872.3159 Q1052.0601,1874.4077 1052.7449,1875.4744 Q1053.4297,1876.541 1054.7744,1876.541 Q1055.4053,1876.541 1055.9988,1876.2712 Q1056.5923,1876.0015 1057.2231,1875.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="41" x="1075.25" y="1876.5352">Duplex</text><line style="stroke:#A80036;stroke-width:1.5;" x1="680.5" x2="1478.5" y1="1888" y2="1888"/><ellipse cx="690.5" cy="1899" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="699.5" y="1902.6348">allowHalfOpen : boolean</text><ellipse cx="690.5" cy="1911.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="699.5" y="1915.5898">captureRejections : boolean</text><ellipse cx="690.5" cy="1924.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="699.5" y="1928.5449">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="690.5" cy="1937.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="699.5" y="1941.5">defaultMaxListeners : number</text><ellipse cx="690.5" cy="1950.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="699.5" y="1954.4551">destroyed : boolean</text><ellipse cx="690.5" cy="1963.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="699.5" y="1967.4102">errorMonitor : typeof errorMonitor</text><ellipse cx="690.5" cy="1976.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="699.5" y="1980.3652">readable : boolean</text><ellipse cx="690.5" cy="1989.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699.5" y="1993.3203">readableAborted : boolean</text><ellipse cx="690.5" cy="2002.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699.5" y="2006.2754">readableDidRead : boolean</text><ellipse cx="690.5" cy="2015.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="699.5" y="2019.2305">readableEncoding : null | BufferEncoding</text><ellipse cx="690.5" cy="2028.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="699.5" y="2032.1855">readableEnded : boolean</text><ellipse cx="690.5" cy="2041.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="699.5" y="2045.1406">readableFlowing : null | boolean</text><ellipse cx="690.5" cy="2054.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="699.5" y="2058.0957">readableHighWaterMark : number</text><ellipse cx="690.5" cy="2067.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="699.5" y="2071.0508">readableLength : number</text><ellipse cx="690.5" cy="2080.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="699.5" y="2084.0059">readableObjectMode : boolean</text><ellipse cx="690.5" cy="2093.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="699.5" y="2096.9609">writable : boolean</text><ellipse cx="690.5" cy="2106.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="699.5" y="2109.916">writableCorked : number</text><ellipse cx="690.5" cy="2119.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="699.5" y="2122.8711">writableEnded : boolean</text><ellipse cx="690.5" cy="2132.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699.5" y="2135.8262">writableFinished : boolean</text><ellipse cx="690.5" cy="2145.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="699.5" y="2148.7813">writableHighWaterMark : number</text><ellipse cx="690.5" cy="2158.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="699.5" y="2161.7363">writableLength : number</text><ellipse cx="690.5" cy="2171.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="2174.6914">writableObjectMode : boolean</text><ellipse cx="690.5" cy="2184.0117" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="699.5" y="2187.6465">allowHalfOpen : boolean</text><ellipse cx="690.5" cy="2196.9668" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="699.5" y="2200.6016">captureRejections : boolean</text><ellipse cx="690.5" cy="2209.9219" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="699.5" y="2213.5566">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="690.5" cy="2222.877" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="699.5" y="2226.5117">defaultMaxListeners : number</text><ellipse cx="690.5" cy="2235.832" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="699.5" y="2239.4668">destroyed : boolean</text><ellipse cx="690.5" cy="2248.7871" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="699.5" y="2252.4219">errorMonitor : typeof errorMonitor</text><ellipse cx="690.5" cy="2261.7422" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="699.5" y="2265.377">readable : boolean</text><ellipse cx="690.5" cy="2274.6973" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699.5" y="2278.332">readableAborted : boolean</text><ellipse cx="690.5" cy="2287.6523" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699.5" y="2291.2871">readableDidRead : boolean</text><ellipse cx="690.5" cy="2300.6074" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="699.5" y="2304.2422">readableEncoding : null | BufferEncoding</text><ellipse cx="690.5" cy="2313.5625" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="699.5" y="2317.1973">readableEnded : boolean</text><ellipse cx="690.5" cy="2326.5176" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="699.5" y="2330.1523">readableFlowing : null | boolean</text><ellipse cx="690.5" cy="2339.4727" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="699.5" y="2343.1074">readableHighWaterMark : number</text><ellipse cx="690.5" cy="2352.4277" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="699.5" y="2356.0625">readableLength : number</text><ellipse cx="690.5" cy="2365.3828" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="699.5" y="2369.0176">readableObjectMode : boolean</text><ellipse cx="690.5" cy="2378.3379" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="699.5" y="2381.9727">writable : boolean</text><ellipse cx="690.5" cy="2391.293" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="699.5" y="2394.9277">writableCorked : number</text><ellipse cx="690.5" cy="2404.248" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="699.5" y="2407.8828">writableEnded : boolean</text><ellipse cx="690.5" cy="2417.2031" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699.5" y="2420.8379">writableFinished : boolean</text><ellipse cx="690.5" cy="2430.1582" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="699.5" y="2433.793">writableHighWaterMark : number</text><ellipse cx="690.5" cy="2443.1133" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="699.5" y="2446.748">writableLength : number</text><ellipse cx="690.5" cy="2456.0684" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="2459.7031">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="680.5" x2="1478.5" y1="2466.0234" y2="2466.0234"/><ellipse cx="690.5" cy="2477.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699.5" y="2480.6582">addListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2489.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="699.5" y="2493.6133">addListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2502.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="699.5" y="2506.5684">addListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2515.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699.5" y="2519.5234">addListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2528.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="699.5" y="2532.4785">addListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2541.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="699.5" y="2545.4336">addListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2554.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="699.5" y="2558.3887">addListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2567.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="699.5" y="2571.3438">addListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="2580.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="699.5" y="2584.2988">cork() : void</text><ellipse cx="690.5" cy="2593.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="699.5" y="2597.2539">destroy(error: Error) : void</text><ellipse cx="690.5" cy="2606.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="699.5" y="2610.209">emit(event: "close") : boolean</text><ellipse cx="690.5" cy="2619.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="699.5" y="2623.1641">emit(event: "data", chunk: any) : boolean</text><ellipse cx="690.5" cy="2632.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="699.5" y="2636.1191">emit(event: "end") : boolean</text><ellipse cx="690.5" cy="2645.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="699.5" y="2649.0742">emit(event: "error", err: Error) : boolean</text><ellipse cx="690.5" cy="2658.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="2662.0293">emit(event: "pause") : boolean</text><ellipse cx="690.5" cy="2671.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="699.5" y="2674.9844">emit(event: "readable") : boolean</text><ellipse cx="690.5" cy="2684.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="699.5" y="2687.9395">emit(event: "resume") : boolean</text><ellipse cx="690.5" cy="2697.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="699.5" y="2700.8945">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="690.5" cy="2710.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="699.5" y="2713.8496">end(cb: Function) : void</text><ellipse cx="690.5" cy="2723.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="699.5" y="2726.8047">end(chunk: any, cb: Function) : void</text><ellipse cx="690.5" cy="2736.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="699.5" y="2739.7598">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="690.5" cy="2749.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="699.5" y="2752.7148">eventNames() : (string | symbol)[]</text><ellipse cx="690.5" cy="2762.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="699.5" y="2765.6699">from(src: string | Object | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt; | Promise&lt;any&gt; | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex</text><ellipse cx="690.5" cy="2774.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="699.5" y="2778.625">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="690.5" cy="2787.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="699.5" y="2791.5801">getMaxListeners() : number</text><ellipse cx="690.5" cy="2800.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="699.5" y="2804.5352">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="690.5" cy="2813.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="699.5" y="2817.4902">isPaused() : boolean</text><ellipse cx="690.5" cy="2826.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="699.5" y="2830.4453">listenerCount(eventName: string | symbol) : number</text><ellipse cx="690.5" cy="2839.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="699.5" y="2843.4004">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="690.5" cy="2852.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="699.5" y="2856.3555">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="2865.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="699.5" y="2869.3105">off(eventName: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="2878.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="2882.2656">on(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2891.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="699.5" y="2895.2207">on(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2904.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="699.5" y="2908.1758">on(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2917.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="2921.1309">on(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2930.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="699.5" y="2934.0859">on(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2943.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="699.5" y="2947.041">on(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2956.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="2959.9961">on(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2969.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="699.5" y="2972.9512">on(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="2982.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="699.5" y="2985.9063">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690.5" cy="2995.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="2998.8613">once(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3008.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699.5" y="3011.8164">once(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3021.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="699.5" y="3024.7715">once(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3034.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="3037.7266">once(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3047.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="699.5" y="3050.6816">once(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3060.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="699.5" y="3063.6367">once(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3072.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="699.5" y="3076.5918">once(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3085.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="699.5" y="3089.5469">once(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3098.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="699.5" y="3102.502">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690.5" cy="3111.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="699.5" y="3115.457">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690.5" cy="3124.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="699.5" y="3128.4121">pause() : Duplex</text><ellipse cx="690.5" cy="3137.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="699.5" y="3141.3672">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="690.5" cy="3150.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699.5" y="3154.3223">prependListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3163.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="3167.2773">prependListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3176.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="699.5" y="3180.2324">prependListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3189.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699.5" y="3193.1875">prependListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3202.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="699.5" y="3206.1426">prependListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3215.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="699.5" y="3219.0977">prependListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3228.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="699.5" y="3232.0527">prependListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3241.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="699.5" y="3245.0078">prependListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3254.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699.5" y="3257.9629">prependOnceListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3267.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="699.5" y="3270.918">prependOnceListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3280.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="699.5" y="3283.873">prependOnceListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3293.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699.5" y="3296.8281">prependOnceListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3306.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="699.5" y="3309.7832">prependOnceListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3319.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="699.5" y="3322.7383">prependOnceListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3332.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="699.5" y="3335.6934">prependOnceListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3345.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="699.5" y="3348.6484">prependOnceListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3357.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="699.5" y="3361.6035">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="690.5" cy="3370.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="699.5" y="3374.5586">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="3383.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="699.5" y="3387.5137">read(size: number) : any</text><ellipse cx="690.5" cy="3396.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="699.5" y="3400.4688">removeAllListeners(event: string | symbol) : Duplex</text><ellipse cx="690.5" cy="3409.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="3413.4238">removeListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3422.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="699.5" y="3426.3789">removeListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3435.6992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="699.5" y="3439.334">removeListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3448.6543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="3452.2891">removeListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3461.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="699.5" y="3465.2441">removeListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3474.5645" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="699.5" y="3478.1992">removeListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3487.5195" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="699.5" y="3491.1543">removeListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3500.4746" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="699.5" y="3504.1094">removeListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3513.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="699.5" y="3517.0645">resume() : Duplex</text><ellipse cx="690.5" cy="3526.3848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="699.5" y="3530.0195">setDefaultEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="690.5" cy="3539.3398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="699.5" y="3542.9746">setEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="690.5" cy="3552.2949" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="699.5" y="3555.9297">setMaxListeners(n: number) : Duplex</text><ellipse cx="690.5" cy="3565.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="699.5" y="3568.8848">uncork() : void</text><ellipse cx="690.5" cy="3578.2051" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="699.5" y="3581.8398">unpipe(destination: WritableStream) : Duplex</text><ellipse cx="690.5" cy="3591.1602" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="699.5" y="3594.7949">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="690.5" cy="3604.1152" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="699.5" y="3607.75">wrap(stream: ReadableStream) : Duplex</text><ellipse cx="690.5" cy="3617.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="699.5" y="3620.7051">write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="690.5" cy="3630.0254" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="699.5" y="3633.6602">write(chunk: any, cb: Function) : boolean</text><ellipse cx="690.5" cy="3642.9805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699.5" y="3646.6152">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690.5" cy="3655.9355" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="699.5" y="3659.5703">_construct(callback: Function) : void</text><ellipse cx="690.5" cy="3668.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="699.5" y="3672.5254">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="690.5" cy="3681.8457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="699.5" y="3685.4805">_final(callback: Function) : void</text><ellipse cx="690.5" cy="3694.8008" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699.5" y="3698.4355">_read(size: number) : void</text><ellipse cx="690.5" cy="3707.7559" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="699.5" y="3711.3906">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="690.5" cy="3720.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="699.5" y="3724.3457">_writev(chunks: Object[], callback: Function) : void</text><ellipse cx="690.5" cy="3733.666" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699.5" y="3737.3008">addListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3746.6211" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="699.5" y="3750.2559">addListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3759.5762" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="699.5" y="3763.2109">addListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3772.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699.5" y="3776.166">addListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3785.4863" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="699.5" y="3789.1211">addListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3798.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="699.5" y="3802.0762">addListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3811.3965" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="699.5" y="3815.0313">addListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3824.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="699.5" y="3827.9863">addListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3837.3066" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="699.5" y="3840.9414">cork() : void</text><ellipse cx="690.5" cy="3850.2617" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="699.5" y="3853.8965">destroy(error: Error) : void</text><ellipse cx="690.5" cy="3863.2168" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="699.5" y="3866.8516">emit(event: "close") : boolean</text><ellipse cx="690.5" cy="3876.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="699.5" y="3879.8066">emit(event: "data", chunk: any) : boolean</text><ellipse cx="690.5" cy="3889.127" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="699.5" y="3892.7617">emit(event: "end") : boolean</text><ellipse cx="690.5" cy="3902.082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="699.5" y="3905.7168">emit(event: "error", err: Error) : boolean</text><ellipse cx="690.5" cy="3915.0371" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="3918.6719">emit(event: "pause") : boolean</text><ellipse cx="690.5" cy="3927.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="699.5" y="3931.627">emit(event: "readable") : boolean</text><ellipse cx="690.5" cy="3940.9473" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="699.5" y="3944.582">emit(event: "resume") : boolean</text><ellipse cx="690.5" cy="3953.9023" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="699.5" y="3957.5371">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="690.5" cy="3966.8574" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="699.5" y="3970.4922">end(cb: Function) : void</text><ellipse cx="690.5" cy="3979.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="699.5" y="3983.4473">end(chunk: any, cb: Function) : void</text><ellipse cx="690.5" cy="3992.7676" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="699.5" y="3996.4023">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="690.5" cy="4005.7227" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="699.5" y="4009.3574">eventNames() : (string | symbol)[]</text><ellipse cx="690.5" cy="4018.6777" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="699.5" y="4022.3125">from(src: string | Object | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt; | Promise&lt;any&gt; | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex</text><ellipse cx="690.5" cy="4031.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="699.5" y="4035.2676">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="690.5" cy="4044.5879" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="699.5" y="4048.2227">getMaxListeners() : number</text><ellipse cx="690.5" cy="4057.543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="699.5" y="4061.1777">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="690.5" cy="4070.498" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="699.5" y="4074.1328">isPaused() : boolean</text><ellipse cx="690.5" cy="4083.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="699.5" y="4087.0879">listenerCount(eventName: string | symbol) : number</text><ellipse cx="690.5" cy="4096.4082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="699.5" y="4100.043">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="690.5" cy="4109.3633" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="699.5" y="4112.998">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="4122.3184" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="699.5" y="4125.9531">off(eventName: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4135.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="4138.9082">on(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4148.2285" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="699.5" y="4151.8633">on(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4161.1836" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="699.5" y="4164.8184">on(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4174.1387" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="4177.7734">on(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4187.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="699.5" y="4190.7285">on(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4200.0488" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="699.5" y="4203.6836">on(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4213.0039" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="4216.6387">on(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4225.959" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="699.5" y="4229.5938">on(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4238.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="699.5" y="4242.5488">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690.5" cy="4251.8691" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="4255.5039">once(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4264.8242" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699.5" y="4268.459">once(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4277.7793" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="699.5" y="4281.4141">once(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4290.7344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="4294.3691">once(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4303.6895" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="699.5" y="4307.3242">once(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4316.6445" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="699.5" y="4320.2793">once(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4329.5996" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="699.5" y="4333.2344">once(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4342.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="699.5" y="4346.1895">once(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4355.5098" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="699.5" y="4359.1445">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690.5" cy="4368.4648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="699.5" y="4372.0996">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690.5" cy="4381.4199" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="699.5" y="4385.0547">pause() : Duplex</text><ellipse cx="690.5" cy="4394.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="699.5" y="4398.0098">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="690.5" cy="4407.3301" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699.5" y="4410.9648">prependListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4420.2852" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="4423.9199">prependListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4433.2402" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="699.5" y="4436.875">prependListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4446.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699.5" y="4449.8301">prependListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4459.1504" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="699.5" y="4462.7852">prependListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4472.1055" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="699.5" y="4475.7402">prependListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4485.0605" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="699.5" y="4488.6953">prependListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4498.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="699.5" y="4501.6504">prependListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4510.9707" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699.5" y="4514.6055">prependOnceListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4523.9258" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="699.5" y="4527.5605">prependOnceListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4536.8809" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="699.5" y="4540.5156">prependOnceListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4549.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699.5" y="4553.4707">prependOnceListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4562.791" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="699.5" y="4566.4258">prependOnceListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4575.7461" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="699.5" y="4579.3809">prependOnceListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4588.7012" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="699.5" y="4592.3359">prependOnceListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4601.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="699.5" y="4605.291">prependOnceListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4614.6113" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="699.5" y="4618.2461">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="690.5" cy="4627.5664" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="699.5" y="4631.2012">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="4640.5215" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="699.5" y="4644.1563">read(size: number) : any</text><ellipse cx="690.5" cy="4653.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="699.5" y="4657.1113">removeAllListeners(event: string | symbol) : Duplex</text><ellipse cx="690.5" cy="4666.4316" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="4670.0664">removeListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4679.3867" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="699.5" y="4683.0215">removeListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4692.3418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="699.5" y="4695.9766">removeListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4705.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="4708.9316">removeListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4718.252" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="699.5" y="4721.8867">removeListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4731.207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="699.5" y="4734.8418">removeListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4744.1621" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="699.5" y="4747.7969">removeListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4757.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="699.5" y="4760.752">removeListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4770.0723" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="699.5" y="4773.707">resume() : Duplex</text><ellipse cx="690.5" cy="4783.0273" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="699.5" y="4786.6621">setDefaultEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="690.5" cy="4795.9824" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="699.5" y="4799.6172">setEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="690.5" cy="4808.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="699.5" y="4812.5723">setMaxListeners(n: number) : Duplex</text><ellipse cx="690.5" cy="4821.8926" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="699.5" y="4825.5273">uncork() : void</text><ellipse cx="690.5" cy="4834.8477" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="699.5" y="4838.4824">unpipe(destination: WritableStream) : Duplex</text><ellipse cx="690.5" cy="4847.8027" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="699.5" y="4851.4375">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="690.5" cy="4860.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="699.5" y="4864.3926">wrap(stream: ReadableStream) : Duplex</text><ellipse cx="690.5" cy="4873.7129" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="699.5" y="4877.3477">write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="690.5" cy="4886.668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="699.5" y="4890.3027">write(chunk: any, cb: Function) : boolean</text><ellipse cx="690.5" cy="4899.623" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699.5" y="4903.2578">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690.5" cy="4912.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="699.5" y="4916.2129">_construct(callback: Function) : void</text><ellipse cx="690.5" cy="4925.5332" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="699.5" y="4929.168">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="690.5" cy="4938.4883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="699.5" y="4942.123">_final(callback: Function) : void</text><ellipse cx="690.5" cy="4951.4434" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699.5" y="4955.0781">_read(size: number) : void</text><ellipse cx="690.5" cy="4964.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="699.5" y="4968.0332">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="690.5" cy="4977.3535" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="699.5" y="4980.9883">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[94cb1445837fb446aa5f5819d9971c55]
reverse link Stream to Readable--><path codeLine="133" d="M846.64,404.57 C851.6,419.85 856.73,435.68 862,451.96 " fill="none" id="Stream-backto-Readable" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="839.98,406.7,840.47,385.52,853.29,402.39,839.98,406.7" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[4ddf0d38953a435f3cf6ce8f62a2e10b]
reverse link ReadableStream to Readable--><path codeLine="162" d="M1310.06,411.67 C1305.84,424.69 1301.49,438.09 1297.05,451.81 " fill="none" id="ReadableStream-backto-Readable" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1303.54,409.07,1316.37,392.2,1316.86,413.39,1303.54,409.07" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[335f627f56cc5c5fdad50b5d9a1b5159]
reverse link Readable to IncomingMessage--><path codeLine="281" d="M751.7,1654.89 C718.16,1721.16 687.08,1789.17 661.5,1856 C565.81,2106.05 494.54,2389.56 442.88,2645.9 " fill="none" id="Readable-backto-IncomingMessage" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="745.65,1651.33,760.98,1636.7,758.12,1657.7,745.65,1651.33" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[53a1472f2276db14e765f88ac3fda3da]
reverse link Readable to Duplex--><path codeLine="403" d="M1067.69,1816.66 C1067.63,1829.68 1067.58,1842.79 1067.53,1855.98 " fill="none" id="Readable-backto-Duplex" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1060.69,1816.25,1067.78,1796.28,1074.69,1816.31,1060.69,1816.25" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[53a1472f2276db14e765f88ac3fda3da]
reverse link Readable to Duplex--><path codeLine="525" d="M1092,1816.66 C1092.06,1829.68 1092.12,1842.79 1092.18,1855.98 " fill="none" id="Readable-backto-Duplex-1" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1085,1816.32,1091.91,1796.28,1099,1816.25,1085,1816.32" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[f8039b47305171f29fa77c7ce67e3683]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "Readable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Readable
    +addListener(event: "data", listener: Function) : Readable
    +addListener(event: "end", listener: Function) : Readable
    +addListener(event: "error", listener: Function) : Readable
    +addListener(event: "pause", listener: Function) : Readable
    +addListener(event: "readable", listener: Function) : Readable
    +addListener(event: "resume", listener: Function) : Readable
    +addListener(event: string | symbol, listener: Function) : Readable
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +from(iterable: Iterable<any> | AsyncIterable<any>, options: ReadableOptions) : Readable
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Readable
    +on(event: "close", listener: Function) : Readable
    +on(event: "data", listener: Function) : Readable
    +on(event: "end", listener: Function) : Readable
    +on(event: "error", listener: Function) : Readable
    +on(event: "pause", listener: Function) : Readable
    +on(event: "readable", listener: Function) : Readable
    +on(event: "resume", listener: Function) : Readable
    +on(event: string | symbol, listener: Function) : Readable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Readable
    +once(event: "data", listener: Function) : Readable
    +once(event: "end", listener: Function) : Readable
    +once(event: "error", listener: Function) : Readable
    +once(event: "pause", listener: Function) : Readable
    +once(event: "readable", listener: Function) : Readable
    +once(event: "resume", listener: Function) : Readable
    +once(event: string | symbol, listener: Function) : Readable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Readable
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Readable
    +prependListener(event: "data", listener: Function) : Readable
    +prependListener(event: "end", listener: Function) : Readable
    +prependListener(event: "error", listener: Function) : Readable
    +prependListener(event: "pause", listener: Function) : Readable
    +prependListener(event: "readable", listener: Function) : Readable
    +prependListener(event: "resume", listener: Function) : Readable
    +prependListener(event: string | symbol, listener: Function) : Readable
    +prependOnceListener(event: "close", listener: Function) : Readable
    +prependOnceListener(event: "data", listener: Function) : Readable
    +prependOnceListener(event: "end", listener: Function) : Readable
    +prependOnceListener(event: "error", listener: Function) : Readable
    +prependOnceListener(event: "pause", listener: Function) : Readable
    +prependOnceListener(event: "readable", listener: Function) : Readable
    +prependOnceListener(event: "resume", listener: Function) : Readable
    +prependOnceListener(event: string | symbol, listener: Function) : Readable
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Readable
    +removeListener(event: "close", listener: Function) : Readable
    +removeListener(event: "data", listener: Function) : Readable
    +removeListener(event: "end", listener: Function) : Readable
    +removeListener(event: "error", listener: Function) : Readable
    +removeListener(event: "pause", listener: Function) : Readable
    +removeListener(event: "readable", listener: Function) : Readable
    +removeListener(event: "resume", listener: Function) : Readable
    +removeListener(event: string | symbol, listener: Function) : Readable
    +resume() : Readable
    +setEncoding(encoding: BufferEncoding) : Readable
    +setMaxListeners(n: number) : Readable
    +unpipe(destination: WritableStream) : Readable
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Readable
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_read(size: number) : void
}
class "Stream" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +addListener(eventName: string | symbol, listener: Function) : Stream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Stream
    +on(eventName: string | symbol, listener: Function) : Stream
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(eventName: string | symbol, listener: Function) : Stream
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : Stream
    +prependOnceListener(eventName: string | symbol, listener: Function) : Stream
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Stream
    +removeListener(eventName: string | symbol, listener: Function) : Stream
    +setMaxListeners(n: number) : Stream
}
"Stream" <|- - "Readable"
interface "ReadableStream" {
    +readable : boolean
    +addListener(eventName: string | symbol, listener: Function) : ReadableStream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    +getMaxListeners() : number
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : ReadableStream
    +on(eventName: string | symbol, listener: Function) : ReadableStream
    +once(eventName: string | symbol, listener: Function) : ReadableStream
    +pause() : ReadableStream
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : ReadableStream
    +prependOnceListener(eventName: string | symbol, listener: Function) : ReadableStream
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : string | Buffer
    +removeAllListeners(event: string | symbol) : ReadableStream
    +removeListener(eventName: string | symbol, listener: Function) : ReadableStream
    +resume() : ReadableStream
    +setEncoding(encoding: BufferEncoding) : ReadableStream
    +setMaxListeners(n: number) : ReadableStream
    +unpipe(destination: WritableStream) : ReadableStream
    +unshift(chunk: string | Uint8Array, encoding: BufferEncoding) : void
    +wrap(oldStream: ReadableStream) : ReadableStream
    +[asyncIterator]() : AsyncIterableIterator<string | Buffer>
}
"ReadableStream" <|.. "Readable"
class "IncomingMessage" {
    +aborted : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    +complete : boolean
    +connection : Socket
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +headers : IncomingHttpHeaders
    +httpVersion : string
    +httpVersionMajor : number
    +httpVersionMinor : number
    +method : string
    +rawHeaders : string[]
    +rawTrailers : string[]
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +socket : Socket
    +statusCode : number
    +statusMessage : string
    +trailers : Dict<string>
    +url : string
    +addListener(event: "close", listener: Function) : IncomingMessage
    +addListener(event: "data", listener: Function) : IncomingMessage
    +addListener(event: "end", listener: Function) : IncomingMessage
    +addListener(event: "error", listener: Function) : IncomingMessage
    +addListener(event: "pause", listener: Function) : IncomingMessage
    +addListener(event: "readable", listener: Function) : IncomingMessage
    +addListener(event: "resume", listener: Function) : IncomingMessage
    +addListener(event: string | symbol, listener: Function) : IncomingMessage
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +from(iterable: Iterable<any> | AsyncIterable<any>, options: ReadableOptions) : Readable
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : IncomingMessage
    +on(event: "close", listener: Function) : IncomingMessage
    +on(event: "data", listener: Function) : IncomingMessage
    +on(event: "end", listener: Function) : IncomingMessage
    +on(event: "error", listener: Function) : IncomingMessage
    +on(event: "pause", listener: Function) : IncomingMessage
    +on(event: "readable", listener: Function) : IncomingMessage
    +on(event: "resume", listener: Function) : IncomingMessage
    +on(event: string | symbol, listener: Function) : IncomingMessage
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : IncomingMessage
    +once(event: "data", listener: Function) : IncomingMessage
    +once(event: "end", listener: Function) : IncomingMessage
    +once(event: "error", listener: Function) : IncomingMessage
    +once(event: "pause", listener: Function) : IncomingMessage
    +once(event: "readable", listener: Function) : IncomingMessage
    +once(event: "resume", listener: Function) : IncomingMessage
    +once(event: string | symbol, listener: Function) : IncomingMessage
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : IncomingMessage
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : IncomingMessage
    +prependListener(event: "data", listener: Function) : IncomingMessage
    +prependListener(event: "end", listener: Function) : IncomingMessage
    +prependListener(event: "error", listener: Function) : IncomingMessage
    +prependListener(event: "pause", listener: Function) : IncomingMessage
    +prependListener(event: "readable", listener: Function) : IncomingMessage
    +prependListener(event: "resume", listener: Function) : IncomingMessage
    +prependListener(event: string | symbol, listener: Function) : IncomingMessage
    +prependOnceListener(event: "close", listener: Function) : IncomingMessage
    +prependOnceListener(event: "data", listener: Function) : IncomingMessage
    +prependOnceListener(event: "end", listener: Function) : IncomingMessage
    +prependOnceListener(event: "error", listener: Function) : IncomingMessage
    +prependOnceListener(event: "pause", listener: Function) : IncomingMessage
    +prependOnceListener(event: "readable", listener: Function) : IncomingMessage
    +prependOnceListener(event: "resume", listener: Function) : IncomingMessage
    +prependOnceListener(event: string | symbol, listener: Function) : IncomingMessage
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : IncomingMessage
    +removeListener(event: "close", listener: Function) : IncomingMessage
    +removeListener(event: "data", listener: Function) : IncomingMessage
    +removeListener(event: "end", listener: Function) : IncomingMessage
    +removeListener(event: "error", listener: Function) : IncomingMessage
    +removeListener(event: "pause", listener: Function) : IncomingMessage
    +removeListener(event: "readable", listener: Function) : IncomingMessage
    +removeListener(event: "resume", listener: Function) : IncomingMessage
    +removeListener(event: string | symbol, listener: Function) : IncomingMessage
    +resume() : IncomingMessage
    +setEncoding(encoding: BufferEncoding) : IncomingMessage
    +setMaxListeners(n: number) : IncomingMessage
    +setTimeout(msecs: number, callback: Function) : IncomingMessage
    +unpipe(destination: WritableStream) : IncomingMessage
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : IncomingMessage
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_read(size: number) : void
}
"Readable" <|- - "IncomingMessage"
class "Duplex" {
    +allowHalfOpen : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Duplex
    +addListener(event: "data", listener: Function) : Duplex
    +addListener(event: "end", listener: Function) : Duplex
    +addListener(event: "error", listener: Function) : Duplex
    +addListener(event: "pause", listener: Function) : Duplex
    +addListener(event: "readable", listener: Function) : Duplex
    +addListener(event: "resume", listener: Function) : Duplex
    +addListener(event: string | symbol, listener: Function) : Duplex
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | Stream | Iterable<any> | AsyncIterable<any> | Promise<any> | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Duplex
    +on(event: "close", listener: Function) : Duplex
    +on(event: "data", listener: Function) : Duplex
    +on(event: "end", listener: Function) : Duplex
    +on(event: "error", listener: Function) : Duplex
    +on(event: "pause", listener: Function) : Duplex
    +on(event: "readable", listener: Function) : Duplex
    +on(event: "resume", listener: Function) : Duplex
    +on(event: string | symbol, listener: Function) : Duplex
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Duplex
    +once(event: "data", listener: Function) : Duplex
    +once(event: "end", listener: Function) : Duplex
    +once(event: "error", listener: Function) : Duplex
    +once(event: "pause", listener: Function) : Duplex
    +once(event: "readable", listener: Function) : Duplex
    +once(event: "resume", listener: Function) : Duplex
    +once(event: string | symbol, listener: Function) : Duplex
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Duplex
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Duplex
    +prependListener(event: "data", listener: Function) : Duplex
    +prependListener(event: "end", listener: Function) : Duplex
    +prependListener(event: "error", listener: Function) : Duplex
    +prependListener(event: "pause", listener: Function) : Duplex
    +prependListener(event: "readable", listener: Function) : Duplex
    +prependListener(event: "resume", listener: Function) : Duplex
    +prependListener(event: string | symbol, listener: Function) : Duplex
    +prependOnceListener(event: "close", listener: Function) : Duplex
    +prependOnceListener(event: "data", listener: Function) : Duplex
    +prependOnceListener(event: "end", listener: Function) : Duplex
    +prependOnceListener(event: "error", listener: Function) : Duplex
    +prependOnceListener(event: "pause", listener: Function) : Duplex
    +prependOnceListener(event: "readable", listener: Function) : Duplex
    +prependOnceListener(event: "resume", listener: Function) : Duplex
    +prependOnceListener(event: string | symbol, listener: Function) : Duplex
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Duplex
    +removeListener(event: "close", listener: Function) : Duplex
    +removeListener(event: "data", listener: Function) : Duplex
    +removeListener(event: "end", listener: Function) : Duplex
    +removeListener(event: "error", listener: Function) : Duplex
    +removeListener(event: "pause", listener: Function) : Duplex
    +removeListener(event: "readable", listener: Function) : Duplex
    +removeListener(event: "resume", listener: Function) : Duplex
    +removeListener(event: string | symbol, listener: Function) : Duplex
    +resume() : Duplex
    +setDefaultEncoding(encoding: BufferEncoding) : Duplex
    +setEncoding(encoding: BufferEncoding) : Duplex
    +setMaxListeners(n: number) : Duplex
    +uncork() : void
    +unpipe(destination: WritableStream) : Duplex
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Duplex
    +write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean
    +write(chunk: any, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_read(size: number) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Readable" <|- - "Duplex"
class "Duplex" {
    +allowHalfOpen : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Duplex
    +addListener(event: "data", listener: Function) : Duplex
    +addListener(event: "end", listener: Function) : Duplex
    +addListener(event: "error", listener: Function) : Duplex
    +addListener(event: "pause", listener: Function) : Duplex
    +addListener(event: "readable", listener: Function) : Duplex
    +addListener(event: "resume", listener: Function) : Duplex
    +addListener(event: string | symbol, listener: Function) : Duplex
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | Stream | Iterable<any> | AsyncIterable<any> | Promise<any> | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Duplex
    +on(event: "close", listener: Function) : Duplex
    +on(event: "data", listener: Function) : Duplex
    +on(event: "end", listener: Function) : Duplex
    +on(event: "error", listener: Function) : Duplex
    +on(event: "pause", listener: Function) : Duplex
    +on(event: "readable", listener: Function) : Duplex
    +on(event: "resume", listener: Function) : Duplex
    +on(event: string | symbol, listener: Function) : Duplex
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Duplex
    +once(event: "data", listener: Function) : Duplex
    +once(event: "end", listener: Function) : Duplex
    +once(event: "error", listener: Function) : Duplex
    +once(event: "pause", listener: Function) : Duplex
    +once(event: "readable", listener: Function) : Duplex
    +once(event: "resume", listener: Function) : Duplex
    +once(event: string | symbol, listener: Function) : Duplex
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Duplex
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Duplex
    +prependListener(event: "data", listener: Function) : Duplex
    +prependListener(event: "end", listener: Function) : Duplex
    +prependListener(event: "error", listener: Function) : Duplex
    +prependListener(event: "pause", listener: Function) : Duplex
    +prependListener(event: "readable", listener: Function) : Duplex
    +prependListener(event: "resume", listener: Function) : Duplex
    +prependListener(event: string | symbol, listener: Function) : Duplex
    +prependOnceListener(event: "close", listener: Function) : Duplex
    +prependOnceListener(event: "data", listener: Function) : Duplex
    +prependOnceListener(event: "end", listener: Function) : Duplex
    +prependOnceListener(event: "error", listener: Function) : Duplex
    +prependOnceListener(event: "pause", listener: Function) : Duplex
    +prependOnceListener(event: "readable", listener: Function) : Duplex
    +prependOnceListener(event: "resume", listener: Function) : Duplex
    +prependOnceListener(event: string | symbol, listener: Function) : Duplex
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Duplex
    +removeListener(event: "close", listener: Function) : Duplex
    +removeListener(event: "data", listener: Function) : Duplex
    +removeListener(event: "end", listener: Function) : Duplex
    +removeListener(event: "error", listener: Function) : Duplex
    +removeListener(event: "pause", listener: Function) : Duplex
    +removeListener(event: "readable", listener: Function) : Duplex
    +removeListener(event: "resume", listener: Function) : Duplex
    +removeListener(event: string | symbol, listener: Function) : Duplex
    +resume() : Duplex
    +setDefaultEncoding(encoding: BufferEncoding) : Duplex
    +setEncoding(encoding: BufferEncoding) : Duplex
    +setMaxListeners(n: number) : Duplex
    +uncork() : void
    +unpipe(destination: WritableStream) : Duplex
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Duplex
    +write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean
    +write(chunk: any, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_read(size: number) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Readable" <|- - "Duplex"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>