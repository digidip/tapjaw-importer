<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1809px" preserveAspectRatio="none" style="width:1182px;height:1809px;background:#00000000;" version="1.1" viewBox="0 0 1182 1809" width="1182px" zoomAndPan="magnify"><defs><filter height="300%" id="f1f9r97mxzpabn" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[c367c524f13260ba207946109d621584]
class Readable--><rect codeLine="4" fill="#FEFECE" filter="url(#f1f9r97mxzpabn)" height="1343.5078" id="Readable" style="stroke:#A80036;stroke-width:1.5;" width="637" x="306" y="452"/><ellipse cx="592.75" cy="468" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M595.2231,474.1431 Q594.6421,474.4419 594.0029,474.5913 Q593.3638,474.7407 592.6582,474.7407 Q590.1514,474.7407 588.8315,473.0889 Q587.5117,471.437 587.5117,468.3159 Q587.5117,465.1865 588.8315,463.5347 Q590.1514,461.8828 592.6582,461.8828 Q593.3638,461.8828 594.0112,462.0322 Q594.6587,462.1816 595.2231,462.4805 L595.2231,465.2031 Q594.5923,464.6221 593.9988,464.3523 Q593.4053,464.0825 592.7744,464.0825 Q591.4297,464.0825 590.7449,465.1492 Q590.0601,466.2158 590.0601,468.3159 Q590.0601,470.4077 590.7449,471.4744 Q591.4297,472.541 592.7744,472.541 Q593.4053,472.541 593.9988,472.2712 Q594.5923,472.0015 595.2231,471.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="55" x="613.25" y="472.5352">Readable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="307" x2="942" y1="484" y2="484"/><ellipse cx="317" cy="495" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="326" y="498.6348">captureRejections : boolean</text><ellipse cx="317" cy="507.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="326" y="511.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="317" cy="520.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="326" y="524.5449">defaultMaxListeners : number</text><ellipse cx="317" cy="533.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="326" y="537.5">destroyed : boolean</text><ellipse cx="317" cy="546.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="326" y="550.4551">errorMonitor : typeof errorMonitor</text><ellipse cx="317" cy="559.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="326" y="563.4102">readable : boolean</text><ellipse cx="317" cy="572.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="326" y="576.3652">readableAborted : boolean</text><ellipse cx="317" cy="585.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="326" y="589.3203">readableDidRead : boolean</text><ellipse cx="317" cy="598.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="326" y="602.2754">readableEncoding : null | BufferEncoding</text><ellipse cx="317" cy="611.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="326" y="615.2305">readableEnded : boolean</text><ellipse cx="317" cy="624.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="326" y="628.1855">readableFlowing : null | boolean</text><ellipse cx="317" cy="637.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="326" y="641.1406">readableHighWaterMark : number</text><ellipse cx="317" cy="650.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="326" y="654.0957">readableLength : number</text><ellipse cx="317" cy="663.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="326" y="667.0508">readableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="307" x2="942" y1="673.3711" y2="673.3711"/><ellipse cx="317" cy="684.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="326" y="688.0059">addListener(event: "close", listener: Function) : Readable</text><ellipse cx="317" cy="697.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="326" y="700.9609">addListener(event: "data", listener: Function) : Readable</text><ellipse cx="317" cy="710.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="326" y="713.916">addListener(event: "end", listener: Function) : Readable</text><ellipse cx="317" cy="723.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="326" y="726.8711">addListener(event: "error", listener: Function) : Readable</text><ellipse cx="317" cy="736.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="326" y="739.8262">addListener(event: "pause", listener: Function) : Readable</text><ellipse cx="317" cy="749.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="326" y="752.7813">addListener(event: "readable", listener: Function) : Readable</text><ellipse cx="317" cy="762.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="326" y="765.7363">addListener(event: "resume", listener: Function) : Readable</text><ellipse cx="317" cy="775.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="326" y="778.6914">addListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="317" cy="788.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="326" y="791.6465">destroy(error: Error) : void</text><ellipse cx="317" cy="800.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="326" y="804.6016">emit(event: "close") : boolean</text><ellipse cx="317" cy="813.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="326" y="817.5566">emit(event: "data", chunk: any) : boolean</text><ellipse cx="317" cy="826.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="326" y="830.5117">emit(event: "end") : boolean</text><ellipse cx="317" cy="839.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="326" y="843.4668">emit(event: "error", err: Error) : boolean</text><ellipse cx="317" cy="852.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="326" y="856.4219">emit(event: "pause") : boolean</text><ellipse cx="317" cy="865.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="326" y="869.377">emit(event: "readable") : boolean</text><ellipse cx="317" cy="878.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="326" y="882.332">emit(event: "resume") : boolean</text><ellipse cx="317" cy="891.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="326" y="895.2871">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="317" cy="904.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="326" y="908.2422">eventNames() : (string | symbol)[]</text><ellipse cx="317" cy="917.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="478" x="326" y="921.1973">from(iterable: Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;, options: ReadableOptions) : Readable</text><ellipse cx="317" cy="930.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="326" y="934.1523">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="317" cy="943.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="326" y="947.1074">getMaxListeners() : number</text><ellipse cx="317" cy="956.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="326" y="960.0625">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="317" cy="969.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="326" y="973.0176">isPaused() : boolean</text><ellipse cx="317" cy="982.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="326" y="985.9727">listenerCount(eventName: string | symbol) : number</text><ellipse cx="317" cy="995.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="326" y="998.9277">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="317" cy="1008.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="326" y="1011.8828">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="317" cy="1021.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="326" y="1024.8379">off(eventName: string | symbol, listener: Function) : Readable</text><ellipse cx="317" cy="1034.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="326" y="1037.793">on(event: "close", listener: Function) : Readable</text><ellipse cx="317" cy="1047.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="326" y="1050.748">on(event: "data", listener: Function) : Readable</text><ellipse cx="317" cy="1060.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="326" y="1063.7031">on(event: "end", listener: Function) : Readable</text><ellipse cx="317" cy="1073.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="326" y="1076.6582">on(event: "error", listener: Function) : Readable</text><ellipse cx="317" cy="1085.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="326" y="1089.6133">on(event: "pause", listener: Function) : Readable</text><ellipse cx="317" cy="1098.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="326" y="1102.5684">on(event: "readable", listener: Function) : Readable</text><ellipse cx="317" cy="1111.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="326" y="1115.5234">on(event: "resume", listener: Function) : Readable</text><ellipse cx="317" cy="1124.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="326" y="1128.4785">on(event: string | symbol, listener: Function) : Readable</text><ellipse cx="317" cy="1137.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="326" y="1141.4336">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="317" cy="1150.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="326" y="1154.3887">once(event: "close", listener: Function) : Readable</text><ellipse cx="317" cy="1163.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="326" y="1167.3438">once(event: "data", listener: Function) : Readable</text><ellipse cx="317" cy="1176.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="326" y="1180.2988">once(event: "end", listener: Function) : Readable</text><ellipse cx="317" cy="1189.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="326" y="1193.2539">once(event: "error", listener: Function) : Readable</text><ellipse cx="317" cy="1202.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="326" y="1206.209">once(event: "pause", listener: Function) : Readable</text><ellipse cx="317" cy="1215.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="326" y="1219.1641">once(event: "readable", listener: Function) : Readable</text><ellipse cx="317" cy="1228.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="326" y="1232.1191">once(event: "resume", listener: Function) : Readable</text><ellipse cx="317" cy="1241.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="326" y="1245.0742">once(event: string | symbol, listener: Function) : Readable</text><ellipse cx="317" cy="1254.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="326" y="1258.0293">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="317" cy="1267.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="326" y="1270.9844">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="317" cy="1280.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="326" y="1283.9395">pause() : Readable</text><ellipse cx="317" cy="1293.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="326" y="1296.8945">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="317" cy="1306.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="326" y="1309.8496">prependListener(event: "close", listener: Function) : Readable</text><ellipse cx="317" cy="1319.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="326" y="1322.8047">prependListener(event: "data", listener: Function) : Readable</text><ellipse cx="317" cy="1332.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="326" y="1335.7598">prependListener(event: "end", listener: Function) : Readable</text><ellipse cx="317" cy="1345.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="326" y="1348.7148">prependListener(event: "error", listener: Function) : Readable</text><ellipse cx="317" cy="1358.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="326" y="1361.6699">prependListener(event: "pause", listener: Function) : Readable</text><ellipse cx="317" cy="1370.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="326" y="1374.625">prependListener(event: "readable", listener: Function) : Readable</text><ellipse cx="317" cy="1383.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="326" y="1387.5801">prependListener(event: "resume", listener: Function) : Readable</text><ellipse cx="317" cy="1396.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="326" y="1400.5352">prependListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="317" cy="1409.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="326" y="1413.4902">prependOnceListener(event: "close", listener: Function) : Readable</text><ellipse cx="317" cy="1422.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="326" y="1426.4453">prependOnceListener(event: "data", listener: Function) : Readable</text><ellipse cx="317" cy="1435.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="326" y="1439.4004">prependOnceListener(event: "end", listener: Function) : Readable</text><ellipse cx="317" cy="1448.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="326" y="1452.3555">prependOnceListener(event: "error", listener: Function) : Readable</text><ellipse cx="317" cy="1461.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="326" y="1465.3105">prependOnceListener(event: "pause", listener: Function) : Readable</text><ellipse cx="317" cy="1474.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="326" y="1478.2656">prependOnceListener(event: "readable", listener: Function) : Readable</text><ellipse cx="317" cy="1487.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="326" y="1491.2207">prependOnceListener(event: "resume", listener: Function) : Readable</text><ellipse cx="317" cy="1500.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="326" y="1504.1758">prependOnceListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="317" cy="1513.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="326" y="1517.1309">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="317" cy="1526.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="326" y="1530.0859">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="317" cy="1539.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="326" y="1543.041">read(size: number) : any</text><ellipse cx="317" cy="1552.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="326" y="1555.9961">removeAllListeners(event: string | symbol) : Readable</text><ellipse cx="317" cy="1565.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="326" y="1568.9512">removeListener(event: "close", listener: Function) : Readable</text><ellipse cx="317" cy="1578.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="326" y="1581.9063">removeListener(event: "data", listener: Function) : Readable</text><ellipse cx="317" cy="1591.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="326" y="1594.8613">removeListener(event: "end", listener: Function) : Readable</text><ellipse cx="317" cy="1604.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="326" y="1607.8164">removeListener(event: "error", listener: Function) : Readable</text><ellipse cx="317" cy="1617.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="326" y="1620.7715">removeListener(event: "pause", listener: Function) : Readable</text><ellipse cx="317" cy="1630.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="326" y="1633.7266">removeListener(event: "readable", listener: Function) : Readable</text><ellipse cx="317" cy="1643.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="326" y="1646.6816">removeListener(event: "resume", listener: Function) : Readable</text><ellipse cx="317" cy="1656.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="326" y="1659.6367">removeListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="317" cy="1668.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="326" y="1672.5918">resume() : Readable</text><ellipse cx="317" cy="1681.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="326" y="1685.5469">setEncoding(encoding: BufferEncoding) : Readable</text><ellipse cx="317" cy="1694.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="326" y="1698.502">setMaxListeners(n: number) : Readable</text><ellipse cx="317" cy="1707.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="326" y="1711.457">unpipe(destination: WritableStream) : Readable</text><ellipse cx="317" cy="1720.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="326" y="1724.4121">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="317" cy="1733.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="326" y="1737.3672">wrap(stream: ReadableStream) : Readable</text><ellipse cx="317" cy="1746.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="326" y="1750.3223">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="317" cy="1759.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="326" y="1763.2773">_construct(callback: Function) : void</text><ellipse cx="317" cy="1772.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="326" y="1776.2324">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="317" cy="1785.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="326" y="1789.1875">_read(size: number) : void</text><!--MD5=[d71ee11ede0e83c966e8ef97d9465fe6]
class Stream--><rect codeLine="106" fill="#FEFECE" filter="url(#f1f9r97mxzpabn)" height="371.877" id="Stream" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="13.5"/><ellipse cx="301.25" cy="29.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M303.7231,35.6431 Q303.1421,35.9419 302.5029,36.0913 Q301.8638,36.2407 301.1582,36.2407 Q298.6514,36.2407 297.3315,34.5889 Q296.0117,32.937 296.0117,29.8159 Q296.0117,26.6865 297.3315,25.0347 Q298.6514,23.3828 301.1582,23.3828 Q301.8638,23.3828 302.5112,23.5322 Q303.1587,23.6816 303.7231,23.9805 L303.7231,26.7031 Q303.0923,26.1221 302.4988,25.8523 Q301.9053,25.5825 301.2744,25.5825 Q299.9297,25.5825 299.2449,26.6492 Q298.5601,27.7158 298.5601,29.8159 Q298.5601,31.9077 299.2449,32.9744 Q299.9297,34.041 301.2744,34.041 Q301.9053,34.041 302.4988,33.7712 Q303.0923,33.5015 303.7231,32.9204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="40" x="321.75" y="34.0352">Stream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="45.5" y2="45.5"/><ellipse cx="18" cy="56.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="60.1348">captureRejections : boolean</text><ellipse cx="18" cy="69.4551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="73.0898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="82.4102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="86.0449">defaultMaxListeners : number</text><ellipse cx="18" cy="95.3652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="99">errorMonitor : typeof errorMonitor</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="105.3203" y2="105.3203"/><ellipse cx="18" cy="116.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="27" y="119.9551">addListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="129.2754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="132.9102">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="142.2305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="145.8652">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="155.1855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="158.8203">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="168.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="171.7754">getMaxListeners() : number</text><ellipse cx="18" cy="181.0957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="184.7305">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="194.0508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="197.6855">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="207.0059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="210.6406">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="219.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="314" x="27" y="223.5957">off(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="232.916" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="236.5508">on(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="245.8711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="249.5059">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="258.8262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="262.4609">once(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="271.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="275.416">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="284.7363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="288.3711">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="297.6914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="301.3262">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="310.6465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="387" x="27" y="314.2813">prependListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="323.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="27" y="327.2363">prependOnceListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="336.5566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="340.1914">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="349.5117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="27" y="353.1465">removeAllListeners(event: string | symbol) : Stream</text><ellipse cx="18" cy="362.4668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="382" x="27" y="366.1016">removeListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="375.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="27" y="379.0566">setMaxListeners(n: number) : Stream</text><!--MD5=[2ae9bde532a65868123a40364e87803a]
class ReadableStream--><rect codeLine="134" fill="#FEFECE" filter="url(#f1f9r97mxzpabn)" height="384.832" id="ReadableStream" style="stroke:#A80036;stroke-width:1.5;" width="489" x="679" y="7"/><ellipse cx="871.75" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M868.1777,19.2651 L868.1777,17.1069 L875.5571,17.1069 L875.5571,19.2651 L873.0918,19.2651 L873.0918,27.3418 L875.5571,27.3418 L875.5571,29.5 L868.1777,29.5 L868.1777,27.3418 L870.6431,27.3418 L870.6431,19.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="95" x="892.25" y="27.5352">ReadableStream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="680" x2="1167" y1="39" y2="39"/><ellipse cx="690" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="699" y="53.6348">readable : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="680" x2="1167" y1="59.9551" y2="59.9551"/><ellipse cx="690" cy="70.9551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="410" x="699" y="74.5898">addListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="690" cy="83.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="699" y="87.5449">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="690" cy="96.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="699" y="100.5">eventNames() : (string | symbol)[]</text><ellipse cx="690" cy="109.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="699" y="113.4551">getMaxListeners() : number</text><ellipse cx="690" cy="122.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="699" y="126.4102">isPaused() : boolean</text><ellipse cx="690" cy="135.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="699" y="139.3652">listenerCount(eventName: string | symbol) : number</text><ellipse cx="690" cy="148.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="699" y="152.3203">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="690" cy="161.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="699" y="165.2754">off(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="690" cy="174.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="699" y="178.2305">on(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="690" cy="187.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="699" y="191.1855">once(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="690" cy="200.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="699" y="204.1406">pause() : ReadableStream</text><ellipse cx="690" cy="213.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="699" y="217.0957">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="690" cy="226.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="435" x="699" y="230.0508">prependListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="690" cy="239.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="463" x="699" y="243.0059">prependOnceListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="690" cy="252.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="699" y="255.9609">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="690" cy="265.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="699" y="268.916">read(size: number) : string | Buffer</text><ellipse cx="690" cy="278.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="699" y="281.8711">removeAllListeners(event: string | symbol) : ReadableStream</text><ellipse cx="690" cy="291.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="430" x="699" y="294.8262">removeListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="690" cy="304.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699" y="307.7813">resume() : ReadableStream</text><ellipse cx="690" cy="317.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="699" y="320.7363">setEncoding(encoding: BufferEncoding) : ReadableStream</text><ellipse cx="690" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="699" y="333.6914">setMaxListeners(n: number) : ReadableStream</text><ellipse cx="690" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="699" y="346.6465">unpipe(destination: WritableStream) : ReadableStream</text><ellipse cx="690" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="699" y="359.6016">unshift(chunk: string | Uint8Array, encoding: BufferEncoding) : void</text><ellipse cx="690" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="699" y="372.5566">wrap(oldStream: ReadableStream) : ReadableStream</text><ellipse cx="690" cy="381.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="699" y="385.5117">[asyncIterator]() : AsyncIterableIterator&lt;string | Buffer&gt;</text><!--MD5=[94cb1445837fb446aa5f5819d9971c55]
reverse link Stream to Readable--><path codeLine="133" d="M391.64,404.57 C396.6,419.85 401.73,435.68 407,451.96 " fill="none" id="Stream-backto-Readable" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="384.98,406.7,385.47,385.52,398.29,402.39,384.98,406.7" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[4ddf0d38953a435f3cf6ce8f62a2e10b]
reverse link ReadableStream to Readable--><path codeLine="162" d="M855.06,411.67 C850.84,424.69 846.49,438.09 842.05,451.81 " fill="none" id="ReadableStream-backto-Readable" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="848.54,409.07,861.37,392.2,861.86,413.39,848.54,409.07" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[7317c4b706e9a282d63e2d16ebfea827]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "Readable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Readable
    +addListener(event: "data", listener: Function) : Readable
    +addListener(event: "end", listener: Function) : Readable
    +addListener(event: "error", listener: Function) : Readable
    +addListener(event: "pause", listener: Function) : Readable
    +addListener(event: "readable", listener: Function) : Readable
    +addListener(event: "resume", listener: Function) : Readable
    +addListener(event: string | symbol, listener: Function) : Readable
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +from(iterable: Iterable<any> | AsyncIterable<any>, options: ReadableOptions) : Readable
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Readable
    +on(event: "close", listener: Function) : Readable
    +on(event: "data", listener: Function) : Readable
    +on(event: "end", listener: Function) : Readable
    +on(event: "error", listener: Function) : Readable
    +on(event: "pause", listener: Function) : Readable
    +on(event: "readable", listener: Function) : Readable
    +on(event: "resume", listener: Function) : Readable
    +on(event: string | symbol, listener: Function) : Readable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Readable
    +once(event: "data", listener: Function) : Readable
    +once(event: "end", listener: Function) : Readable
    +once(event: "error", listener: Function) : Readable
    +once(event: "pause", listener: Function) : Readable
    +once(event: "readable", listener: Function) : Readable
    +once(event: "resume", listener: Function) : Readable
    +once(event: string | symbol, listener: Function) : Readable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Readable
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Readable
    +prependListener(event: "data", listener: Function) : Readable
    +prependListener(event: "end", listener: Function) : Readable
    +prependListener(event: "error", listener: Function) : Readable
    +prependListener(event: "pause", listener: Function) : Readable
    +prependListener(event: "readable", listener: Function) : Readable
    +prependListener(event: "resume", listener: Function) : Readable
    +prependListener(event: string | symbol, listener: Function) : Readable
    +prependOnceListener(event: "close", listener: Function) : Readable
    +prependOnceListener(event: "data", listener: Function) : Readable
    +prependOnceListener(event: "end", listener: Function) : Readable
    +prependOnceListener(event: "error", listener: Function) : Readable
    +prependOnceListener(event: "pause", listener: Function) : Readable
    +prependOnceListener(event: "readable", listener: Function) : Readable
    +prependOnceListener(event: "resume", listener: Function) : Readable
    +prependOnceListener(event: string | symbol, listener: Function) : Readable
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Readable
    +removeListener(event: "close", listener: Function) : Readable
    +removeListener(event: "data", listener: Function) : Readable
    +removeListener(event: "end", listener: Function) : Readable
    +removeListener(event: "error", listener: Function) : Readable
    +removeListener(event: "pause", listener: Function) : Readable
    +removeListener(event: "readable", listener: Function) : Readable
    +removeListener(event: "resume", listener: Function) : Readable
    +removeListener(event: string | symbol, listener: Function) : Readable
    +resume() : Readable
    +setEncoding(encoding: BufferEncoding) : Readable
    +setMaxListeners(n: number) : Readable
    +unpipe(destination: WritableStream) : Readable
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Readable
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_read(size: number) : void
}
class "Stream" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +addListener(eventName: string | symbol, listener: Function) : Stream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Stream
    +on(eventName: string | symbol, listener: Function) : Stream
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(eventName: string | symbol, listener: Function) : Stream
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : Stream
    +prependOnceListener(eventName: string | symbol, listener: Function) : Stream
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Stream
    +removeListener(eventName: string | symbol, listener: Function) : Stream
    +setMaxListeners(n: number) : Stream
}
"Stream" <|- - "Readable"
interface "ReadableStream" {
    +readable : boolean
    +addListener(eventName: string | symbol, listener: Function) : ReadableStream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    +getMaxListeners() : number
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : ReadableStream
    +on(eventName: string | symbol, listener: Function) : ReadableStream
    +once(eventName: string | symbol, listener: Function) : ReadableStream
    +pause() : ReadableStream
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : ReadableStream
    +prependOnceListener(eventName: string | symbol, listener: Function) : ReadableStream
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : string | Buffer
    +removeAllListeners(event: string | symbol) : ReadableStream
    +removeListener(eventName: string | symbol, listener: Function) : ReadableStream
    +resume() : ReadableStream
    +setEncoding(encoding: BufferEncoding) : ReadableStream
    +setMaxListeners(n: number) : ReadableStream
    +unpipe(destination: WritableStream) : ReadableStream
    +unshift(chunk: string | Uint8Array, encoding: BufferEncoding) : void
    +wrap(oldStream: ReadableStream) : ReadableStream
    +[asyncIterator]() : AsyncIterableIterator<string | Buffer>
}
"ReadableStream" <|.. "Readable"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>