<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="674px" preserveAspectRatio="none" style="width:415px;height:674px;background:#00000000;" version="1.1" viewBox="0 0 415 674" width="415px" zoomAndPan="magnify"><defs><filter height="300%" id="fqzt0co3956ab" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[cb36e1f5dd1818f987d708963e595f6c]
class Uint8Array--><rect codeLine="4" fill="#FEFECE" filter="url(#fqzt0co3956ab)" height="540.293" id="Uint8Array" style="stroke:#A80036;stroke-width:1.5;" width="394" x="7" y="120"/><ellipse cx="169.25" cy="136" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M165.6777,132.2651 L165.6777,130.1069 L173.0571,130.1069 L173.0571,132.2651 L170.5918,132.2651 L170.5918,140.3418 L173.0571,140.3418 L173.0571,142.5 L165.6777,142.5 L165.6777,140.3418 L168.1431,140.3418 L168.1431,132.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="61" x="189.75" y="140.5352">Uint8Array</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="400" y1="152" y2="152"/><ellipse cx="18" cy="163" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="27" y="166.6348">buffer : ArrayBufferLike</text><ellipse cx="18" cy="175.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="27" y="179.5898">byteLength : number</text><ellipse cx="18" cy="188.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="192.5449">byteOffset : number</text><ellipse cx="18" cy="201.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="27" y="205.5">BYTES_PER_ELEMENT : number</text><ellipse cx="18" cy="214.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="27" y="218.4551">length : number</text><ellipse cx="18" cy="227.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="231.4102">[toStringTag] : "Uint8Array"</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="400" y1="237.7305" y2="237.7305"/><ellipse cx="18" cy="248.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="27" y="252.3652">at(index: number) : undefined | number</text><ellipse cx="18" cy="261.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="27" y="265.3203">copyWithin(target: number, start: number, end: number) : Uint8Array</text><ellipse cx="18" cy="274.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="27" y="278.2754">entries() : IterableIterator&lt;[number, number]&gt;</text><ellipse cx="18" cy="287.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="27" y="291.2305">every(predicate: Function, thisArg: any) : boolean</text><ellipse cx="18" cy="300.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="304.1855">fill(value: number, start: number, end: number) : Uint8Array</text><ellipse cx="18" cy="313.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="275" x="27" y="317.1406">filter(predicate: Function, thisArg: any) : Uint8Array</text><ellipse cx="18" cy="326.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="330.0957">find(predicate: Function, thisArg: any) : undefined | number</text><ellipse cx="18" cy="339.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="27" y="343.0508">findIndex(predicate: Function, thisArg: any) : number</text><ellipse cx="18" cy="352.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="27" y="356.0059">forEach(callbackfn: Function, thisArg: any) : void</text><ellipse cx="18" cy="365.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="27" y="368.9609">includes(searchElement: number, fromIndex: number) : boolean</text><ellipse cx="18" cy="378.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="27" y="381.916">indexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="18" cy="391.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="27" y="394.8711">join(separator: string) : string</text><ellipse cx="18" cy="404.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="27" y="407.8262">keys() : IterableIterator&lt;number&gt;</text><ellipse cx="18" cy="417.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="27" y="420.7813">lastIndexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="18" cy="430.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="27" y="433.7363">map(callbackfn: Function, thisArg: any) : Uint8Array</text><ellipse cx="18" cy="443.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="27" y="446.6914">reduce(callbackfn: Function) : number</text><ellipse cx="18" cy="456.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="27" y="459.6465">reduce(callbackfn: Function, initialValue: number) : number</text><ellipse cx="18" cy="468.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="27" y="472.6016">reduce</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="64" y="472.6016">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="18" cy="481.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="27" y="485.5566">reduceRight(callbackfn: Function) : number</text><ellipse cx="18" cy="494.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="498.5117">reduceRight(callbackfn: Function, initialValue: number) : number</text><ellipse cx="18" cy="507.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="27" y="511.4668">reduceRight</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="92" y="511.4668">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="18" cy="520.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="116" x="27" y="524.4219">reverse() : Uint8Array</text><ellipse cx="18" cy="533.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="537.377">set(array: ArrayLike&lt;number&gt;, offset: number) : void</text><ellipse cx="18" cy="546.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="247" x="27" y="550.332">slice(start: number, end: number) : Uint8Array</text><ellipse cx="18" cy="559.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="27" y="563.2871">some(predicate: Function, thisArg: any) : boolean</text><ellipse cx="18" cy="572.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="27" y="576.2422">sort(compareFn: Function) : Uint8Array</text><ellipse cx="18" cy="585.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="27" y="589.1973">subarray(begin: number, end: number) : Uint8Array</text><ellipse cx="18" cy="598.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="27" y="602.1523">toLocaleString() : string</text><ellipse cx="18" cy="611.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="27" y="615.1074">toString() : string</text><ellipse cx="18" cy="624.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="27" y="628.0625">valueOf() : Uint8Array</text><ellipse cx="18" cy="637.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="27" y="641.0176">values() : IterableIterator&lt;number&gt;</text><ellipse cx="18" cy="650.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="27" y="653.9727">[iterator]() : IterableIterator&lt;number&gt;</text><!--MD5=[8b6c46775ecb1f05e22df0ed998fc7bd]
class RelativeIndexable<number>--><rect codeLine="44" fill="#FEFECE" filter="url(#fqzt0co3956ab)" height="52.9551" id="RelativeIndexable&lt;number&gt;" style="stroke:#A80036;stroke-width:1.5;" width="237" x="85.5" y="7"/><ellipse cx="117.6" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M114.0277,19.2651 L114.0277,17.1069 L121.4071,17.1069 L121.4071,19.2651 L118.9418,19.2651 L118.9418,27.3418 L121.4071,27.3418 L121.4071,29.5 L114.0277,29.5 L114.0277,27.3418 L116.4931,27.3418 L116.4931,19.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="167" x="135.4" y="27.5352">RelativeIndexable&lt;number&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="86.5" x2="321.5" y1="39" y2="39"/><ellipse cx="96.5" cy="50" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="105.5" y="53.6348">at(index: number) : undefined | number</text><!--MD5=[0747f98411dc0ebd926ccdf42099ad77]
reverse link RelativeIndexable<number> to Uint8Array--><path codeLine="47" d="M204,80.35 C204,91.97 204,105.31 204,119.78 " fill="none" id="RelativeIndexable&lt;number&gt;-backto-Uint8Array" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="197,80.28,204,60.28,211,80.28,197,80.28" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[49733f912eeff9063a95a233c404facd]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
interface "Uint8Array" {
    +buffer : ArrayBufferLike
    +byteLength : number
    +byteOffset : number
    +BYTES_PER_ELEMENT : number
    +length : number
    +[toStringTag] : "Uint8Array"
    +at(index: number) : undefined | number
    +copyWithin(target: number, start: number, end: number) : Uint8Array
    +entries() : IterableIterator<[number, number]>
    +every(predicate: Function, thisArg: any) : boolean
    +fill(value: number, start: number, end: number) : Uint8Array
    +filter(predicate: Function, thisArg: any) : Uint8Array
    +find(predicate: Function, thisArg: any) : undefined | number
    +findIndex(predicate: Function, thisArg: any) : number
    +forEach(callbackfn: Function, thisArg: any) : void
    +includes(searchElement: number, fromIndex: number) : boolean
    +indexOf(searchElement: number, fromIndex: number) : number
    +join(separator: string) : string
    +keys() : IterableIterator<number>
    +lastIndexOf(searchElement: number, fromIndex: number) : number
    +map(callbackfn: Function, thisArg: any) : Uint8Array
    +reduce(callbackfn: Function) : number
    +reduce(callbackfn: Function, initialValue: number) : number
    +reduce<U>(callbackfn: Function, initialValue: U) : U
    +reduceRight(callbackfn: Function) : number
    +reduceRight(callbackfn: Function, initialValue: number) : number
    +reduceRight<U>(callbackfn: Function, initialValue: U) : U
    +reverse() : Uint8Array
    +set(array: ArrayLike<number>, offset: number) : void
    +slice(start: number, end: number) : Uint8Array
    +some(predicate: Function, thisArg: any) : boolean
    +sort(compareFn: Function) : Uint8Array
    +subarray(begin: number, end: number) : Uint8Array
    +toLocaleString() : string
    +toString() : string
    +valueOf() : Uint8Array
    +values() : IterableIterator<number>
    +[iterator]() : IterableIterator<number>
}
interface "RelativeIndexable<number>" {
    +at(index: number) : undefined | number
}
"RelativeIndexable<number>" <|- - "Uint8Array"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>