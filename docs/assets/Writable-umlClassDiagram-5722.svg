<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="4897px" preserveAspectRatio="none" style="width:1633px;height:4897px;background:#00000000;" version="1.1" viewBox="0 0 1633 4897" width="1633px" zoomAndPan="magnify"><defs><filter height="300%" id="f1lmpcpq0ou5cv" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[93f77cf1cd71031e7728e23fe162cbe1]
class Writable--><rect codeLine="4" fill="#FEFECE" filter="url(#f1lmpcpq0ou5cv)" height="1213.957" id="Writable" style="stroke:#A80036;stroke-width:1.5;" width="637" x="761" y="452"/><ellipse cx="1051.75" cy="468" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1054.2231,474.1431 Q1053.6421,474.4419 1053.0029,474.5913 Q1052.3638,474.7407 1051.6582,474.7407 Q1049.1514,474.7407 1047.8315,473.0889 Q1046.5117,471.437 1046.5117,468.3159 Q1046.5117,465.1865 1047.8315,463.5347 Q1049.1514,461.8828 1051.6582,461.8828 Q1052.3638,461.8828 1053.0112,462.0322 Q1053.6587,462.1816 1054.2231,462.4805 L1054.2231,465.2031 Q1053.5923,464.6221 1052.9988,464.3523 Q1052.4053,464.0825 1051.7744,464.0825 Q1050.4297,464.0825 1049.7449,465.1492 Q1049.0601,466.2158 1049.0601,468.3159 Q1049.0601,470.4077 1049.7449,471.4744 Q1050.4297,472.541 1051.7744,472.541 Q1052.4053,472.541 1052.9988,472.2712 Q1053.5923,472.0015 1054.2231,471.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="47" x="1072.25" y="472.5352">Writable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="762" x2="1397" y1="484" y2="484"/><ellipse cx="772" cy="495" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="781" y="498.6348">captureRejections : boolean</text><ellipse cx="772" cy="507.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="781" y="511.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="772" cy="520.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="781" y="524.5449">defaultMaxListeners : number</text><ellipse cx="772" cy="533.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="781" y="537.5">destroyed : boolean</text><ellipse cx="772" cy="546.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="781" y="550.4551">errorMonitor : typeof errorMonitor</text><ellipse cx="772" cy="559.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="781" y="563.4102">writable : boolean</text><ellipse cx="772" cy="572.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="781" y="576.3652">writableCorked : number</text><ellipse cx="772" cy="585.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="781" y="589.3203">writableEnded : boolean</text><ellipse cx="772" cy="598.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="781" y="602.2754">writableFinished : boolean</text><ellipse cx="772" cy="611.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="781" y="615.2305">writableHighWaterMark : number</text><ellipse cx="772" cy="624.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="781" y="628.1855">writableLength : number</text><ellipse cx="772" cy="637.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="781" y="641.1406">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="762" x2="1397" y1="647.4609" y2="647.4609"/><ellipse cx="772" cy="658.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="781" y="662.0957">addListener(event: "close", listener: Function) : Writable</text><ellipse cx="772" cy="671.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="781" y="675.0508">addListener(event: "drain", listener: Function) : Writable</text><ellipse cx="772" cy="684.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="781" y="688.0059">addListener(event: "error", listener: Function) : Writable</text><ellipse cx="772" cy="697.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="295" x="781" y="700.9609">addListener(event: "finish", listener: Function) : Writable</text><ellipse cx="772" cy="710.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="781" y="713.916">addListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="772" cy="723.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="781" y="726.8711">addListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="772" cy="736.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="781" y="739.8262">addListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="772" cy="749.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="781" y="752.7813">cork() : void</text><ellipse cx="772" cy="762.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="781" y="765.7363">destroy(error: Error) : Writable</text><ellipse cx="772" cy="775.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="781" y="778.6914">emit(event: "close") : boolean</text><ellipse cx="772" cy="788.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="781" y="791.6465">emit(event: "drain") : boolean</text><ellipse cx="772" cy="800.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="781" y="804.6016">emit(event: "error", err: Error) : boolean</text><ellipse cx="772" cy="813.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="781" y="817.5566">emit(event: "finish") : boolean</text><ellipse cx="772" cy="826.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="781" y="830.5117">emit(event: "pipe", src: Readable) : boolean</text><ellipse cx="772" cy="839.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="781" y="843.4668">emit(event: "unpipe", src: Readable) : boolean</text><ellipse cx="772" cy="852.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="781" y="856.4219">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="772" cy="865.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="781" y="869.377">end(cb: Function) : Writable</text><ellipse cx="772" cy="878.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="781" y="882.332">end(chunk: any, cb: Function) : Writable</text><ellipse cx="772" cy="891.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="354" x="781" y="895.2871">end(chunk: any, encoding: BufferEncoding, cb: Function) : Writable</text><ellipse cx="772" cy="904.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="781" y="908.2422">eventNames() : (string | symbol)[]</text><ellipse cx="772" cy="917.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="781" y="921.1973">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="772" cy="930.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="781" y="934.1523">getMaxListeners() : number</text><ellipse cx="772" cy="943.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="781" y="947.1074">listenerCount(eventName: string | symbol) : number</text><ellipse cx="772" cy="956.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="781" y="960.0625">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="772" cy="969.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="781" y="973.0176">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="772" cy="982.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="781" y="985.9727">off(eventName: string | symbol, listener: Function) : Writable</text><ellipse cx="772" cy="995.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="781" y="998.9277">on(event: "close", listener: Function) : Writable</text><ellipse cx="772" cy="1008.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="781" y="1011.8828">on(event: "drain", listener: Function) : Writable</text><ellipse cx="772" cy="1021.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="781" y="1024.8379">on(event: "error", listener: Function) : Writable</text><ellipse cx="772" cy="1034.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="781" y="1037.793">on(event: "finish", listener: Function) : Writable</text><ellipse cx="772" cy="1047.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="781" y="1050.748">on(event: "pipe", listener: Function) : Writable</text><ellipse cx="772" cy="1060.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="781" y="1063.7031">on(event: "unpipe", listener: Function) : Writable</text><ellipse cx="772" cy="1073.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="781" y="1076.6582">on(event: string | symbol, listener: Function) : Writable</text><ellipse cx="772" cy="1085.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="781" y="1089.6133">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="772" cy="1098.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="781" y="1102.5684">once(event: "close", listener: Function) : Writable</text><ellipse cx="772" cy="1111.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="781" y="1115.5234">once(event: "drain", listener: Function) : Writable</text><ellipse cx="772" cy="1124.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="781" y="1128.4785">once(event: "error", listener: Function) : Writable</text><ellipse cx="772" cy="1137.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="781" y="1141.4336">once(event: "finish", listener: Function) : Writable</text><ellipse cx="772" cy="1150.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="781" y="1154.3887">once(event: "pipe", listener: Function) : Writable</text><ellipse cx="772" cy="1163.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="781" y="1167.3438">once(event: "unpipe", listener: Function) : Writable</text><ellipse cx="772" cy="1176.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="781" y="1180.2988">once(event: string | symbol, listener: Function) : Writable</text><ellipse cx="772" cy="1189.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="781" y="1193.2539">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="772" cy="1202.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="781" y="1206.209">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="772" cy="1215.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="781" y="1219.1641">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="772" cy="1228.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="781" y="1232.1191">prependListener(event: "close", listener: Function) : Writable</text><ellipse cx="772" cy="1241.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="781" y="1245.0742">prependListener(event: "drain", listener: Function) : Writable</text><ellipse cx="772" cy="1254.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="781" y="1258.0293">prependListener(event: "error", listener: Function) : Writable</text><ellipse cx="772" cy="1267.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="781" y="1270.9844">prependListener(event: "finish", listener: Function) : Writable</text><ellipse cx="772" cy="1280.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="781" y="1283.9395">prependListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="772" cy="1293.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="781" y="1296.8945">prependListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="772" cy="1306.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="781" y="1309.8496">prependListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="772" cy="1319.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="781" y="1322.8047">prependOnceListener(event: "close", listener: Function) : Writable</text><ellipse cx="772" cy="1332.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="781" y="1335.7598">prependOnceListener(event: "drain", listener: Function) : Writable</text><ellipse cx="772" cy="1345.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="781" y="1348.7148">prependOnceListener(event: "error", listener: Function) : Writable</text><ellipse cx="772" cy="1358.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="348" x="781" y="1361.6699">prependOnceListener(event: "finish", listener: Function) : Writable</text><ellipse cx="772" cy="1370.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="781" y="1374.625">prependOnceListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="772" cy="1383.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="781" y="1387.5801">prependOnceListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="772" cy="1396.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="781" y="1400.5352">prependOnceListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="772" cy="1409.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="781" y="1413.4902">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="772" cy="1422.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="781" y="1426.4453">removeAllListeners(event: string | symbol) : Writable</text><ellipse cx="772" cy="1435.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="781" y="1439.4004">removeListener(event: "close", listener: Function) : Writable</text><ellipse cx="772" cy="1448.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="781" y="1452.3555">removeListener(event: "drain", listener: Function) : Writable</text><ellipse cx="772" cy="1461.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="781" y="1465.3105">removeListener(event: "error", listener: Function) : Writable</text><ellipse cx="772" cy="1474.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="781" y="1478.2656">removeListener(event: "finish", listener: Function) : Writable</text><ellipse cx="772" cy="1487.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="781" y="1491.2207">removeListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="772" cy="1500.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="781" y="1504.1758">removeListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="772" cy="1513.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="781" y="1517.1309">removeListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="772" cy="1526.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="781" y="1530.0859">setDefaultEncoding(encoding: BufferEncoding) : Writable</text><ellipse cx="772" cy="1539.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="781" y="1543.041">setMaxListeners(n: number) : Writable</text><ellipse cx="772" cy="1552.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="781" y="1555.9961">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="772" cy="1565.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="781" y="1568.9512">uncork() : void</text><ellipse cx="772" cy="1578.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="781" y="1581.9063">write(chunk: any, callback: Function) : boolean</text><ellipse cx="772" cy="1591.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="781" y="1594.8613">write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean</text><ellipse cx="772" cy="1604.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="781" y="1607.8164">_construct(callback: Function) : void</text><ellipse cx="772" cy="1617.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="781" y="1620.7715">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="772" cy="1630.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="781" y="1633.7266">_final(callback: Function) : void</text><ellipse cx="772" cy="1643.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="781" y="1646.6816">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="772" cy="1656.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="781" y="1659.6367">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[d71ee11ede0e83c966e8ef97d9465fe6]
class Stream--><rect codeLine="96" fill="#FEFECE" filter="url(#f1lmpcpq0ou5cv)" height="384.832" id="Stream" style="stroke:#A80036;stroke-width:1.5;" width="637" x="463" y="7"/><ellipse cx="757.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M759.7231,29.1431 Q759.1421,29.4419 758.5029,29.5913 Q757.8638,29.7407 757.1582,29.7407 Q754.6514,29.7407 753.3315,28.0889 Q752.0117,26.437 752.0117,23.3159 Q752.0117,20.1865 753.3315,18.5347 Q754.6514,16.8828 757.1582,16.8828 Q757.8638,16.8828 758.5112,17.0322 Q759.1587,17.1816 759.7231,17.4805 L759.7231,20.2031 Q759.0923,19.6221 758.4988,19.3523 Q757.9053,19.0825 757.2744,19.0825 Q755.9297,19.0825 755.2449,20.1492 Q754.5601,21.2158 754.5601,23.3159 Q754.5601,25.4077 755.2449,26.4744 Q755.9297,27.541 757.2744,27.541 Q757.9053,27.541 758.4988,27.2712 Q759.0923,27.0015 759.7231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="40" x="777.75" y="27.5352">Stream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="464" x2="1099" y1="39" y2="39"/><ellipse cx="474" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="483" y="53.6348">captureRejections : boolean</text><ellipse cx="474" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="483" y="66.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="474" cy="75.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="483" y="79.5449">defaultMaxListeners : number</text><ellipse cx="474" cy="88.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="483" y="92.5">errorMonitor : typeof errorMonitor</text><line style="stroke:#A80036;stroke-width:1.5;" x1="464" x2="1099" y1="98.8203" y2="98.8203"/><ellipse cx="474" cy="109.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="483" y="113.4551">addListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="474" cy="122.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="483" y="126.4102">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="474" cy="135.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="483" y="139.3652">eventNames() : (string | symbol)[]</text><ellipse cx="474" cy="148.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="483" y="152.3203">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="474" cy="161.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="483" y="165.2754">getMaxListeners() : number</text><ellipse cx="474" cy="174.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="483" y="178.2305">listenerCount(eventName: string | symbol) : number</text><ellipse cx="474" cy="187.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="483" y="191.1855">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="474" cy="200.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="483" y="204.1406">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="474" cy="213.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="314" x="483" y="217.0957">off(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="474" cy="226.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="483" y="230.0508">on(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="474" cy="239.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="483" y="243.0059">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="474" cy="252.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="483" y="255.9609">once(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="474" cy="265.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="483" y="268.916">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="474" cy="278.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="483" y="281.8711">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="474" cy="291.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="483" y="294.8262">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="474" cy="304.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="387" x="483" y="307.7813">prependListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="474" cy="317.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="483" y="320.7363">prependOnceListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="474" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="483" y="333.6914">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="474" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="483" y="346.6465">removeAllListeners(event: string | symbol) : Stream</text><ellipse cx="474" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="382" x="483" y="359.6016">removeListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="474" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="483" y="372.5566">setMaxListeners(n: number) : Stream</text><ellipse cx="474" cy="381.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="483" y="385.5117">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><!--MD5=[75295b061bf85356a312df551dda4666]
class WritableStream--><rect codeLine="125" fill="#FEFECE" filter="url(#f1lmpcpq0ou5cv)" height="320.0566" id="WritableStream" style="stroke:#A80036;stroke-width:1.5;" width="484" x="1135.5" y="39.5"/><ellipse cx="1329.75" cy="55.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1326.1777,51.7651 L1326.1777,49.6069 L1333.5571,49.6069 L1333.5571,51.7651 L1331.0918,51.7651 L1331.0918,59.8418 L1333.5571,59.8418 L1333.5571,62 L1326.1777,62 L1326.1777,59.8418 L1328.6431,59.8418 L1328.6431,51.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="87" x="1350.25" y="60.0352">WritableStream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1136.5" x2="1618.5" y1="71.5" y2="71.5"/><ellipse cx="1146.5" cy="82.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="1155.5" y="86.1348">writable : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1136.5" x2="1618.5" y1="92.4551" y2="92.4551"/><ellipse cx="1146.5" cy="103.4551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="1155.5" y="107.0898">addListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="1146.5" cy="116.4102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="1155.5" y="120.0449">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="1146.5" cy="129.3652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="1155.5" y="133">end(cb: Function) : WritableStream</text><ellipse cx="1146.5" cy="142.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="1155.5" y="145.9551">end(data: string | Uint8Array, cb: Function) : WritableStream</text><ellipse cx="1146.5" cy="155.2754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="1155.5" y="158.9102">end(str: string, encoding: BufferEncoding, cb: Function) : WritableStream</text><ellipse cx="1146.5" cy="168.2305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="1155.5" y="171.8652">eventNames() : (string | symbol)[]</text><ellipse cx="1146.5" cy="181.1855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="1155.5" y="184.8203">getMaxListeners() : number</text><ellipse cx="1146.5" cy="194.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="1155.5" y="197.7754">listenerCount(eventName: string | symbol) : number</text><ellipse cx="1146.5" cy="207.0957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="1155.5" y="210.7305">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="1146.5" cy="220.0508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="1155.5" y="223.6855">off(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="1146.5" cy="233.0059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="1155.5" y="236.6406">on(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="1146.5" cy="245.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="1155.5" y="249.5957">once(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="1146.5" cy="258.916" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="430" x="1155.5" y="262.5508">prependListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="1146.5" cy="271.8711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="458" x="1155.5" y="275.5059">prependOnceListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="1146.5" cy="284.8262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="1155.5" y="288.4609">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="1146.5" cy="297.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="1155.5" y="301.416">removeAllListeners(event: string | symbol) : WritableStream</text><ellipse cx="1146.5" cy="310.7363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="425" x="1155.5" y="314.3711">removeListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="1146.5" cy="323.6914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="1155.5" y="327.3262">setMaxListeners(n: number) : WritableStream</text><ellipse cx="1146.5" cy="336.6465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="1155.5" y="340.2813">write(buffer: string | Uint8Array, cb: Function) : boolean</text><ellipse cx="1146.5" cy="349.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="1155.5" y="353.2363">write(str: string, encoding: BufferEncoding, cb: Function) : boolean</text><!--MD5=[e659cb07397b6e885205c421089cc64a]
class OutgoingMessage--><rect codeLine="149" fill="#FEFECE" filter="url(#f1lmpcpq0ou5cv)" height="1447.1484" id="OutgoingMessage" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="2581"/><ellipse cx="270.75" cy="2597" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M273.2231,2603.1431 Q272.6421,2603.4419 272.0029,2603.5913 Q271.3638,2603.7407 270.6582,2603.7407 Q268.1514,2603.7407 266.8315,2602.0889 Q265.5117,2600.437 265.5117,2597.3159 Q265.5117,2594.1865 266.8315,2592.5347 Q268.1514,2590.8828 270.6582,2590.8828 Q271.3638,2590.8828 272.0112,2591.0322 Q272.6587,2591.1816 273.2231,2591.4805 L273.2231,2594.2031 Q272.5923,2593.6221 271.9988,2593.3523 Q271.4053,2593.0825 270.7744,2593.0825 Q269.4297,2593.0825 268.7449,2594.1492 Q268.0601,2595.2158 268.0601,2597.3159 Q268.0601,2599.4077 268.7449,2600.4744 Q269.4297,2601.541 270.7744,2601.541 Q271.4053,2601.541 271.9988,2601.2712 Q272.5923,2601.0015 273.2231,2600.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="101" x="291.25" y="2601.5352">OutgoingMessage</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="2613" y2="2613"/><ellipse cx="18" cy="2624" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="2627.6348">captureRejections : boolean</text><ellipse cx="18" cy="2636.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="2640.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="2649.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="27" y="2653.5449">chunkedEncoding : boolean</text><ellipse cx="18" cy="2662.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="2666.5">connection : null | Socket</text><ellipse cx="18" cy="2675.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="2679.4551">defaultMaxListeners : number</text><ellipse cx="18" cy="2688.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="2692.4102">destroyed : boolean</text><ellipse cx="18" cy="2701.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="2705.3652">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="2714.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="27" y="2718.3203">finished : boolean</text><ellipse cx="18" cy="2727.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="27" y="2731.2754">headersSent : boolean</text><ellipse cx="18" cy="2740.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="27" y="2744.2305">req : IncomingMessage</text><ellipse cx="18" cy="2753.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="27" y="2757.1855">sendDate : boolean</text><ellipse cx="18" cy="2766.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="27" y="2770.1406">shouldKeepAlive : boolean</text><ellipse cx="18" cy="2779.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="27" y="2783.0957">socket : null | Socket</text><ellipse cx="18" cy="2792.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="27" y="2796.0508">useChunkedEncodingByDefault : boolean</text><ellipse cx="18" cy="2805.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="2809.0059">writable : boolean</text><ellipse cx="18" cy="2818.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="27" y="2821.9609">writableCorked : number</text><ellipse cx="18" cy="2831.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="27" y="2834.916">writableEnded : boolean</text><ellipse cx="18" cy="2844.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="2847.8711">writableFinished : boolean</text><ellipse cx="18" cy="2857.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="27" y="2860.8262">writableHighWaterMark : number</text><ellipse cx="18" cy="2870.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="27" y="2873.7813">writableLength : number</text><ellipse cx="18" cy="2883.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="2886.7363">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="2893.0566" y2="2893.0566"/><ellipse cx="18" cy="2904.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="347" x="27" y="2907.6914">addListener(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2917.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="347" x="27" y="2920.6465">addListener(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2929.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="347" x="27" y="2933.6016">addListener(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2942.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="27" y="2946.5566">addListener(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2955.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="342" x="27" y="2959.5117">addListener(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2968.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="27" y="2972.4668">addListener(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2981.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="27" y="2985.4219">addListener(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="2994.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="414" x="27" y="2998.377">addTrailers(headers: OutgoingHttpHeaders | readonly [string, string][]) : void</text><ellipse cx="18" cy="3007.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="27" y="3011.332">cork() : void</text><ellipse cx="18" cy="3020.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="27" y="3024.2871">destroy(error: Error) : OutgoingMessage</text><ellipse cx="18" cy="3033.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="3037.2422">emit(event: "close") : boolean</text><ellipse cx="18" cy="3046.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="3050.1973">emit(event: "drain") : boolean</text><ellipse cx="18" cy="3059.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="3063.1523">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="3072.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="27" y="3076.1074">emit(event: "finish") : boolean</text><ellipse cx="18" cy="3085.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="27" y="3089.0625">emit(event: "pipe", src: Readable) : boolean</text><ellipse cx="18" cy="3098.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="27" y="3102.0176">emit(event: "unpipe", src: Readable) : boolean</text><ellipse cx="18" cy="3111.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="3114.9727">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="3124.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="27" y="3127.9277">end(cb: Function) : OutgoingMessage</text><ellipse cx="18" cy="3137.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="3140.8828">end(chunk: any, cb: Function) : OutgoingMessage</text><ellipse cx="18" cy="3150.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="408" x="27" y="3153.8379">end(chunk: any, encoding: BufferEncoding, cb: Function) : OutgoingMessage</text><ellipse cx="18" cy="3163.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="3166.793">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="3176.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="27" y="3179.748">flushHeaders() : void</text><ellipse cx="18" cy="3189.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="3192.7031">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="3202.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="27" y="3205.6582">getHeader(name: string) : undefined | string | number | string[]</text><ellipse cx="18" cy="3214.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="27" y="3218.6133">getHeaderNames() : string[]</text><ellipse cx="18" cy="3227.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="27" y="3231.5684">getHeaders() : OutgoingHttpHeaders</text><ellipse cx="18" cy="3240.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="3244.5234">getMaxListeners() : number</text><ellipse cx="18" cy="3253.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="27" y="3257.4785">hasHeader(name: string) : boolean</text><ellipse cx="18" cy="3266.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="3270.4336">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="3279.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="3283.3887">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="3292.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="3296.3438">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="3305.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="374" x="27" y="3309.2988">off(eventName: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3318.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="3322.2539">on(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3331.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="3335.209">on(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3344.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="3348.1641">on(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3357.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="27" y="3361.1191">on(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3370.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="27" y="3374.0742">on(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3383.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="27" y="3387.0293">on(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3396.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="3399.9844">on(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3409.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="3412.9395">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="3422.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="3425.8945">once(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3435.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="3438.8496">once(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3448.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="3451.8047">once(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3461.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="27" y="3464.7598">once(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3474.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="27" y="3477.7148">once(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3487.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="27" y="3490.6699">once(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3499.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="3503.625">once(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3512.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="3516.5801">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="3525.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="3529.5352">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="3538.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="3542.4902">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="3551.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="27" y="3555.4453">prependListener(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3564.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="27" y="3568.4004">prependListener(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3577.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="27" y="3581.3555">prependListener(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3590.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="374" x="27" y="3594.3105">prependListener(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3603.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="3607.2656">prependListener(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3616.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="381" x="27" y="3620.2207">prependListener(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3629.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="27" y="3633.1758">prependListener(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3642.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="400" x="27" y="3646.1309">prependOnceListener(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3655.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="400" x="27" y="3659.0859">prependOnceListener(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3668.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="400" x="27" y="3672.041">prependOnceListener(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3681.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="402" x="27" y="3684.9961">prependOnceListener(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3694.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="395" x="27" y="3697.9512">prependOnceListener(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3707.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="409" x="27" y="3710.9063">prependOnceListener(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3720.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="445" x="27" y="3723.8613">prependOnceListener(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3733.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="3736.8164">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="3746.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="27" y="3749.7715">removeAllListeners(event: string | symbol) : OutgoingMessage</text><ellipse cx="18" cy="3759.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="27" y="3762.7266">removeHeader(name: string) : void</text><ellipse cx="18" cy="3772.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="3775.6816">removeListener(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3785.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="3788.6367">removeListener(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3797.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="3801.5918">removeListener(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3810.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="27" y="3814.5469">removeListener(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3823.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="27" y="3827.502">removeListener(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3836.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="27" y="3840.457">removeListener(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3849.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="27" y="3853.4121">removeListener(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="3862.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="27" y="3866.3672">setDefaultEncoding(encoding: BufferEncoding) : OutgoingMessage</text><ellipse cx="18" cy="3875.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="459" x="27" y="3879.3223">setHeader(name: string, value: string | number | readonly string[]) : OutgoingMessage</text><ellipse cx="18" cy="3888.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="27" y="3892.2773">setMaxListeners(n: number) : OutgoingMessage</text><ellipse cx="18" cy="3901.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="27" y="3905.2324">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="18" cy="3914.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="27" y="3918.1875">setTimeout(msecs: number, callback: Function) : OutgoingMessage</text><ellipse cx="18" cy="3927.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="27" y="3931.1426">uncork() : void</text><ellipse cx="18" cy="3940.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="3944.0977">write(chunk: any, callback: Function) : boolean</text><ellipse cx="18" cy="3953.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="27" y="3957.0527">write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean</text><ellipse cx="18" cy="3966.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="3970.0078">_construct(callback: Function) : void</text><ellipse cx="18" cy="3979.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="3982.9629">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="3992.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="27" y="3995.918">_final(callback: Function) : void</text><ellipse cx="18" cy="4005.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="27" y="4008.873">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="18" cy="4018.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="27" y="4021.8281">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[dbb0aac09fdd9457193737fcd885dcc9]
class Duplex--><rect codeLine="383" fill="#FEFECE" filter="url(#f1lmpcpq0ou5cv)" height="3157.2188" id="Duplex" style="stroke:#A80036;stroke-width:1.5;" width="800" x="679.5" y="1726"/><ellipse cx="1054.75" cy="1742" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1057.2231,1748.1431 Q1056.6421,1748.4419 1056.0029,1748.5913 Q1055.3638,1748.7407 1054.6582,1748.7407 Q1052.1514,1748.7407 1050.8315,1747.0889 Q1049.5117,1745.437 1049.5117,1742.3159 Q1049.5117,1739.1865 1050.8315,1737.5347 Q1052.1514,1735.8828 1054.6582,1735.8828 Q1055.3638,1735.8828 1056.0112,1736.0322 Q1056.6587,1736.1816 1057.2231,1736.4805 L1057.2231,1739.2031 Q1056.5923,1738.6221 1055.9988,1738.3523 Q1055.4053,1738.0825 1054.7744,1738.0825 Q1053.4297,1738.0825 1052.7449,1739.1492 Q1052.0601,1740.2158 1052.0601,1742.3159 Q1052.0601,1744.4077 1052.7449,1745.4744 Q1053.4297,1746.541 1054.7744,1746.541 Q1055.4053,1746.541 1055.9988,1746.2712 Q1056.5923,1746.0015 1057.2231,1745.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="41" x="1075.25" y="1746.5352">Duplex</text><line style="stroke:#A80036;stroke-width:1.5;" x1="680.5" x2="1478.5" y1="1758" y2="1758"/><ellipse cx="690.5" cy="1769" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="699.5" y="1772.6348">allowHalfOpen : boolean</text><ellipse cx="690.5" cy="1781.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="699.5" y="1785.5898">captureRejections : boolean</text><ellipse cx="690.5" cy="1794.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="699.5" y="1798.5449">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="690.5" cy="1807.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="699.5" y="1811.5">defaultMaxListeners : number</text><ellipse cx="690.5" cy="1820.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="699.5" y="1824.4551">destroyed : boolean</text><ellipse cx="690.5" cy="1833.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="699.5" y="1837.4102">errorMonitor : typeof errorMonitor</text><ellipse cx="690.5" cy="1846.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="699.5" y="1850.3652">readable : boolean</text><ellipse cx="690.5" cy="1859.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699.5" y="1863.3203">readableAborted : boolean</text><ellipse cx="690.5" cy="1872.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699.5" y="1876.2754">readableDidRead : boolean</text><ellipse cx="690.5" cy="1885.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="699.5" y="1889.2305">readableEncoding : null | BufferEncoding</text><ellipse cx="690.5" cy="1898.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="699.5" y="1902.1855">readableEnded : boolean</text><ellipse cx="690.5" cy="1911.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="699.5" y="1915.1406">readableFlowing : null | boolean</text><ellipse cx="690.5" cy="1924.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="699.5" y="1928.0957">readableHighWaterMark : number</text><ellipse cx="690.5" cy="1937.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="699.5" y="1941.0508">readableLength : number</text><ellipse cx="690.5" cy="1950.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="699.5" y="1954.0059">readableObjectMode : boolean</text><ellipse cx="690.5" cy="1963.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="699.5" y="1966.9609">writable : boolean</text><ellipse cx="690.5" cy="1976.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="699.5" y="1979.916">writableCorked : number</text><ellipse cx="690.5" cy="1989.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="699.5" y="1992.8711">writableEnded : boolean</text><ellipse cx="690.5" cy="2002.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699.5" y="2005.8262">writableFinished : boolean</text><ellipse cx="690.5" cy="2015.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="699.5" y="2018.7813">writableHighWaterMark : number</text><ellipse cx="690.5" cy="2028.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="699.5" y="2031.7363">writableLength : number</text><ellipse cx="690.5" cy="2041.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="2044.6914">writableObjectMode : boolean</text><ellipse cx="690.5" cy="2054.0117" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="699.5" y="2057.6465">allowHalfOpen : boolean</text><ellipse cx="690.5" cy="2066.9668" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="699.5" y="2070.6016">captureRejections : boolean</text><ellipse cx="690.5" cy="2079.9219" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="699.5" y="2083.5566">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="690.5" cy="2092.877" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="699.5" y="2096.5117">defaultMaxListeners : number</text><ellipse cx="690.5" cy="2105.832" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="699.5" y="2109.4668">destroyed : boolean</text><ellipse cx="690.5" cy="2118.7871" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="699.5" y="2122.4219">errorMonitor : typeof errorMonitor</text><ellipse cx="690.5" cy="2131.7422" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="699.5" y="2135.377">readable : boolean</text><ellipse cx="690.5" cy="2144.6973" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699.5" y="2148.332">readableAborted : boolean</text><ellipse cx="690.5" cy="2157.6523" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699.5" y="2161.2871">readableDidRead : boolean</text><ellipse cx="690.5" cy="2170.6074" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="699.5" y="2174.2422">readableEncoding : null | BufferEncoding</text><ellipse cx="690.5" cy="2183.5625" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="699.5" y="2187.1973">readableEnded : boolean</text><ellipse cx="690.5" cy="2196.5176" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="699.5" y="2200.1523">readableFlowing : null | boolean</text><ellipse cx="690.5" cy="2209.4727" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="699.5" y="2213.1074">readableHighWaterMark : number</text><ellipse cx="690.5" cy="2222.4277" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="699.5" y="2226.0625">readableLength : number</text><ellipse cx="690.5" cy="2235.3828" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="699.5" y="2239.0176">readableObjectMode : boolean</text><ellipse cx="690.5" cy="2248.3379" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="699.5" y="2251.9727">writable : boolean</text><ellipse cx="690.5" cy="2261.293" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="699.5" y="2264.9277">writableCorked : number</text><ellipse cx="690.5" cy="2274.248" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="699.5" y="2277.8828">writableEnded : boolean</text><ellipse cx="690.5" cy="2287.2031" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699.5" y="2290.8379">writableFinished : boolean</text><ellipse cx="690.5" cy="2300.1582" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="699.5" y="2303.793">writableHighWaterMark : number</text><ellipse cx="690.5" cy="2313.1133" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="699.5" y="2316.748">writableLength : number</text><ellipse cx="690.5" cy="2326.0684" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="2329.7031">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="680.5" x2="1478.5" y1="2336.0234" y2="2336.0234"/><ellipse cx="690.5" cy="2347.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699.5" y="2350.6582">addListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2359.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="699.5" y="2363.6133">addListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2372.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="699.5" y="2376.5684">addListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2385.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699.5" y="2389.5234">addListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2398.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="699.5" y="2402.4785">addListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2411.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="699.5" y="2415.4336">addListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2424.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="699.5" y="2428.3887">addListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2437.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="699.5" y="2441.3438">addListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="2450.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="699.5" y="2454.2988">cork() : void</text><ellipse cx="690.5" cy="2463.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="2467.2539">destroy(error: Error) : Duplex</text><ellipse cx="690.5" cy="2476.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="699.5" y="2480.209">emit(event: "close") : boolean</text><ellipse cx="690.5" cy="2489.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="699.5" y="2493.1641">emit(event: "data", chunk: any) : boolean</text><ellipse cx="690.5" cy="2502.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="699.5" y="2506.1191">emit(event: "end") : boolean</text><ellipse cx="690.5" cy="2515.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="699.5" y="2519.0742">emit(event: "error", err: Error) : boolean</text><ellipse cx="690.5" cy="2528.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="2532.0293">emit(event: "pause") : boolean</text><ellipse cx="690.5" cy="2541.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="699.5" y="2544.9844">emit(event: "readable") : boolean</text><ellipse cx="690.5" cy="2554.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="699.5" y="2557.9395">emit(event: "resume") : boolean</text><ellipse cx="690.5" cy="2567.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="699.5" y="2570.8945">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="690.5" cy="2580.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="699.5" y="2583.8496">end(cb: Function) : Duplex</text><ellipse cx="690.5" cy="2593.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="699.5" y="2596.8047">end(chunk: any, cb: Function) : Duplex</text><ellipse cx="690.5" cy="2606.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="699.5" y="2609.7598">end(chunk: any, encoding: BufferEncoding, cb: Function) : Duplex</text><ellipse cx="690.5" cy="2619.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="699.5" y="2622.7148">eventNames() : (string | symbol)[]</text><ellipse cx="690.5" cy="2632.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="699.5" y="2635.6699">from(src: string | Object | ArrayBuffer | Blob | Promise&lt;any&gt; | AsyncGeneratorFunction | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;) : Duplex</text><ellipse cx="690.5" cy="2644.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="699.5" y="2648.625">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="690.5" cy="2657.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="699.5" y="2661.5801">getMaxListeners() : number</text><ellipse cx="690.5" cy="2670.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="699.5" y="2674.5352">isDisturbed(stream: Readable | ReadableStream) : boolean</text><ellipse cx="690.5" cy="2683.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="699.5" y="2687.4902">isPaused() : boolean</text><ellipse cx="690.5" cy="2696.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="699.5" y="2700.4453">listenerCount(eventName: string | symbol) : number</text><ellipse cx="690.5" cy="2709.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="699.5" y="2713.4004">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="690.5" cy="2722.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="699.5" y="2726.3555">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="2735.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="699.5" y="2739.3105">off(eventName: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="2748.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="2752.2656">on(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2761.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="699.5" y="2765.2207">on(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2774.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="699.5" y="2778.1758">on(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2787.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="2791.1309">on(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2800.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="699.5" y="2804.0859">on(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2813.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="699.5" y="2817.041">on(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2826.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="2829.9961">on(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2839.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="699.5" y="2842.9512">on(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="2852.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="699.5" y="2855.9063">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690.5" cy="2865.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="2868.8613">once(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2878.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699.5" y="2881.8164">once(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2891.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="699.5" y="2894.7715">once(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2904.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="2907.7266">once(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2917.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="699.5" y="2920.6816">once(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2930.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="699.5" y="2933.6367">once(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2942.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="699.5" y="2946.5918">once(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2955.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="699.5" y="2959.5469">once(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="2968.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="699.5" y="2972.502">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690.5" cy="2981.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="699.5" y="2985.457">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690.5" cy="2994.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="699.5" y="2998.4121">pause() : Duplex</text><ellipse cx="690.5" cy="3007.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="699.5" y="3011.3672">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="690.5" cy="3020.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699.5" y="3024.3223">prependListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3033.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="3037.2773">prependListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3046.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="699.5" y="3050.2324">prependListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3059.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699.5" y="3063.1875">prependListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3072.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="699.5" y="3076.1426">prependListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3085.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="699.5" y="3089.0977">prependListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3098.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="699.5" y="3102.0527">prependListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3111.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="699.5" y="3115.0078">prependListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3124.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699.5" y="3127.9629">prependOnceListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3137.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="699.5" y="3140.918">prependOnceListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3150.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="699.5" y="3153.873">prependOnceListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3163.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699.5" y="3166.8281">prependOnceListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3176.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="699.5" y="3179.7832">prependOnceListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3189.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="699.5" y="3192.7383">prependOnceListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3202.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="699.5" y="3205.6934">prependOnceListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3215.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="699.5" y="3218.6484">prependOnceListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3227.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="699.5" y="3231.6035">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="690.5" cy="3240.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="699.5" y="3244.5586">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="3253.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="699.5" y="3257.5137">read(size: number) : any</text><ellipse cx="690.5" cy="3266.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="699.5" y="3270.4688">removeAllListeners(event: string | symbol) : Duplex</text><ellipse cx="690.5" cy="3279.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="3283.4238">removeListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3292.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="699.5" y="3296.3789">removeListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3305.6992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="699.5" y="3309.334">removeListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3318.6543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="3322.2891">removeListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3331.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="699.5" y="3335.2441">removeListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3344.5645" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="699.5" y="3348.1992">removeListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3357.5195" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="699.5" y="3361.1543">removeListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3370.4746" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="699.5" y="3374.1094">removeListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3383.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="699.5" y="3387.0645">resume() : Duplex</text><ellipse cx="690.5" cy="3396.3848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="699.5" y="3400.0195">setDefaultEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="690.5" cy="3409.3398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="699.5" y="3412.9746">setEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="690.5" cy="3422.2949" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="699.5" y="3425.9297">setMaxListeners(n: number) : Duplex</text><ellipse cx="690.5" cy="3435.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="699.5" y="3438.8848">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="690.5" cy="3448.2051" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="699.5" y="3451.8398">uncork() : void</text><ellipse cx="690.5" cy="3461.1602" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="699.5" y="3464.7949">unpipe(destination: WritableStream) : Duplex</text><ellipse cx="690.5" cy="3474.1152" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="699.5" y="3477.75">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="690.5" cy="3487.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="699.5" y="3490.7051">wrap(stream: ReadableStream) : Duplex</text><ellipse cx="690.5" cy="3500.0254" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="699.5" y="3503.6602">write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="690.5" cy="3512.9805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="699.5" y="3516.6152">write(chunk: any, cb: Function) : boolean</text><ellipse cx="690.5" cy="3525.9355" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699.5" y="3529.5703">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690.5" cy="3538.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="699.5" y="3542.5254">_construct(callback: Function) : void</text><ellipse cx="690.5" cy="3551.8457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="699.5" y="3555.4805">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="690.5" cy="3564.8008" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="699.5" y="3568.4355">_final(callback: Function) : void</text><ellipse cx="690.5" cy="3577.7559" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699.5" y="3581.3906">_read(size: number) : void</text><ellipse cx="690.5" cy="3590.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="699.5" y="3594.3457">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="690.5" cy="3603.666" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="699.5" y="3607.3008">_writev(chunks: Object[], callback: Function) : void</text><ellipse cx="690.5" cy="3616.6211" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699.5" y="3620.2559">addListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3629.5762" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="699.5" y="3633.2109">addListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3642.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="699.5" y="3646.166">addListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3655.4863" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699.5" y="3659.1211">addListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3668.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="699.5" y="3672.0762">addListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3681.3965" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="699.5" y="3685.0313">addListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3694.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="699.5" y="3697.9863">addListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3707.3066" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="699.5" y="3710.9414">addListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3720.2617" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="699.5" y="3723.8965">cork() : void</text><ellipse cx="690.5" cy="3733.2168" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="3736.8516">destroy(error: Error) : Duplex</text><ellipse cx="690.5" cy="3746.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="699.5" y="3749.8066">emit(event: "close") : boolean</text><ellipse cx="690.5" cy="3759.127" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="699.5" y="3762.7617">emit(event: "data", chunk: any) : boolean</text><ellipse cx="690.5" cy="3772.082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="699.5" y="3775.7168">emit(event: "end") : boolean</text><ellipse cx="690.5" cy="3785.0371" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="699.5" y="3788.6719">emit(event: "error", err: Error) : boolean</text><ellipse cx="690.5" cy="3797.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="3801.627">emit(event: "pause") : boolean</text><ellipse cx="690.5" cy="3810.9473" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="699.5" y="3814.582">emit(event: "readable") : boolean</text><ellipse cx="690.5" cy="3823.9023" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="699.5" y="3827.5371">emit(event: "resume") : boolean</text><ellipse cx="690.5" cy="3836.8574" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="699.5" y="3840.4922">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="690.5" cy="3849.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="699.5" y="3853.4473">end(cb: Function) : Duplex</text><ellipse cx="690.5" cy="3862.7676" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="699.5" y="3866.4023">end(chunk: any, cb: Function) : Duplex</text><ellipse cx="690.5" cy="3875.7227" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="699.5" y="3879.3574">end(chunk: any, encoding: BufferEncoding, cb: Function) : Duplex</text><ellipse cx="690.5" cy="3888.6777" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="699.5" y="3892.3125">eventNames() : (string | symbol)[]</text><ellipse cx="690.5" cy="3901.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="699.5" y="3905.2676">from(src: string | Object | ArrayBuffer | Blob | Promise&lt;any&gt; | AsyncGeneratorFunction | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;) : Duplex</text><ellipse cx="690.5" cy="3914.5879" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="699.5" y="3918.2227">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="690.5" cy="3927.543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="699.5" y="3931.1777">getMaxListeners() : number</text><ellipse cx="690.5" cy="3940.498" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="699.5" y="3944.1328">isDisturbed(stream: Readable | ReadableStream) : boolean</text><ellipse cx="690.5" cy="3953.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="699.5" y="3957.0879">isPaused() : boolean</text><ellipse cx="690.5" cy="3966.4082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="699.5" y="3970.043">listenerCount(eventName: string | symbol) : number</text><ellipse cx="690.5" cy="3979.3633" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="699.5" y="3982.998">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="690.5" cy="3992.3184" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="699.5" y="3995.9531">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="4005.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="699.5" y="4008.9082">off(eventName: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4018.2285" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="4021.8633">on(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4031.1836" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="699.5" y="4034.8184">on(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4044.1387" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="699.5" y="4047.7734">on(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4057.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="4060.7285">on(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4070.0488" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="699.5" y="4073.6836">on(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4083.0039" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="699.5" y="4086.6387">on(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4095.959" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="4099.5938">on(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4108.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="699.5" y="4112.5488">on(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4121.8691" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="699.5" y="4125.5039">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690.5" cy="4134.8242" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="4138.459">once(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4147.7793" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699.5" y="4151.4141">once(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4160.7344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="699.5" y="4164.3691">once(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4173.6895" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="4177.3242">once(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4186.6445" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="699.5" y="4190.2793">once(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4199.5996" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="699.5" y="4203.2344">once(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4212.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="699.5" y="4216.1895">once(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4225.5098" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="699.5" y="4229.1445">once(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4238.4648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="699.5" y="4242.0996">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690.5" cy="4251.4199" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="699.5" y="4255.0547">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690.5" cy="4264.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="699.5" y="4268.0098">pause() : Duplex</text><ellipse cx="690.5" cy="4277.3301" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="699.5" y="4280.9648">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="690.5" cy="4290.2852" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699.5" y="4293.9199">prependListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4303.2402" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="4306.875">prependListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4316.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="699.5" y="4319.8301">prependListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4329.1504" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699.5" y="4332.7852">prependListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4342.1055" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="699.5" y="4345.7402">prependListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4355.0605" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="699.5" y="4358.6953">prependListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4368.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="699.5" y="4371.6504">prependListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4380.9707" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="699.5" y="4384.6055">prependListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4393.9258" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699.5" y="4397.5605">prependOnceListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4406.8809" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="699.5" y="4410.5156">prependOnceListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4419.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="699.5" y="4423.4707">prependOnceListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4432.791" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699.5" y="4436.4258">prependOnceListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4445.7461" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="699.5" y="4449.3809">prependOnceListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4458.7012" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="699.5" y="4462.3359">prependOnceListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4471.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="699.5" y="4475.291">prependOnceListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4484.6113" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="699.5" y="4488.2461">prependOnceListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4497.5664" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="699.5" y="4501.2012">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="690.5" cy="4510.5215" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="699.5" y="4514.1563">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="4523.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="699.5" y="4527.1113">read(size: number) : any</text><ellipse cx="690.5" cy="4536.4316" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="699.5" y="4540.0664">removeAllListeners(event: string | symbol) : Duplex</text><ellipse cx="690.5" cy="4549.3867" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="4553.0215">removeListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4562.3418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="699.5" y="4565.9766">removeListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4575.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="699.5" y="4578.9316">removeListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4588.252" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="4591.8867">removeListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4601.207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="699.5" y="4604.8418">removeListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4614.1621" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="699.5" y="4617.7969">removeListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4627.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="699.5" y="4630.752">removeListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4640.0723" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="699.5" y="4643.707">removeListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4653.0273" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="699.5" y="4656.6621">resume() : Duplex</text><ellipse cx="690.5" cy="4665.9824" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="699.5" y="4669.6172">setDefaultEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="690.5" cy="4678.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="699.5" y="4682.5723">setEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="690.5" cy="4691.8926" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="699.5" y="4695.5273">setMaxListeners(n: number) : Duplex</text><ellipse cx="690.5" cy="4704.8477" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="699.5" y="4708.4824">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="690.5" cy="4717.8027" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="699.5" y="4721.4375">uncork() : void</text><ellipse cx="690.5" cy="4730.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="699.5" y="4734.3926">unpipe(destination: WritableStream) : Duplex</text><ellipse cx="690.5" cy="4743.7129" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="699.5" y="4747.3477">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="690.5" cy="4756.668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="699.5" y="4760.3027">wrap(stream: ReadableStream) : Duplex</text><ellipse cx="690.5" cy="4769.623" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="699.5" y="4773.2578">write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="690.5" cy="4782.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="699.5" y="4786.2129">write(chunk: any, cb: Function) : boolean</text><ellipse cx="690.5" cy="4795.5332" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699.5" y="4799.168">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690.5" cy="4808.4883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="699.5" y="4812.123">_construct(callback: Function) : void</text><ellipse cx="690.5" cy="4821.4434" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="699.5" y="4825.0781">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="690.5" cy="4834.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="699.5" y="4838.0332">_final(callback: Function) : void</text><ellipse cx="690.5" cy="4847.3535" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699.5" y="4850.9883">_read(size: number) : void</text><ellipse cx="690.5" cy="4860.3086" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="699.5" y="4863.9434">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="690.5" cy="4873.2637" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="699.5" y="4876.8984">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[c5033a169493e9fc7c976c9808c34910]
reverse link Stream to Writable--><path codeLine="124" d="M854.7,411.13 C859.27,424.28 863.97,437.81 868.77,451.63 " fill="none" id="Stream-backto-Writable" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="848.05,413.33,848.1,392.14,861.28,408.73,848.05,413.33" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[722c79936b051f4d7c91a0b945b9cd18]
reverse link WritableStream to Writable--><path codeLine="148" d="M1315.62,378.57 C1307.59,401.67 1299.04,426.27 1290.14,451.89 " fill="none" id="WritableStream-backto-Writable" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1309.06,376.12,1322.23,359.53,1322.28,380.72,1309.06,376.12" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[54f74e101d05a9e9a2c879a3bc5d61b3]
reverse link Writable to OutgoingMessage--><path codeLine="259" d="M751.16,1540.03 C717.63,1600.99 686.7,1663.83 661.5,1726 C552.08,1995.88 476.12,2306.83 424.48,2580.94 " fill="none" id="Writable-backto-OutgoingMessage" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="745.09,1536.54,760.92,1522.46,757.33,1543.34,745.09,1536.54" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[b14a26cd20596b28f442b4a89d6e536c]
reverse link Writable to Duplex--><path codeLine="382" d="M1067.93,1686.35 C1067.86,1699.35 1067.8,1712.46 1067.74,1725.68 " fill="none" id="Writable-backto-Duplex" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1060.93,1685.98,1068.03,1666.01,1074.93,1686.05,1060.93,1685.98" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[b14a26cd20596b28f442b4a89d6e536c]
reverse link Writable to Duplex--><path codeLine="505" d="M1091.75,1686.35 C1091.82,1699.35 1091.89,1712.46 1091.95,1725.68 " fill="none" id="Writable-backto-Duplex-1" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1084.75,1686.05,1091.64,1666.01,1098.75,1685.98,1084.75,1686.05" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[92e0bf385634fddd82359d0aae0513b4]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "Writable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Writable
    +addListener(event: "drain", listener: Function) : Writable
    +addListener(event: "error", listener: Function) : Writable
    +addListener(event: "finish", listener: Function) : Writable
    +addListener(event: "pipe", listener: Function) : Writable
    +addListener(event: "unpipe", listener: Function) : Writable
    +addListener(event: string | symbol, listener: Function) : Writable
    +cork() : void
    +destroy(error: Error) : Writable
    +emit(event: "close") : boolean
    +emit(event: "drain") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "finish") : boolean
    +emit(event: "pipe", src: Readable) : boolean
    +emit(event: "unpipe", src: Readable) : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : Writable
    +end(chunk: any, cb: Function) : Writable
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : Writable
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Writable
    +on(event: "close", listener: Function) : Writable
    +on(event: "drain", listener: Function) : Writable
    +on(event: "error", listener: Function) : Writable
    +on(event: "finish", listener: Function) : Writable
    +on(event: "pipe", listener: Function) : Writable
    +on(event: "unpipe", listener: Function) : Writable
    +on(event: string | symbol, listener: Function) : Writable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Writable
    +once(event: "drain", listener: Function) : Writable
    +once(event: "error", listener: Function) : Writable
    +once(event: "finish", listener: Function) : Writable
    +once(event: "pipe", listener: Function) : Writable
    +once(event: "unpipe", listener: Function) : Writable
    +once(event: string | symbol, listener: Function) : Writable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Writable
    +prependListener(event: "drain", listener: Function) : Writable
    +prependListener(event: "error", listener: Function) : Writable
    +prependListener(event: "finish", listener: Function) : Writable
    +prependListener(event: "pipe", listener: Function) : Writable
    +prependListener(event: "unpipe", listener: Function) : Writable
    +prependListener(event: string | symbol, listener: Function) : Writable
    +prependOnceListener(event: "close", listener: Function) : Writable
    +prependOnceListener(event: "drain", listener: Function) : Writable
    +prependOnceListener(event: "error", listener: Function) : Writable
    +prependOnceListener(event: "finish", listener: Function) : Writable
    +prependOnceListener(event: "pipe", listener: Function) : Writable
    +prependOnceListener(event: "unpipe", listener: Function) : Writable
    +prependOnceListener(event: string | symbol, listener: Function) : Writable
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Writable
    +removeListener(event: "close", listener: Function) : Writable
    +removeListener(event: "drain", listener: Function) : Writable
    +removeListener(event: "error", listener: Function) : Writable
    +removeListener(event: "finish", listener: Function) : Writable
    +removeListener(event: "pipe", listener: Function) : Writable
    +removeListener(event: "unpipe", listener: Function) : Writable
    +removeListener(event: string | symbol, listener: Function) : Writable
    +setDefaultEncoding(encoding: BufferEncoding) : Writable
    +setMaxListeners(n: number) : Writable
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +uncork() : void
    +write(chunk: any, callback: Function) : boolean
    +write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
class "Stream" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +addListener(eventName: string | symbol, listener: Function) : Stream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Stream
    +on(eventName: string | symbol, listener: Function) : Stream
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(eventName: string | symbol, listener: Function) : Stream
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : Stream
    +prependOnceListener(eventName: string | symbol, listener: Function) : Stream
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Stream
    +removeListener(eventName: string | symbol, listener: Function) : Stream
    +setMaxListeners(n: number) : Stream
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
}
"Stream" <|- - "Writable"
interface "WritableStream" {
    +writable : boolean
    +addListener(eventName: string | symbol, listener: Function) : WritableStream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +end(cb: Function) : WritableStream
    +end(data: string | Uint8Array, cb: Function) : WritableStream
    +end(str: string, encoding: BufferEncoding, cb: Function) : WritableStream
    +eventNames() : (string | symbol)[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : WritableStream
    +on(eventName: string | symbol, listener: Function) : WritableStream
    +once(eventName: string | symbol, listener: Function) : WritableStream
    +prependListener(eventName: string | symbol, listener: Function) : WritableStream
    +prependOnceListener(eventName: string | symbol, listener: Function) : WritableStream
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : WritableStream
    +removeListener(eventName: string | symbol, listener: Function) : WritableStream
    +setMaxListeners(n: number) : WritableStream
    +write(buffer: string | Uint8Array, cb: Function) : boolean
    +write(str: string, encoding: BufferEncoding, cb: Function) : boolean
}
"WritableStream" <|.. "Writable"
class "OutgoingMessage" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    +chunkedEncoding : boolean
    +connection : null | Socket
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +finished : boolean
    +headersSent : boolean
    +req : IncomingMessage
    +sendDate : boolean
    +shouldKeepAlive : boolean
    +socket : null | Socket
    +useChunkedEncodingByDefault : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : OutgoingMessage
    +addListener(event: "drain", listener: Function) : OutgoingMessage
    +addListener(event: "error", listener: Function) : OutgoingMessage
    +addListener(event: "finish", listener: Function) : OutgoingMessage
    +addListener(event: "pipe", listener: Function) : OutgoingMessage
    +addListener(event: "unpipe", listener: Function) : OutgoingMessage
    +addListener(event: string | symbol, listener: Function) : OutgoingMessage
    +addTrailers(headers: OutgoingHttpHeaders | readonly [string, string][]) : void
    +cork() : void
    +destroy(error: Error) : OutgoingMessage
    +emit(event: "close") : boolean
    +emit(event: "drain") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "finish") : boolean
    +emit(event: "pipe", src: Readable) : boolean
    +emit(event: "unpipe", src: Readable) : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : OutgoingMessage
    +end(chunk: any, cb: Function) : OutgoingMessage
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : OutgoingMessage
    +eventNames() : (string | symbol)[]
    +flushHeaders() : void
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getHeader(name: string) : undefined | string | number | string[]
    +getHeaderNames() : string[]
    +getHeaders() : OutgoingHttpHeaders
    +getMaxListeners() : number
    +hasHeader(name: string) : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : OutgoingMessage
    +on(event: "close", listener: Function) : OutgoingMessage
    +on(event: "drain", listener: Function) : OutgoingMessage
    +on(event: "error", listener: Function) : OutgoingMessage
    +on(event: "finish", listener: Function) : OutgoingMessage
    +on(event: "pipe", listener: Function) : OutgoingMessage
    +on(event: "unpipe", listener: Function) : OutgoingMessage
    +on(event: string | symbol, listener: Function) : OutgoingMessage
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : OutgoingMessage
    +once(event: "drain", listener: Function) : OutgoingMessage
    +once(event: "error", listener: Function) : OutgoingMessage
    +once(event: "finish", listener: Function) : OutgoingMessage
    +once(event: "pipe", listener: Function) : OutgoingMessage
    +once(event: "unpipe", listener: Function) : OutgoingMessage
    +once(event: string | symbol, listener: Function) : OutgoingMessage
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : OutgoingMessage
    +prependListener(event: "drain", listener: Function) : OutgoingMessage
    +prependListener(event: "error", listener: Function) : OutgoingMessage
    +prependListener(event: "finish", listener: Function) : OutgoingMessage
    +prependListener(event: "pipe", listener: Function) : OutgoingMessage
    +prependListener(event: "unpipe", listener: Function) : OutgoingMessage
    +prependListener(event: string | symbol, listener: Function) : OutgoingMessage
    +prependOnceListener(event: "close", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "drain", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "error", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "finish", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "pipe", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "unpipe", listener: Function) : OutgoingMessage
    +prependOnceListener(event: string | symbol, listener: Function) : OutgoingMessage
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : OutgoingMessage
    +removeHeader(name: string) : void
    +removeListener(event: "close", listener: Function) : OutgoingMessage
    +removeListener(event: "drain", listener: Function) : OutgoingMessage
    +removeListener(event: "error", listener: Function) : OutgoingMessage
    +removeListener(event: "finish", listener: Function) : OutgoingMessage
    +removeListener(event: "pipe", listener: Function) : OutgoingMessage
    +removeListener(event: "unpipe", listener: Function) : OutgoingMessage
    +removeListener(event: string | symbol, listener: Function) : OutgoingMessage
    +setDefaultEncoding(encoding: BufferEncoding) : OutgoingMessage
    +setHeader(name: string, value: string | number | readonly string[]) : OutgoingMessage
    +setMaxListeners(n: number) : OutgoingMessage
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setTimeout(msecs: number, callback: Function) : OutgoingMessage
    +uncork() : void
    +write(chunk: any, callback: Function) : boolean
    +write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Writable" <|- - "OutgoingMessage"
class "Duplex" {
    +allowHalfOpen : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Duplex
    +addListener(event: "data", listener: Function) : Duplex
    +addListener(event: "end", listener: Function) : Duplex
    +addListener(event: "error", listener: Function) : Duplex
    +addListener(event: "pause", listener: Function) : Duplex
    +addListener(event: "readable", listener: Function) : Duplex
    +addListener(event: "resume", listener: Function) : Duplex
    +addListener(event: string | symbol, listener: Function) : Duplex
    +cork() : void
    +destroy(error: Error) : Duplex
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : Duplex
    +end(chunk: any, cb: Function) : Duplex
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : Duplex
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | ArrayBuffer | Blob | Promise<any> | AsyncGeneratorFunction | Stream | Iterable<any> | AsyncIterable<any>) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: Readable | ReadableStream) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Duplex
    +on(event: "close", listener: Function) : Duplex
    +on(event: "data", listener: Function) : Duplex
    +on(event: "end", listener: Function) : Duplex
    +on(event: "error", listener: Function) : Duplex
    +on(event: "pause", listener: Function) : Duplex
    +on(event: "readable", listener: Function) : Duplex
    +on(event: "resume", listener: Function) : Duplex
    +on(event: string | symbol, listener: Function) : Duplex
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Duplex
    +once(event: "data", listener: Function) : Duplex
    +once(event: "end", listener: Function) : Duplex
    +once(event: "error", listener: Function) : Duplex
    +once(event: "pause", listener: Function) : Duplex
    +once(event: "readable", listener: Function) : Duplex
    +once(event: "resume", listener: Function) : Duplex
    +once(event: string | symbol, listener: Function) : Duplex
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Duplex
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Duplex
    +prependListener(event: "data", listener: Function) : Duplex
    +prependListener(event: "end", listener: Function) : Duplex
    +prependListener(event: "error", listener: Function) : Duplex
    +prependListener(event: "pause", listener: Function) : Duplex
    +prependListener(event: "readable", listener: Function) : Duplex
    +prependListener(event: "resume", listener: Function) : Duplex
    +prependListener(event: string | symbol, listener: Function) : Duplex
    +prependOnceListener(event: "close", listener: Function) : Duplex
    +prependOnceListener(event: "data", listener: Function) : Duplex
    +prependOnceListener(event: "end", listener: Function) : Duplex
    +prependOnceListener(event: "error", listener: Function) : Duplex
    +prependOnceListener(event: "pause", listener: Function) : Duplex
    +prependOnceListener(event: "readable", listener: Function) : Duplex
    +prependOnceListener(event: "resume", listener: Function) : Duplex
    +prependOnceListener(event: string | symbol, listener: Function) : Duplex
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Duplex
    +removeListener(event: "close", listener: Function) : Duplex
    +removeListener(event: "data", listener: Function) : Duplex
    +removeListener(event: "end", listener: Function) : Duplex
    +removeListener(event: "error", listener: Function) : Duplex
    +removeListener(event: "pause", listener: Function) : Duplex
    +removeListener(event: "readable", listener: Function) : Duplex
    +removeListener(event: "resume", listener: Function) : Duplex
    +removeListener(event: string | symbol, listener: Function) : Duplex
    +resume() : Duplex
    +setDefaultEncoding(encoding: BufferEncoding) : Duplex
    +setEncoding(encoding: BufferEncoding) : Duplex
    +setMaxListeners(n: number) : Duplex
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +uncork() : void
    +unpipe(destination: WritableStream) : Duplex
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Duplex
    +write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean
    +write(chunk: any, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_read(size: number) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Writable" <|.. "Duplex"
class "Duplex" {
    +allowHalfOpen : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Duplex
    +addListener(event: "data", listener: Function) : Duplex
    +addListener(event: "end", listener: Function) : Duplex
    +addListener(event: "error", listener: Function) : Duplex
    +addListener(event: "pause", listener: Function) : Duplex
    +addListener(event: "readable", listener: Function) : Duplex
    +addListener(event: "resume", listener: Function) : Duplex
    +addListener(event: string | symbol, listener: Function) : Duplex
    +cork() : void
    +destroy(error: Error) : Duplex
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : Duplex
    +end(chunk: any, cb: Function) : Duplex
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : Duplex
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | ArrayBuffer | Blob | Promise<any> | AsyncGeneratorFunction | Stream | Iterable<any> | AsyncIterable<any>) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: Readable | ReadableStream) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Duplex
    +on(event: "close", listener: Function) : Duplex
    +on(event: "data", listener: Function) : Duplex
    +on(event: "end", listener: Function) : Duplex
    +on(event: "error", listener: Function) : Duplex
    +on(event: "pause", listener: Function) : Duplex
    +on(event: "readable", listener: Function) : Duplex
    +on(event: "resume", listener: Function) : Duplex
    +on(event: string | symbol, listener: Function) : Duplex
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Duplex
    +once(event: "data", listener: Function) : Duplex
    +once(event: "end", listener: Function) : Duplex
    +once(event: "error", listener: Function) : Duplex
    +once(event: "pause", listener: Function) : Duplex
    +once(event: "readable", listener: Function) : Duplex
    +once(event: "resume", listener: Function) : Duplex
    +once(event: string | symbol, listener: Function) : Duplex
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Duplex
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Duplex
    +prependListener(event: "data", listener: Function) : Duplex
    +prependListener(event: "end", listener: Function) : Duplex
    +prependListener(event: "error", listener: Function) : Duplex
    +prependListener(event: "pause", listener: Function) : Duplex
    +prependListener(event: "readable", listener: Function) : Duplex
    +prependListener(event: "resume", listener: Function) : Duplex
    +prependListener(event: string | symbol, listener: Function) : Duplex
    +prependOnceListener(event: "close", listener: Function) : Duplex
    +prependOnceListener(event: "data", listener: Function) : Duplex
    +prependOnceListener(event: "end", listener: Function) : Duplex
    +prependOnceListener(event: "error", listener: Function) : Duplex
    +prependOnceListener(event: "pause", listener: Function) : Duplex
    +prependOnceListener(event: "readable", listener: Function) : Duplex
    +prependOnceListener(event: "resume", listener: Function) : Duplex
    +prependOnceListener(event: string | symbol, listener: Function) : Duplex
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Duplex
    +removeListener(event: "close", listener: Function) : Duplex
    +removeListener(event: "data", listener: Function) : Duplex
    +removeListener(event: "end", listener: Function) : Duplex
    +removeListener(event: "error", listener: Function) : Duplex
    +removeListener(event: "pause", listener: Function) : Duplex
    +removeListener(event: "readable", listener: Function) : Duplex
    +removeListener(event: "resume", listener: Function) : Duplex
    +removeListener(event: string | symbol, listener: Function) : Duplex
    +resume() : Duplex
    +setDefaultEncoding(encoding: BufferEncoding) : Duplex
    +setEncoding(encoding: BufferEncoding) : Duplex
    +setMaxListeners(n: number) : Duplex
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +uncork() : void
    +unpipe(destination: WritableStream) : Duplex
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Duplex
    +write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean
    +write(chunk: any, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_read(size: number) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Writable" <|.. "Duplex"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 17:46:50 CET 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>