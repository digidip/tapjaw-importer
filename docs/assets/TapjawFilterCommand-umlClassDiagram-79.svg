<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="298px" preserveAspectRatio="none" style="width:581px;height:298px;background:#00000000;" version="1.1" viewBox="0 0 581 298" width="581px" zoomAndPan="magnify"><defs><filter height="300%" id="f1qsagnd8z1neb" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[786b970dcd9b0356df190a74348f79ec]
class TapjawFilterCommand<T, M>--><rect codeLine="4" fill="#FEFECE" filter="url(#f1qsagnd8z1neb)" height="164.5957" id="TapjawFilterCommand&lt;T, M&gt;" style="stroke:#A80036;stroke-width:1.5;" width="558" x="9" y="120"/><ellipse cx="195.75" cy="136" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M195.6133,131.3481 L194.4595,136.4199 L196.7754,136.4199 Z M194.1191,129.1069 L197.1157,129.1069 L200.4609,141.5 L198.0122,141.5 L197.2485,138.437 L193.9697,138.437 L193.2227,141.5 L190.7739,141.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="176" x="216.25" y="140.5352">TapjawFilterCommand&lt;T, M&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="566" y1="152" y2="152"/><polygon fill="none" points="20,158,24,162,20,166,16,162" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="176" x="29" y="166.6348">displayJsonParseErrors : boolean</text><polygon fill="none" points="20,170.9551,24,174.9551,20,178.9551,16,174.9551" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="29" y="179.5898">stdin : ReadableStream</text><polygon fill="none" points="20,183.9102,24,187.9102,20,191.9102,16,187.9102" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="29" y="192.5449">stdout : WritableStream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="566" y1="198.8652" y2="198.8652"/><ellipse cx="20" cy="209.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="190" x="29" y="213.5">register(program: Command) : void</text><ellipse cx="20" cy="222.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="380" x="29" y="226.4551">run(args: TapjawCommandArgs&lt;unknown&gt;, flags: T) : Promise&lt;void&gt;</text><polygon fill="#FFFF44" points="20,230.7754,24,234.7754,20,238.7754,16,234.7754" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="29" y="239.4102">emit(message: M) : void</text><polygon fill="#FFFF44" points="20,243.7305,24,247.7305,20,251.7305,16,247.7305" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="147" x="29" y="252.3652">getLogger() : TapjawLogger</text><polygon fill="#FFFF44" points="20,256.6855,24,260.6855,20,264.6855,16,260.6855" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="429" x="29" y="265.3203">onBeforeExit(args: TapjawCommandArgs&lt;unknown&gt;, flags: T) : Promise&lt;void&gt;</text><polygon fill="#FFFF44" points="20,269.6406,24,273.6406,20,277.6406,16,273.6406" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="532" x="29" y="278.2754">onMessageFilter(message: M, args: TapjawCommandArgs&lt;unknown&gt;, flags: T) : Promise&lt;null | M&gt;</text><!--MD5=[19bf86b96bfaa3bab18522b2cc172216]
class TapjawCommand--><rect codeLine="15" fill="#FEFECE" filter="url(#f1qsagnd8z1neb)" height="52.9551" id="TapjawCommand" style="stroke:#A80036;stroke-width:1.5;" width="233" x="171.5" y="7"/><ellipse cx="232.75" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M229.1777,19.2651 L229.1777,17.1069 L236.5571,17.1069 L236.5571,19.2651 L234.0918,19.2651 L234.0918,27.3418 L236.5571,27.3418 L236.5571,29.5 L229.1777,29.5 L229.1777,27.3418 L231.6431,27.3418 L231.6431,19.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="102" x="253.25" y="27.5352">TapjawCommand</text><line style="stroke:#A80036;stroke-width:1.5;" x1="172.5" x2="403.5" y1="39" y2="39"/><ellipse cx="182.5" cy="50" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="191.5" y="53.6348">run(args: unknown[]) : Promise&lt;void&gt;</text><!--MD5=[b1948ab38ab3f21155c85993d591f127]
reverse link TapjawCommand to TapjawFilterCommand<T, M>--><path codeLine="18" d="M288,80.41 C288,92.6 288,106.15 288,119.64 " fill="none" id="TapjawCommand-backto-TapjawFilterCommand&lt;T, M&gt;" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="281,80.23,288,60.23,295,80.23,281,80.23" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[d06fd8d6f2f033893c9e608fac59a1c9]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
abstract class "TapjawFilterCommand<T, M>" {
    #displayJsonParseErrors : boolean
    #stdin : ReadableStream
    #stdout : WritableStream
    {static} +register(program: Command) : void
    +run(args: TapjawCommandArgs<unknown>, flags: T) : Promise<void>
    #emit(message: M) : void
    {static} #getLogger() : TapjawLogger
    #onBeforeExit(args: TapjawCommandArgs<unknown>, flags: T) : Promise<void>
    {abstract} #onMessageFilter(message: M, args: TapjawCommandArgs<unknown>, flags: T) : Promise<null | M>
}
interface "TapjawCommand" {
    +run(args: unknown[]) : Promise<void>
}
"TapjawCommand" <|.. "TapjawFilterCommand<T, M>"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>