<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="3424px" preserveAspectRatio="none" style="width:1187px;height:3424px;background:#00000000;" version="1.1" viewBox="0 0 1187 3424" width="1187px" zoomAndPan="magnify"><defs><filter height="300%" id="f1er35dtiu4f05" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[2ae9bde532a65868123a40364e87803a]
class ReadableStream--><rect codeLine="4" fill="#FEFECE" filter="url(#f1er35dtiu4f05)" height="384.832" id="ReadableStream" style="stroke:#A80036;stroke-width:1.5;" width="489" x="610.5" y="301"/><ellipse cx="803.25" cy="317" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M799.6777,313.2651 L799.6777,311.1069 L807.0571,311.1069 L807.0571,313.2651 L804.5918,313.2651 L804.5918,321.3418 L807.0571,321.3418 L807.0571,323.5 L799.6777,323.5 L799.6777,321.3418 L802.1431,321.3418 L802.1431,313.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="95" x="823.75" y="321.5352">ReadableStream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="611.5" x2="1098.5" y1="333" y2="333"/><ellipse cx="621.5" cy="344" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="630.5" y="347.6348">readable : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="611.5" x2="1098.5" y1="353.9551" y2="353.9551"/><ellipse cx="621.5" cy="364.9551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="410" x="630.5" y="368.5898">addListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="621.5" cy="377.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="630.5" y="381.5449">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="621.5" cy="390.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="630.5" y="394.5">eventNames() : (string | symbol)[]</text><ellipse cx="621.5" cy="403.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="630.5" y="407.4551">getMaxListeners() : number</text><ellipse cx="621.5" cy="416.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="630.5" y="420.4102">isPaused() : boolean</text><ellipse cx="621.5" cy="429.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="630.5" y="433.3652">listenerCount(eventName: string | symbol) : number</text><ellipse cx="621.5" cy="442.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="630.5" y="446.3203">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="621.5" cy="455.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="630.5" y="459.2754">off(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="621.5" cy="468.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="630.5" y="472.2305">on(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="621.5" cy="481.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="630.5" y="485.1855">once(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="621.5" cy="494.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="630.5" y="498.1406">pause() : ReadableStream</text><ellipse cx="621.5" cy="507.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="630.5" y="511.0957">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="621.5" cy="520.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="435" x="630.5" y="524.0508">prependListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="621.5" cy="533.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="463" x="630.5" y="537.0059">prependOnceListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="621.5" cy="546.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="630.5" y="549.9609">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="621.5" cy="559.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="630.5" y="562.916">read(size: number) : string | Buffer</text><ellipse cx="621.5" cy="572.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="630.5" y="575.8711">removeAllListeners(event: string | symbol) : ReadableStream</text><ellipse cx="621.5" cy="585.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="430" x="630.5" y="588.8262">removeListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="621.5" cy="598.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="630.5" y="601.7813">resume() : ReadableStream</text><ellipse cx="621.5" cy="611.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="630.5" y="614.7363">setEncoding(encoding: BufferEncoding) : ReadableStream</text><ellipse cx="621.5" cy="624.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="630.5" y="627.6914">setMaxListeners(n: number) : ReadableStream</text><ellipse cx="621.5" cy="637.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="630.5" y="640.6465">unpipe(destination: WritableStream) : ReadableStream</text><ellipse cx="621.5" cy="649.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="630.5" y="653.6016">unshift(chunk: string | Uint8Array, encoding: BufferEncoding) : void</text><ellipse cx="621.5" cy="662.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="630.5" y="666.5566">wrap(oldStream: ReadableStream) : ReadableStream</text><ellipse cx="621.5" cy="675.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="630.5" y="679.5117">[asyncIterator]() : AsyncIterableIterator&lt;string | Buffer&gt;</text><!--MD5=[f00238d7d3b345818710a28959a0e6a6]
class EventEmitter--><rect codeLine="32" fill="#FEFECE" filter="url(#f1er35dtiu4f05)" height="234.3262" id="EventEmitter" style="stroke:#A80036;stroke-width:1.5;" width="471" x="619.5" y="7"/><ellipse cx="814.75" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M811.1777,19.2651 L811.1777,17.1069 L818.5571,17.1069 L818.5571,19.2651 L816.0918,19.2651 L816.0918,27.3418 L818.5571,27.3418 L818.5571,29.5 L811.1777,29.5 L811.1777,27.3418 L813.6431,27.3418 L813.6431,19.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="72" x="835.25" y="27.5352">EventEmitter</text><line style="stroke:#A80036;stroke-width:1.5;" x1="620.5" x2="1089.5" y1="39" y2="39"/><ellipse cx="630.5" cy="50" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="639.5" y="53.6348">addListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="630.5" cy="62.9551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="639.5" y="66.5898">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="630.5" cy="75.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="639.5" y="79.5449">eventNames() : (string | symbol)[]</text><ellipse cx="630.5" cy="88.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="639.5" y="92.5">getMaxListeners() : number</text><ellipse cx="630.5" cy="101.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="639.5" y="105.4551">listenerCount(eventName: string | symbol) : number</text><ellipse cx="630.5" cy="114.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="639.5" y="118.4102">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="630.5" cy="127.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="639.5" y="131.3652">off(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="630.5" cy="140.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="639.5" y="144.3203">on(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="630.5" cy="153.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="639.5" y="157.2754">once(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="630.5" cy="166.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="639.5" y="170.2305">prependListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="630.5" cy="179.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="445" x="639.5" y="183.1855">prependOnceListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="630.5" cy="192.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="639.5" y="196.1406">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="630.5" cy="205.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="639.5" y="209.0957">removeAllListeners(event: string | symbol) : EventEmitter</text><ellipse cx="630.5" cy="218.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="639.5" y="222.0508">removeListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="630.5" cy="231.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="639.5" y="235.0059">setMaxListeners(n: number) : EventEmitter</text><!--MD5=[1a2903b9fb75a1c8b4e28e50cb3fa43a]
class ReadWriteStream--><rect codeLine="50" fill="#FEFECE" filter="url(#f1er35dtiu4f05)" height="462.5625" id="ReadWriteStream" style="stroke:#A80036;stroke-width:1.5;" width="494" x="7" y="1847"/><ellipse cx="200.25" cy="1863" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M196.6777,1859.2651 L196.6777,1857.1069 L204.0571,1857.1069 L204.0571,1859.2651 L201.5918,1859.2651 L201.5918,1867.3418 L204.0571,1867.3418 L204.0571,1869.5 L196.6777,1869.5 L196.6777,1867.3418 L199.1431,1867.3418 L199.1431,1859.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="99" x="220.75" y="1867.5352">ReadWriteStream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="500" y1="1879" y2="1879"/><ellipse cx="18" cy="1890" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="1893.6348">readable : boolean</text><ellipse cx="18" cy="1902.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="1906.5898">writable : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="500" y1="1912.9102" y2="1912.9102"/><ellipse cx="18" cy="1923.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="27" y="1927.5449">addListener(eventName: string | symbol, listener: Function) : ReadWriteStream</text><ellipse cx="18" cy="1936.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="1940.5">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="1949.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="27" y="1953.4551">end(cb: Function) : ReadWriteStream</text><ellipse cx="18" cy="1962.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="27" y="1966.4102">end(data: string | Uint8Array, cb: Function) : ReadWriteStream</text><ellipse cx="18" cy="1975.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="27" y="1979.3652">end(str: string, encoding: BufferEncoding, cb: Function) : ReadWriteStream</text><ellipse cx="18" cy="1988.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="1992.3203">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="2001.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="2005.2754">getMaxListeners() : number</text><ellipse cx="18" cy="2014.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="2018.2305">isPaused() : boolean</text><ellipse cx="18" cy="2027.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="2031.1855">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="2040.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="2044.1406">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="2053.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="2057.0957">off(eventName: string | symbol, listener: Function) : ReadWriteStream</text><ellipse cx="18" cy="2066.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="2070.0508">on(eventName: string | symbol, listener: Function) : ReadWriteStream</text><ellipse cx="18" cy="2079.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="378" x="27" y="2083.0059">once(eventName: string | symbol, listener: Function) : ReadWriteStream</text><ellipse cx="18" cy="2092.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="2095.9609">pause() : ReadWriteStream</text><ellipse cx="18" cy="2105.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="2108.916">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="2118.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="440" x="27" y="2121.8711">prependListener(eventName: string | symbol, listener: Function) : ReadWriteStream</text><ellipse cx="18" cy="2131.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="468" x="27" y="2134.8262">prependOnceListener(eventName: string | symbol, listener: Function) : ReadWriteStream</text><ellipse cx="18" cy="2144.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="2147.7813">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="2157.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="27" y="2160.7363">read(size: number) : string | Buffer</text><ellipse cx="18" cy="2170.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="27" y="2173.6914">removeAllListeners(event: string | symbol) : ReadWriteStream</text><ellipse cx="18" cy="2183.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="435" x="27" y="2186.6465">removeListener(eventName: string | symbol, listener: Function) : ReadWriteStream</text><ellipse cx="18" cy="2195.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="2199.6016">resume() : ReadWriteStream</text><ellipse cx="18" cy="2208.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="311" x="27" y="2212.5566">setEncoding(encoding: BufferEncoding) : ReadWriteStream</text><ellipse cx="18" cy="2221.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="27" y="2225.5117">setMaxListeners(n: number) : ReadWriteStream</text><ellipse cx="18" cy="2234.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="27" y="2238.4668">unpipe(destination: WritableStream) : ReadWriteStream</text><ellipse cx="18" cy="2247.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="27" y="2251.4219">unshift(chunk: string | Uint8Array, encoding: BufferEncoding) : void</text><ellipse cx="18" cy="2260.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="2264.377">wrap(oldStream: ReadableStream) : ReadWriteStream</text><ellipse cx="18" cy="2273.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="2277.332">write(buffer: string | Uint8Array, cb: Function) : boolean</text><ellipse cx="18" cy="2286.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="2290.2871">write(str: string, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="18" cy="2299.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="27" y="2303.2422">[asyncIterator]() : AsyncIterableIterator&lt;string | Buffer&gt;</text><!--MD5=[c367c524f13260ba207946109d621584]
class Readable--><rect codeLine="189" fill="#FEFECE" filter="url(#f1er35dtiu4f05)" height="2664.9258" id="Readable" style="stroke:#A80036;stroke-width:1.5;" width="637" x="536.5" y="746"/><ellipse cx="823.25" cy="762" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M825.7231,768.1431 Q825.1421,768.4419 824.5029,768.5913 Q823.8638,768.7407 823.1582,768.7407 Q820.6514,768.7407 819.3315,767.0889 Q818.0117,765.437 818.0117,762.3159 Q818.0117,759.1865 819.3315,757.5347 Q820.6514,755.8828 823.1582,755.8828 Q823.8638,755.8828 824.5112,756.0322 Q825.1587,756.1816 825.7231,756.4805 L825.7231,759.2031 Q825.0923,758.6221 824.4988,758.3523 Q823.9053,758.0825 823.2744,758.0825 Q821.9297,758.0825 821.2449,759.1492 Q820.5601,760.2158 820.5601,762.3159 Q820.5601,764.4077 821.2449,765.4744 Q821.9297,766.541 823.2744,766.541 Q823.9053,766.541 824.4988,766.2712 Q825.0923,766.0015 825.7231,765.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="55" x="843.75" y="766.5352">Readable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="537.5" x2="1172.5" y1="778" y2="778"/><ellipse cx="547.5" cy="789" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="556.5" y="792.6348">captureRejections : boolean</text><ellipse cx="547.5" cy="801.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="556.5" y="805.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="547.5" cy="814.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="556.5" y="818.5449">defaultMaxListeners : number</text><ellipse cx="547.5" cy="827.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="556.5" y="831.5">destroyed : boolean</text><ellipse cx="547.5" cy="840.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="556.5" y="844.4551">errorMonitor : typeof errorMonitor</text><ellipse cx="547.5" cy="853.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="556.5" y="857.4102">readable : boolean</text><ellipse cx="547.5" cy="866.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="556.5" y="870.3652">readableAborted : boolean</text><ellipse cx="547.5" cy="879.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="556.5" y="883.3203">readableDidRead : boolean</text><ellipse cx="547.5" cy="892.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="556.5" y="896.2754">readableEncoding : null | BufferEncoding</text><ellipse cx="547.5" cy="905.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="556.5" y="909.2305">readableEnded : boolean</text><ellipse cx="547.5" cy="918.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="556.5" y="922.1855">readableFlowing : null | boolean</text><ellipse cx="547.5" cy="931.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="556.5" y="935.1406">readableHighWaterMark : number</text><ellipse cx="547.5" cy="944.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="556.5" y="948.0957">readableLength : number</text><ellipse cx="547.5" cy="957.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="556.5" y="961.0508">readableObjectMode : boolean</text><ellipse cx="547.5" cy="970.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="556.5" y="974.0059">captureRejections : boolean</text><ellipse cx="547.5" cy="983.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="556.5" y="986.9609">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="547.5" cy="996.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="556.5" y="999.916">defaultMaxListeners : number</text><ellipse cx="547.5" cy="1009.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="556.5" y="1012.8711">destroyed : boolean</text><ellipse cx="547.5" cy="1022.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="556.5" y="1025.8262">errorMonitor : typeof errorMonitor</text><ellipse cx="547.5" cy="1035.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="556.5" y="1038.7813">readable : boolean</text><ellipse cx="547.5" cy="1048.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="556.5" y="1051.7363">readableAborted : boolean</text><ellipse cx="547.5" cy="1061.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="556.5" y="1064.6914">readableDidRead : boolean</text><ellipse cx="547.5" cy="1074.0117" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="556.5" y="1077.6465">readableEncoding : null | BufferEncoding</text><ellipse cx="547.5" cy="1086.9668" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="556.5" y="1090.6016">readableEnded : boolean</text><ellipse cx="547.5" cy="1099.9219" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="556.5" y="1103.5566">readableFlowing : null | boolean</text><ellipse cx="547.5" cy="1112.877" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="556.5" y="1116.5117">readableHighWaterMark : number</text><ellipse cx="547.5" cy="1125.832" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="556.5" y="1129.4668">readableLength : number</text><ellipse cx="547.5" cy="1138.7871" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="556.5" y="1142.4219">readableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="537.5" x2="1172.5" y1="1148.7422" y2="1148.7422"/><ellipse cx="547.5" cy="1159.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="556.5" y="1163.377">addListener(event: "close", listener: Function) : Readable</text><ellipse cx="547.5" cy="1172.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="556.5" y="1176.332">addListener(event: "data", listener: Function) : Readable</text><ellipse cx="547.5" cy="1185.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="556.5" y="1189.2871">addListener(event: "end", listener: Function) : Readable</text><ellipse cx="547.5" cy="1198.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="556.5" y="1202.2422">addListener(event: "error", listener: Function) : Readable</text><ellipse cx="547.5" cy="1211.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="556.5" y="1215.1973">addListener(event: "pause", listener: Function) : Readable</text><ellipse cx="547.5" cy="1224.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="556.5" y="1228.1523">addListener(event: "readable", listener: Function) : Readable</text><ellipse cx="547.5" cy="1237.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="556.5" y="1241.1074">addListener(event: "resume", listener: Function) : Readable</text><ellipse cx="547.5" cy="1250.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="556.5" y="1254.0625">addListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="547.5" cy="1263.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="168" x="556.5" y="1267.0176">destroy(error: Error) : Readable</text><ellipse cx="547.5" cy="1276.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="556.5" y="1279.9727">emit(event: "close") : boolean</text><ellipse cx="547.5" cy="1289.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="556.5" y="1292.9277">emit(event: "data", chunk: any) : boolean</text><ellipse cx="547.5" cy="1302.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="556.5" y="1305.8828">emit(event: "end") : boolean</text><ellipse cx="547.5" cy="1315.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="556.5" y="1318.8379">emit(event: "error", err: Error) : boolean</text><ellipse cx="547.5" cy="1328.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="556.5" y="1331.793">emit(event: "pause") : boolean</text><ellipse cx="547.5" cy="1341.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="556.5" y="1344.748">emit(event: "readable") : boolean</text><ellipse cx="547.5" cy="1354.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="556.5" y="1357.7031">emit(event: "resume") : boolean</text><ellipse cx="547.5" cy="1367.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="556.5" y="1370.6582">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="547.5" cy="1379.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="556.5" y="1383.6133">eventNames() : (string | symbol)[]</text><ellipse cx="547.5" cy="1392.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="478" x="556.5" y="1396.5684">from(iterable: Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;, options: ReadableOptions) : Readable</text><ellipse cx="547.5" cy="1405.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="556.5" y="1409.5234">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="547.5" cy="1418.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="556.5" y="1422.4785">getMaxListeners() : number</text><ellipse cx="547.5" cy="1431.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="556.5" y="1435.4336">isDisturbed(stream: Readable | ReadableStream) : boolean</text><ellipse cx="547.5" cy="1444.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="556.5" y="1448.3887">isPaused() : boolean</text><ellipse cx="547.5" cy="1457.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="556.5" y="1461.3438">listenerCount(eventName: string | symbol) : number</text><ellipse cx="547.5" cy="1470.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="556.5" y="1474.2988">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="547.5" cy="1483.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="556.5" y="1487.2539">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="547.5" cy="1496.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="556.5" y="1500.209">off(eventName: string | symbol, listener: Function) : Readable</text><ellipse cx="547.5" cy="1509.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="556.5" y="1513.1641">on(event: "close", listener: Function) : Readable</text><ellipse cx="547.5" cy="1522.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="556.5" y="1526.1191">on(event: "data", listener: Function) : Readable</text><ellipse cx="547.5" cy="1535.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="556.5" y="1539.0742">on(event: "end", listener: Function) : Readable</text><ellipse cx="547.5" cy="1548.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="556.5" y="1552.0293">on(event: "error", listener: Function) : Readable</text><ellipse cx="547.5" cy="1561.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="556.5" y="1564.9844">on(event: "pause", listener: Function) : Readable</text><ellipse cx="547.5" cy="1574.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="556.5" y="1577.9395">on(event: "readable", listener: Function) : Readable</text><ellipse cx="547.5" cy="1587.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="556.5" y="1590.8945">on(event: "resume", listener: Function) : Readable</text><ellipse cx="547.5" cy="1600.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="556.5" y="1603.8496">on(event: string | symbol, listener: Function) : Readable</text><ellipse cx="547.5" cy="1613.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="556.5" y="1616.8047">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="547.5" cy="1626.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="556.5" y="1629.7598">once(event: "close", listener: Function) : Readable</text><ellipse cx="547.5" cy="1639.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="556.5" y="1642.7148">once(event: "data", listener: Function) : Readable</text><ellipse cx="547.5" cy="1652.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="556.5" y="1655.6699">once(event: "end", listener: Function) : Readable</text><ellipse cx="547.5" cy="1664.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="556.5" y="1668.625">once(event: "error", listener: Function) : Readable</text><ellipse cx="547.5" cy="1677.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="556.5" y="1681.5801">once(event: "pause", listener: Function) : Readable</text><ellipse cx="547.5" cy="1690.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="556.5" y="1694.5352">once(event: "readable", listener: Function) : Readable</text><ellipse cx="547.5" cy="1703.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="556.5" y="1707.4902">once(event: "resume", listener: Function) : Readable</text><ellipse cx="547.5" cy="1716.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="556.5" y="1720.4453">once(event: string | symbol, listener: Function) : Readable</text><ellipse cx="547.5" cy="1729.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="556.5" y="1733.4004">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="547.5" cy="1742.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="556.5" y="1746.3555">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="547.5" cy="1755.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="556.5" y="1759.3105">pause() : Readable</text><ellipse cx="547.5" cy="1768.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="556.5" y="1772.2656">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="547.5" cy="1781.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="556.5" y="1785.2207">prependListener(event: "close", listener: Function) : Readable</text><ellipse cx="547.5" cy="1794.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="556.5" y="1798.1758">prependListener(event: "data", listener: Function) : Readable</text><ellipse cx="547.5" cy="1807.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="556.5" y="1811.1309">prependListener(event: "end", listener: Function) : Readable</text><ellipse cx="547.5" cy="1820.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="556.5" y="1824.0859">prependListener(event: "error", listener: Function) : Readable</text><ellipse cx="547.5" cy="1833.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="556.5" y="1837.041">prependListener(event: "pause", listener: Function) : Readable</text><ellipse cx="547.5" cy="1846.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="556.5" y="1849.9961">prependListener(event: "readable", listener: Function) : Readable</text><ellipse cx="547.5" cy="1859.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="556.5" y="1862.9512">prependListener(event: "resume", listener: Function) : Readable</text><ellipse cx="547.5" cy="1872.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="556.5" y="1875.9063">prependListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="547.5" cy="1885.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="556.5" y="1888.8613">prependOnceListener(event: "close", listener: Function) : Readable</text><ellipse cx="547.5" cy="1898.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="556.5" y="1901.8164">prependOnceListener(event: "data", listener: Function) : Readable</text><ellipse cx="547.5" cy="1911.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="556.5" y="1914.7715">prependOnceListener(event: "end", listener: Function) : Readable</text><ellipse cx="547.5" cy="1924.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="556.5" y="1927.7266">prependOnceListener(event: "error", listener: Function) : Readable</text><ellipse cx="547.5" cy="1937.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="556.5" y="1940.6816">prependOnceListener(event: "pause", listener: Function) : Readable</text><ellipse cx="547.5" cy="1950.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="556.5" y="1953.6367">prependOnceListener(event: "readable", listener: Function) : Readable</text><ellipse cx="547.5" cy="1962.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="556.5" y="1966.5918">prependOnceListener(event: "resume", listener: Function) : Readable</text><ellipse cx="547.5" cy="1975.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="556.5" y="1979.5469">prependOnceListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="547.5" cy="1988.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="556.5" y="1992.502">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="547.5" cy="2001.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="556.5" y="2005.457">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="547.5" cy="2014.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="556.5" y="2018.4121">read(size: number) : any</text><ellipse cx="547.5" cy="2027.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="556.5" y="2031.3672">removeAllListeners(event: string | symbol) : Readable</text><ellipse cx="547.5" cy="2040.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="556.5" y="2044.3223">removeListener(event: "close", listener: Function) : Readable</text><ellipse cx="547.5" cy="2053.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="556.5" y="2057.2773">removeListener(event: "data", listener: Function) : Readable</text><ellipse cx="547.5" cy="2066.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="556.5" y="2070.2324">removeListener(event: "end", listener: Function) : Readable</text><ellipse cx="547.5" cy="2079.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="556.5" y="2083.1875">removeListener(event: "error", listener: Function) : Readable</text><ellipse cx="547.5" cy="2092.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="556.5" y="2096.1426">removeListener(event: "pause", listener: Function) : Readable</text><ellipse cx="547.5" cy="2105.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="556.5" y="2109.0977">removeListener(event: "readable", listener: Function) : Readable</text><ellipse cx="547.5" cy="2118.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="556.5" y="2122.0527">removeListener(event: "resume", listener: Function) : Readable</text><ellipse cx="547.5" cy="2131.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="556.5" y="2135.0078">removeListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="547.5" cy="2144.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="556.5" y="2147.9629">resume() : Readable</text><ellipse cx="547.5" cy="2157.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="556.5" y="2160.918">setEncoding(encoding: BufferEncoding) : Readable</text><ellipse cx="547.5" cy="2170.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="556.5" y="2173.873">setMaxListeners(n: number) : Readable</text><ellipse cx="547.5" cy="2183.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="556.5" y="2186.8281">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="547.5" cy="2196.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="556.5" y="2199.7832">unpipe(destination: WritableStream) : Readable</text><ellipse cx="547.5" cy="2209.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="556.5" y="2212.7383">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="547.5" cy="2222.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="556.5" y="2225.6934">wrap(stream: ReadableStream) : Readable</text><ellipse cx="547.5" cy="2235.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="556.5" y="2238.6484">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="547.5" cy="2247.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="556.5" y="2251.6035">_construct(callback: Function) : void</text><ellipse cx="547.5" cy="2260.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="556.5" y="2264.5586">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="547.5" cy="2273.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="556.5" y="2277.5137">_read(size: number) : void</text><ellipse cx="547.5" cy="2286.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="556.5" y="2290.4688">addListener(event: "close", listener: Function) : Readable</text><ellipse cx="547.5" cy="2299.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="556.5" y="2303.4238">addListener(event: "data", listener: Function) : Readable</text><ellipse cx="547.5" cy="2312.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="556.5" y="2316.3789">addListener(event: "end", listener: Function) : Readable</text><ellipse cx="547.5" cy="2325.6992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="556.5" y="2329.334">addListener(event: "error", listener: Function) : Readable</text><ellipse cx="547.5" cy="2338.6543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="556.5" y="2342.2891">addListener(event: "pause", listener: Function) : Readable</text><ellipse cx="547.5" cy="2351.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="556.5" y="2355.2441">addListener(event: "readable", listener: Function) : Readable</text><ellipse cx="547.5" cy="2364.5645" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="556.5" y="2368.1992">addListener(event: "resume", listener: Function) : Readable</text><ellipse cx="547.5" cy="2377.5195" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="556.5" y="2381.1543">addListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="547.5" cy="2390.4746" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="168" x="556.5" y="2394.1094">destroy(error: Error) : Readable</text><ellipse cx="547.5" cy="2403.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="556.5" y="2407.0645">emit(event: "close") : boolean</text><ellipse cx="547.5" cy="2416.3848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="556.5" y="2420.0195">emit(event: "data", chunk: any) : boolean</text><ellipse cx="547.5" cy="2429.3398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="556.5" y="2432.9746">emit(event: "end") : boolean</text><ellipse cx="547.5" cy="2442.2949" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="556.5" y="2445.9297">emit(event: "error", err: Error) : boolean</text><ellipse cx="547.5" cy="2455.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="556.5" y="2458.8848">emit(event: "pause") : boolean</text><ellipse cx="547.5" cy="2468.2051" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="556.5" y="2471.8398">emit(event: "readable") : boolean</text><ellipse cx="547.5" cy="2481.1602" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="556.5" y="2484.7949">emit(event: "resume") : boolean</text><ellipse cx="547.5" cy="2494.1152" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="556.5" y="2497.75">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="547.5" cy="2507.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="556.5" y="2510.7051">eventNames() : (string | symbol)[]</text><ellipse cx="547.5" cy="2520.0254" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="478" x="556.5" y="2523.6602">from(iterable: Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;, options: ReadableOptions) : Readable</text><ellipse cx="547.5" cy="2532.9805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="556.5" y="2536.6152">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="547.5" cy="2545.9355" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="556.5" y="2549.5703">getMaxListeners() : number</text><ellipse cx="547.5" cy="2558.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="556.5" y="2562.5254">isDisturbed(stream: Readable | ReadableStream) : boolean</text><ellipse cx="547.5" cy="2571.8457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="556.5" y="2575.4805">isPaused() : boolean</text><ellipse cx="547.5" cy="2584.8008" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="556.5" y="2588.4355">listenerCount(eventName: string | symbol) : number</text><ellipse cx="547.5" cy="2597.7559" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="556.5" y="2601.3906">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="547.5" cy="2610.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="556.5" y="2614.3457">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="547.5" cy="2623.666" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="556.5" y="2627.3008">off(eventName: string | symbol, listener: Function) : Readable</text><ellipse cx="547.5" cy="2636.6211" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="556.5" y="2640.2559">on(event: "close", listener: Function) : Readable</text><ellipse cx="547.5" cy="2649.5762" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="556.5" y="2653.2109">on(event: "data", listener: Function) : Readable</text><ellipse cx="547.5" cy="2662.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="556.5" y="2666.166">on(event: "end", listener: Function) : Readable</text><ellipse cx="547.5" cy="2675.4863" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="556.5" y="2679.1211">on(event: "error", listener: Function) : Readable</text><ellipse cx="547.5" cy="2688.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="556.5" y="2692.0762">on(event: "pause", listener: Function) : Readable</text><ellipse cx="547.5" cy="2701.3965" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="556.5" y="2705.0313">on(event: "readable", listener: Function) : Readable</text><ellipse cx="547.5" cy="2714.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="556.5" y="2717.9863">on(event: "resume", listener: Function) : Readable</text><ellipse cx="547.5" cy="2727.3066" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="556.5" y="2730.9414">on(event: string | symbol, listener: Function) : Readable</text><ellipse cx="547.5" cy="2740.2617" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="556.5" y="2743.8965">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="547.5" cy="2753.2168" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="556.5" y="2756.8516">once(event: "close", listener: Function) : Readable</text><ellipse cx="547.5" cy="2766.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="556.5" y="2769.8066">once(event: "data", listener: Function) : Readable</text><ellipse cx="547.5" cy="2779.127" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="556.5" y="2782.7617">once(event: "end", listener: Function) : Readable</text><ellipse cx="547.5" cy="2792.082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="556.5" y="2795.7168">once(event: "error", listener: Function) : Readable</text><ellipse cx="547.5" cy="2805.0371" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="556.5" y="2808.6719">once(event: "pause", listener: Function) : Readable</text><ellipse cx="547.5" cy="2817.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="556.5" y="2821.627">once(event: "readable", listener: Function) : Readable</text><ellipse cx="547.5" cy="2830.9473" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="556.5" y="2834.582">once(event: "resume", listener: Function) : Readable</text><ellipse cx="547.5" cy="2843.9023" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="556.5" y="2847.5371">once(event: string | symbol, listener: Function) : Readable</text><ellipse cx="547.5" cy="2856.8574" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="556.5" y="2860.4922">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="547.5" cy="2869.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="556.5" y="2873.4473">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="547.5" cy="2882.7676" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="556.5" y="2886.4023">pause() : Readable</text><ellipse cx="547.5" cy="2895.7227" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="556.5" y="2899.3574">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="547.5" cy="2908.6777" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="556.5" y="2912.3125">prependListener(event: "close", listener: Function) : Readable</text><ellipse cx="547.5" cy="2921.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="556.5" y="2925.2676">prependListener(event: "data", listener: Function) : Readable</text><ellipse cx="547.5" cy="2934.5879" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="556.5" y="2938.2227">prependListener(event: "end", listener: Function) : Readable</text><ellipse cx="547.5" cy="2947.543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="556.5" y="2951.1777">prependListener(event: "error", listener: Function) : Readable</text><ellipse cx="547.5" cy="2960.498" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="556.5" y="2964.1328">prependListener(event: "pause", listener: Function) : Readable</text><ellipse cx="547.5" cy="2973.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="556.5" y="2977.0879">prependListener(event: "readable", listener: Function) : Readable</text><ellipse cx="547.5" cy="2986.4082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="556.5" y="2990.043">prependListener(event: "resume", listener: Function) : Readable</text><ellipse cx="547.5" cy="2999.3633" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="556.5" y="3002.998">prependListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="547.5" cy="3012.3184" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="556.5" y="3015.9531">prependOnceListener(event: "close", listener: Function) : Readable</text><ellipse cx="547.5" cy="3025.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="556.5" y="3028.9082">prependOnceListener(event: "data", listener: Function) : Readable</text><ellipse cx="547.5" cy="3038.2285" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="556.5" y="3041.8633">prependOnceListener(event: "end", listener: Function) : Readable</text><ellipse cx="547.5" cy="3051.1836" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="556.5" y="3054.8184">prependOnceListener(event: "error", listener: Function) : Readable</text><ellipse cx="547.5" cy="3064.1387" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="556.5" y="3067.7734">prependOnceListener(event: "pause", listener: Function) : Readable</text><ellipse cx="547.5" cy="3077.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="556.5" y="3080.7285">prependOnceListener(event: "readable", listener: Function) : Readable</text><ellipse cx="547.5" cy="3090.0488" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="556.5" y="3093.6836">prependOnceListener(event: "resume", listener: Function) : Readable</text><ellipse cx="547.5" cy="3103.0039" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="556.5" y="3106.6387">prependOnceListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="547.5" cy="3115.959" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="556.5" y="3119.5938">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="547.5" cy="3128.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="556.5" y="3132.5488">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="547.5" cy="3141.8691" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="556.5" y="3145.5039">read(size: number) : any</text><ellipse cx="547.5" cy="3154.8242" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="556.5" y="3158.459">removeAllListeners(event: string | symbol) : Readable</text><ellipse cx="547.5" cy="3167.7793" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="556.5" y="3171.4141">removeListener(event: "close", listener: Function) : Readable</text><ellipse cx="547.5" cy="3180.7344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="556.5" y="3184.3691">removeListener(event: "data", listener: Function) : Readable</text><ellipse cx="547.5" cy="3193.6895" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="556.5" y="3197.3242">removeListener(event: "end", listener: Function) : Readable</text><ellipse cx="547.5" cy="3206.6445" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="556.5" y="3210.2793">removeListener(event: "error", listener: Function) : Readable</text><ellipse cx="547.5" cy="3219.5996" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="556.5" y="3223.2344">removeListener(event: "pause", listener: Function) : Readable</text><ellipse cx="547.5" cy="3232.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="556.5" y="3236.1895">removeListener(event: "readable", listener: Function) : Readable</text><ellipse cx="547.5" cy="3245.5098" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="556.5" y="3249.1445">removeListener(event: "resume", listener: Function) : Readable</text><ellipse cx="547.5" cy="3258.4648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="556.5" y="3262.0996">removeListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="547.5" cy="3271.4199" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="556.5" y="3275.0547">resume() : Readable</text><ellipse cx="547.5" cy="3284.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="556.5" y="3288.0098">setEncoding(encoding: BufferEncoding) : Readable</text><ellipse cx="547.5" cy="3297.3301" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="556.5" y="3300.9648">setMaxListeners(n: number) : Readable</text><ellipse cx="547.5" cy="3310.2852" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="556.5" y="3313.9199">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="547.5" cy="3323.2402" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="556.5" y="3326.875">unpipe(destination: WritableStream) : Readable</text><ellipse cx="547.5" cy="3336.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="556.5" y="3339.8301">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="547.5" cy="3349.1504" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="556.5" y="3352.7852">wrap(stream: ReadableStream) : Readable</text><ellipse cx="547.5" cy="3362.1055" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="556.5" y="3365.7402">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="547.5" cy="3375.0605" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="556.5" y="3378.6953">_construct(callback: Function) : void</text><ellipse cx="547.5" cy="3388.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="556.5" y="3391.6504">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="547.5" cy="3400.9707" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="556.5" y="3404.6055">_read(size: number) : void</text><!--MD5=[a30ba3e3142646e7fece0b5aace5adf4]
reverse link EventEmitter to ReadableStream--><path codeLine="49" d="M855,261.13 C855,274.13 855,287.46 855,300.86 " fill="none" id="EventEmitter-backto-ReadableStream" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="848,261.03,855,241.03,862,261.03,848,261.03" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[e267c58f4a564ed1d22dcd0e2c8344ec]
reverse link ReadableStream to ReadWriteStream--><path codeLine="84" d="M595.5,656.11 C566.31,683.12 539.69,713.17 519,746 C304.26,1086.73 258.13,1565.82 251.19,1846.76 " fill="none" id="ReadableStream-backto-ReadWriteStream" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="590.93,650.81,610.5,642.68,600.27,661.24,590.93,650.81" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[4ddf0d38953a435f3cf6ce8f62a2e10b]
reverse link ReadableStream to Readable--><path codeLine="188" d="M845.98,706.49 C845.77,719.19 845.57,732.33 845.38,745.87 " fill="none" id="ReadableStream-backto-Readable" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="838.98,706.11,846.33,686.23,852.98,706.35,838.98,706.11" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[4ddf0d38953a435f3cf6ce8f62a2e10b]
reverse link ReadableStream to Readable--><path codeLine="292" d="M864.55,706.49 C864.77,719.19 864.98,732.33 865.19,745.87 " fill="none" id="ReadableStream-backto-Readable-1" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="857.55,706.36,864.18,686.23,871.55,706.1,857.55,706.36" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[9a5c0d5e82af6a0cab51346ef48a43ff]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
interface "ReadableStream" {
    +readable : boolean
    +addListener(eventName: string | symbol, listener: Function) : ReadableStream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    +getMaxListeners() : number
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : ReadableStream
    +on(eventName: string | symbol, listener: Function) : ReadableStream
    +once(eventName: string | symbol, listener: Function) : ReadableStream
    +pause() : ReadableStream
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : ReadableStream
    +prependOnceListener(eventName: string | symbol, listener: Function) : ReadableStream
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : string | Buffer
    +removeAllListeners(event: string | symbol) : ReadableStream
    +removeListener(eventName: string | symbol, listener: Function) : ReadableStream
    +resume() : ReadableStream
    +setEncoding(encoding: BufferEncoding) : ReadableStream
    +setMaxListeners(n: number) : ReadableStream
    +unpipe(destination: WritableStream) : ReadableStream
    +unshift(chunk: string | Uint8Array, encoding: BufferEncoding) : void
    +wrap(oldStream: ReadableStream) : ReadableStream
    +[asyncIterator]() : AsyncIterableIterator<string | Buffer>
}
interface "EventEmitter" {
    +addListener(eventName: string | symbol, listener: Function) : EventEmitter
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : EventEmitter
    +on(eventName: string | symbol, listener: Function) : EventEmitter
    +once(eventName: string | symbol, listener: Function) : EventEmitter
    +prependListener(eventName: string | symbol, listener: Function) : EventEmitter
    +prependOnceListener(eventName: string | symbol, listener: Function) : EventEmitter
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : EventEmitter
    +removeListener(eventName: string | symbol, listener: Function) : EventEmitter
    +setMaxListeners(n: number) : EventEmitter
}
"EventEmitter" <|- - "ReadableStream"
interface "ReadWriteStream" {
    +readable : boolean
    +writable : boolean
    +addListener(eventName: string | symbol, listener: Function) : ReadWriteStream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +end(cb: Function) : ReadWriteStream
    +end(data: string | Uint8Array, cb: Function) : ReadWriteStream
    +end(str: string, encoding: BufferEncoding, cb: Function) : ReadWriteStream
    +eventNames() : (string | symbol)[]
    +getMaxListeners() : number
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : ReadWriteStream
    +on(eventName: string | symbol, listener: Function) : ReadWriteStream
    +once(eventName: string | symbol, listener: Function) : ReadWriteStream
    +pause() : ReadWriteStream
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : ReadWriteStream
    +prependOnceListener(eventName: string | symbol, listener: Function) : ReadWriteStream
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : string | Buffer
    +removeAllListeners(event: string | symbol) : ReadWriteStream
    +removeListener(eventName: string | symbol, listener: Function) : ReadWriteStream
    +resume() : ReadWriteStream
    +setEncoding(encoding: BufferEncoding) : ReadWriteStream
    +setMaxListeners(n: number) : ReadWriteStream
    +unpipe(destination: WritableStream) : ReadWriteStream
    +unshift(chunk: string | Uint8Array, encoding: BufferEncoding) : void
    +wrap(oldStream: ReadableStream) : ReadWriteStream
    +write(buffer: string | Uint8Array, cb: Function) : boolean
    +write(str: string, encoding: BufferEncoding, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<string | Buffer>
}
"ReadableStream" <|- - "ReadWriteStream"
class "Readable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Readable
    +addListener(event: "data", listener: Function) : Readable
    +addListener(event: "end", listener: Function) : Readable
    +addListener(event: "error", listener: Function) : Readable
    +addListener(event: "pause", listener: Function) : Readable
    +addListener(event: "readable", listener: Function) : Readable
    +addListener(event: "resume", listener: Function) : Readable
    +addListener(event: string | symbol, listener: Function) : Readable
    +destroy(error: Error) : Readable
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +from(iterable: Iterable<any> | AsyncIterable<any>, options: ReadableOptions) : Readable
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: Readable | ReadableStream) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Readable
    +on(event: "close", listener: Function) : Readable
    +on(event: "data", listener: Function) : Readable
    +on(event: "end", listener: Function) : Readable
    +on(event: "error", listener: Function) : Readable
    +on(event: "pause", listener: Function) : Readable
    +on(event: "readable", listener: Function) : Readable
    +on(event: "resume", listener: Function) : Readable
    +on(event: string | symbol, listener: Function) : Readable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Readable
    +once(event: "data", listener: Function) : Readable
    +once(event: "end", listener: Function) : Readable
    +once(event: "error", listener: Function) : Readable
    +once(event: "pause", listener: Function) : Readable
    +once(event: "readable", listener: Function) : Readable
    +once(event: "resume", listener: Function) : Readable
    +once(event: string | symbol, listener: Function) : Readable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Readable
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Readable
    +prependListener(event: "data", listener: Function) : Readable
    +prependListener(event: "end", listener: Function) : Readable
    +prependListener(event: "error", listener: Function) : Readable
    +prependListener(event: "pause", listener: Function) : Readable
    +prependListener(event: "readable", listener: Function) : Readable
    +prependListener(event: "resume", listener: Function) : Readable
    +prependListener(event: string | symbol, listener: Function) : Readable
    +prependOnceListener(event: "close", listener: Function) : Readable
    +prependOnceListener(event: "data", listener: Function) : Readable
    +prependOnceListener(event: "end", listener: Function) : Readable
    +prependOnceListener(event: "error", listener: Function) : Readable
    +prependOnceListener(event: "pause", listener: Function) : Readable
    +prependOnceListener(event: "readable", listener: Function) : Readable
    +prependOnceListener(event: "resume", listener: Function) : Readable
    +prependOnceListener(event: string | symbol, listener: Function) : Readable
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Readable
    +removeListener(event: "close", listener: Function) : Readable
    +removeListener(event: "data", listener: Function) : Readable
    +removeListener(event: "end", listener: Function) : Readable
    +removeListener(event: "error", listener: Function) : Readable
    +removeListener(event: "pause", listener: Function) : Readable
    +removeListener(event: "readable", listener: Function) : Readable
    +removeListener(event: "resume", listener: Function) : Readable
    +removeListener(event: string | symbol, listener: Function) : Readable
    +resume() : Readable
    +setEncoding(encoding: BufferEncoding) : Readable
    +setMaxListeners(n: number) : Readable
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +unpipe(destination: WritableStream) : Readable
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Readable
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_read(size: number) : void
}
"ReadableStream" <|.. "Readable"
class "Readable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Readable
    +addListener(event: "data", listener: Function) : Readable
    +addListener(event: "end", listener: Function) : Readable
    +addListener(event: "error", listener: Function) : Readable
    +addListener(event: "pause", listener: Function) : Readable
    +addListener(event: "readable", listener: Function) : Readable
    +addListener(event: "resume", listener: Function) : Readable
    +addListener(event: string | symbol, listener: Function) : Readable
    +destroy(error: Error) : Readable
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +from(iterable: Iterable<any> | AsyncIterable<any>, options: ReadableOptions) : Readable
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: Readable | ReadableStream) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Readable
    +on(event: "close", listener: Function) : Readable
    +on(event: "data", listener: Function) : Readable
    +on(event: "end", listener: Function) : Readable
    +on(event: "error", listener: Function) : Readable
    +on(event: "pause", listener: Function) : Readable
    +on(event: "readable", listener: Function) : Readable
    +on(event: "resume", listener: Function) : Readable
    +on(event: string | symbol, listener: Function) : Readable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Readable
    +once(event: "data", listener: Function) : Readable
    +once(event: "end", listener: Function) : Readable
    +once(event: "error", listener: Function) : Readable
    +once(event: "pause", listener: Function) : Readable
    +once(event: "readable", listener: Function) : Readable
    +once(event: "resume", listener: Function) : Readable
    +once(event: string | symbol, listener: Function) : Readable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Readable
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Readable
    +prependListener(event: "data", listener: Function) : Readable
    +prependListener(event: "end", listener: Function) : Readable
    +prependListener(event: "error", listener: Function) : Readable
    +prependListener(event: "pause", listener: Function) : Readable
    +prependListener(event: "readable", listener: Function) : Readable
    +prependListener(event: "resume", listener: Function) : Readable
    +prependListener(event: string | symbol, listener: Function) : Readable
    +prependOnceListener(event: "close", listener: Function) : Readable
    +prependOnceListener(event: "data", listener: Function) : Readable
    +prependOnceListener(event: "end", listener: Function) : Readable
    +prependOnceListener(event: "error", listener: Function) : Readable
    +prependOnceListener(event: "pause", listener: Function) : Readable
    +prependOnceListener(event: "readable", listener: Function) : Readable
    +prependOnceListener(event: "resume", listener: Function) : Readable
    +prependOnceListener(event: string | symbol, listener: Function) : Readable
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Readable
    +removeListener(event: "close", listener: Function) : Readable
    +removeListener(event: "data", listener: Function) : Readable
    +removeListener(event: "end", listener: Function) : Readable
    +removeListener(event: "error", listener: Function) : Readable
    +removeListener(event: "pause", listener: Function) : Readable
    +removeListener(event: "readable", listener: Function) : Readable
    +removeListener(event: "resume", listener: Function) : Readable
    +removeListener(event: string | symbol, listener: Function) : Readable
    +resume() : Readable
    +setEncoding(encoding: BufferEncoding) : Readable
    +setMaxListeners(n: number) : Readable
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +unpipe(destination: WritableStream) : Readable
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Readable
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_read(size: number) : void
}
"ReadableStream" <|.. "Readable"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 17:46:50 CET 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>