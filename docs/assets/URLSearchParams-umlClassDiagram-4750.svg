<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="342px" preserveAspectRatio="none" style="width:354px;height:342px;background:#00000000;" version="1.1" viewBox="0 0 354 342" width="354px" zoomAndPan="magnify"><defs><filter height="300%" id="f1xgxvmepy79gk" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[d6f581b69c3032a101f24196af93f43f]
class URLSearchParams--><rect codeLine="4" fill="#FEFECE" filter="url(#f1xgxvmepy79gk)" height="208.416" id="URLSearchParams" style="stroke:#A80036;stroke-width:1.5;" width="333" x="7" y="120"/><ellipse cx="117.75" cy="136" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M120.2231,142.1431 Q119.6421,142.4419 119.0029,142.5913 Q118.3638,142.7407 117.6582,142.7407 Q115.1514,142.7407 113.8315,141.0889 Q112.5117,139.437 112.5117,136.3159 Q112.5117,133.1865 113.8315,131.5347 Q115.1514,129.8828 117.6582,129.8828 Q118.3638,129.8828 119.0112,130.0322 Q119.6587,130.1816 120.2231,130.4805 L120.2231,133.2031 Q119.5923,132.6221 118.9988,132.3523 Q118.4053,132.0825 117.7744,132.0825 Q116.4297,132.0825 115.7449,133.1492 Q115.0601,134.2158 115.0601,136.3159 Q115.0601,138.4077 115.7449,139.4744 Q116.4297,140.541 117.7744,140.541 Q118.4053,140.541 118.9988,140.2712 Q119.5923,140.0015 120.2231,139.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="103" x="138.25" y="140.5352">URLSearchParams</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="339" y1="152" y2="152"/><ellipse cx="18" cy="163" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="27" y="166.6348">append(name: string, value: string) : void</text><ellipse cx="18" cy="175.9551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="179.5898">delete(name: string) : void</text><ellipse cx="18" cy="188.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="230" x="27" y="192.5449">entries() : IterableIterator&lt;[string, string]&gt;</text><ellipse cx="18" cy="201.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="27" y="205.5">forEach&lt;TThis&gt;(callback: Function, thisArg: TThis) : void</text><ellipse cx="18" cy="214.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="27" y="218.4551">get(name: string) : null | string</text><ellipse cx="18" cy="227.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="27" y="231.4102">getAll(name: string) : string[]</text><ellipse cx="18" cy="240.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="244.3652">has(name: string) : boolean</text><ellipse cx="18" cy="253.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="171" x="27" y="257.3203">keys() : IterableIterator&lt;string&gt;</text><ellipse cx="18" cy="266.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="27" y="270.2754">set(name: string, value: string) : void</text><ellipse cx="18" cy="279.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="27" y="283.2305">sort() : void</text><ellipse cx="18" cy="292.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="27" y="296.1855">toString() : string</text><ellipse cx="18" cy="305.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="27" y="309.1406">values() : IterableIterator&lt;string&gt;</text><ellipse cx="18" cy="318.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="27" y="322.0957">[iterator]() : IterableIterator&lt;[string, string]&gt;</text><!--MD5=[d0a5d2d9322be250528928234857c410]
class Iterable<[string, string]>--><rect codeLine="19" fill="#FEFECE" filter="url(#f1xgxvmepy79gk)" height="52.9551" id="Iterable&lt;[string, string]&gt;" style="stroke:#A80036;stroke-width:1.5;" width="312" x="17.5" y="7"/><ellipse cx="97.25" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M93.6777,19.2651 L93.6777,17.1069 L101.0571,17.1069 L101.0571,19.2651 L98.5918,19.2651 L98.5918,27.3418 L101.0571,27.3418 L101.0571,29.5 L93.6777,29.5 L93.6777,27.3418 L96.1431,27.3418 L96.1431,19.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="144" x="117.75" y="27.5352">Iterable&lt;[string, string]&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="18.5" x2="328.5" y1="39" y2="39"/><ellipse cx="28.5" cy="50" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="37.5" y="53.6348">[iterator]() : Iterator&lt;[string, string], any, undefined&gt;</text><!--MD5=[cb84b7465ce33b83332de613bbf68d66]
reverse link Iterable<[string, string]> to URLSearchParams--><path codeLine="22" d="M173.5,80.68 C173.5,92.64 173.5,106.02 173.5,119.66 " fill="none" id="Iterable&lt;[string, string]&gt;-backto-URLSearchParams" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="166.5,80.31,173.5,60.31,180.5,80.31,166.5,80.31" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[43692416dd3553703e6b611e7be3d409]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "URLSearchParams" {
    +append(name: string, value: string) : void
    +delete(name: string) : void
    +entries() : IterableIterator<[string, string]>
    +forEach<TThis>(callback: Function, thisArg: TThis) : void
    +get(name: string) : null | string
    +getAll(name: string) : string[]
    +has(name: string) : boolean
    +keys() : IterableIterator<string>
    +set(name: string, value: string) : void
    +sort() : void
    +toString() : string
    +values() : IterableIterator<string>
    +[iterator]() : IterableIterator<[string, string]>
}
interface "Iterable<[string, string]>" {
    +[iterator]() : Iterator<[string, string], any, undefined>
}
"Iterable<[string, string]>" <|.. "URLSearchParams"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 17:46:50 CET 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>