<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1031px" preserveAspectRatio="none" style="width:1029px;height:1031px;background:#00000000;" version="1.1" viewBox="0 0 1029 1031" width="1029px" zoomAndPan="magnify"><defs><filter height="300%" id="f7ipatjyhslan" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[f00238d7d3b345818710a28959a0e6a6]
class EventEmitter--><rect codeLine="74" fill="#FEFECE" filter="url(#f7ipatjyhslan)" height="566.2031" id="EventEmitter" style="stroke:#A80036;stroke-width:1.5;" width="637" x="194" y="7"/><ellipse cx="472.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M474.7231,29.1431 Q474.1421,29.4419 473.5029,29.5913 Q472.8638,29.7407 472.1582,29.7407 Q469.6514,29.7407 468.3315,28.0889 Q467.0117,26.437 467.0117,23.3159 Q467.0117,20.1865 468.3315,18.5347 Q469.6514,16.8828 472.1582,16.8828 Q472.8638,16.8828 473.5112,17.0322 Q474.1587,17.1816 474.7231,17.4805 L474.7231,20.2031 Q474.0923,19.6221 473.4988,19.3523 Q472.9053,19.0825 472.2744,19.0825 Q470.9297,19.0825 470.2449,20.1492 Q469.5601,21.2158 469.5601,23.3159 Q469.5601,25.4077 470.2449,26.4744 Q470.9297,27.541 472.2744,27.541 Q472.9053,27.541 473.4988,27.2712 Q474.0923,27.0015 474.7231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="72" x="492.75" y="27.5352">EventEmitter</text><line style="stroke:#A80036;stroke-width:1.5;" x1="195" x2="830" y1="39" y2="39"/><ellipse cx="205" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="214" y="53.6348">captureRejections : boolean</text><ellipse cx="205" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="214" y="66.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="205" cy="75.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="214" y="79.5449">defaultMaxListeners : number</text><ellipse cx="205" cy="88.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="214" y="92.5">errorMonitor : typeof errorMonitor</text><line style="stroke:#A80036;stroke-width:1.5;" x1="195" x2="830" y1="98.8203" y2="98.8203"/><ellipse cx="205" cy="109.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="214" y="113.4551">addListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="205" cy="122.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="214" y="126.4102">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="205" cy="135.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="214" y="139.3652">eventNames() : (string | symbol)[]</text><ellipse cx="205" cy="148.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="214" y="152.3203">getMaxListeners() : number</text><ellipse cx="205" cy="161.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="214" y="165.2754">listenerCount(eventName: string | symbol) : number</text><ellipse cx="205" cy="174.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="214" y="178.2305">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="205" cy="187.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="214" y="191.1855">off(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="205" cy="200.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="214" y="204.1406">on(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="205" cy="213.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="214" y="217.0957">once(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="205" cy="226.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="214" y="230.0508">prependListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="205" cy="239.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="445" x="214" y="243.0059">prependOnceListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="205" cy="252.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="214" y="255.9609">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="205" cy="265.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="214" y="268.916">removeAllListeners(event: string | symbol) : EventEmitter</text><ellipse cx="205" cy="278.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="214" y="281.8711">removeListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="205" cy="291.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="214" y="294.8262">setMaxListeners(n: number) : EventEmitter</text><ellipse cx="205" cy="304.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="214" y="307.7813">addListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="205" cy="317.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="214" y="320.7363">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="205" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="214" y="333.6914">eventNames() : (string | symbol)[]</text><ellipse cx="205" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="214" y="346.6465">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="205" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="214" y="359.6016">getMaxListeners() : number</text><ellipse cx="205" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="214" y="372.5566">listenerCount(eventName: string | symbol) : number</text><ellipse cx="205" cy="381.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="214" y="385.5117">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="205" cy="394.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="214" y="398.4668">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="205" cy="407.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="214" y="411.4219">off(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="205" cy="420.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="214" y="424.377">on(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="205" cy="433.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="214" y="437.332">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="205" cy="446.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="214" y="450.2871">once(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="205" cy="459.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="214" y="463.2422">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="205" cy="472.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="214" y="476.1973">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="205" cy="485.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="214" y="489.1523">prependListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="205" cy="498.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="445" x="214" y="502.1074">prependOnceListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="205" cy="511.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="214" y="515.0625">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="205" cy="524.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="214" y="528.0176">removeAllListeners(event: string | symbol) : EventEmitter</text><ellipse cx="205" cy="537.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="214" y="540.9727">removeListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="205" cy="550.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="214" y="553.9277">setMaxListeners(n: number) : EventEmitter</text><ellipse cx="205" cy="563.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="214" y="566.8828">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><!--MD5=[2ae9bde532a65868123a40364e87803a]
class ReadableStream--><rect codeLine="21" fill="#FEFECE" filter="url(#f7ipatjyhslan)" height="384.832" id="ReadableStream" style="stroke:#A80036;stroke-width:1.5;" width="489" x="7" y="633"/><ellipse cx="199.75" cy="649" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M196.1777,645.2651 L196.1777,643.1069 L203.5571,643.1069 L203.5571,645.2651 L201.0918,645.2651 L201.0918,653.3418 L203.5571,653.3418 L203.5571,655.5 L196.1777,655.5 L196.1777,653.3418 L198.6431,653.3418 L198.6431,645.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="95" x="220.25" y="653.5352">ReadableStream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="495" y1="665" y2="665"/><ellipse cx="18" cy="676" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="679.6348">readable : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="495" y1="685.9551" y2="685.9551"/><ellipse cx="18" cy="696.9551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="410" x="27" y="700.5898">addListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="18" cy="709.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="713.5449">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="722.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="726.5">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="735.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="739.4551">getMaxListeners() : number</text><ellipse cx="18" cy="748.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="752.4102">isPaused() : boolean</text><ellipse cx="18" cy="761.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="765.3652">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="774.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="778.3203">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="787.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="27" y="791.2754">off(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="18" cy="800.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="27" y="804.2305">on(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="18" cy="813.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="27" y="817.1855">once(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="18" cy="826.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="830.1406">pause() : ReadableStream</text><ellipse cx="18" cy="839.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="843.0957">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="852.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="435" x="27" y="856.0508">prependListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="18" cy="865.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="463" x="27" y="869.0059">prependOnceListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="18" cy="878.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="881.9609">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="891.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="27" y="894.916">read(size: number) : string | Buffer</text><ellipse cx="18" cy="904.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="27" y="907.8711">removeAllListeners(event: string | symbol) : ReadableStream</text><ellipse cx="18" cy="917.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="430" x="27" y="920.8262">removeListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="18" cy="930.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="933.7813">resume() : ReadableStream</text><ellipse cx="18" cy="943.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="27" y="946.7363">setEncoding(encoding: BufferEncoding) : ReadableStream</text><ellipse cx="18" cy="956.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="27" y="959.6914">setMaxListeners(n: number) : ReadableStream</text><ellipse cx="18" cy="969.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="27" y="972.6465">unpipe(destination: WritableStream) : ReadableStream</text><ellipse cx="18" cy="981.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="27" y="985.6016">unshift(chunk: string | Uint8Array, encoding: BufferEncoding) : void</text><ellipse cx="18" cy="994.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="27" y="998.5566">wrap(oldStream: ReadableStream) : ReadableStream</text><ellipse cx="18" cy="1007.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="27" y="1011.5117">[asyncIterator]() : AsyncIterableIterator&lt;string | Buffer&gt;</text><!--MD5=[75295b061bf85356a312df551dda4666]
class WritableStream--><rect codeLine="50" fill="#FEFECE" filter="url(#f7ipatjyhslan)" height="320.0566" id="WritableStream" style="stroke:#A80036;stroke-width:1.5;" width="484" x="531.5" y="665.5"/><ellipse cx="725.75" cy="681.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M722.1777,677.7651 L722.1777,675.6069 L729.5571,675.6069 L729.5571,677.7651 L727.0918,677.7651 L727.0918,685.8418 L729.5571,685.8418 L729.5571,688 L722.1777,688 L722.1777,685.8418 L724.6431,685.8418 L724.6431,677.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="87" x="746.25" y="686.0352">WritableStream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="532.5" x2="1014.5" y1="697.5" y2="697.5"/><ellipse cx="542.5" cy="708.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="551.5" y="712.1348">writable : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="532.5" x2="1014.5" y1="718.4551" y2="718.4551"/><ellipse cx="542.5" cy="729.4551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="551.5" y="733.0898">addListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="542.5" cy="742.4102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="551.5" y="746.0449">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="542.5" cy="755.3652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="551.5" y="759">end(cb: Function) : WritableStream</text><ellipse cx="542.5" cy="768.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="551.5" y="771.9551">end(data: string | Uint8Array, cb: Function) : WritableStream</text><ellipse cx="542.5" cy="781.2754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="551.5" y="784.9102">end(str: string, encoding: BufferEncoding, cb: Function) : WritableStream</text><ellipse cx="542.5" cy="794.2305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="551.5" y="797.8652">eventNames() : (string | symbol)[]</text><ellipse cx="542.5" cy="807.1855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="551.5" y="810.8203">getMaxListeners() : number</text><ellipse cx="542.5" cy="820.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="551.5" y="823.7754">listenerCount(eventName: string | symbol) : number</text><ellipse cx="542.5" cy="833.0957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="551.5" y="836.7305">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="542.5" cy="846.0508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="551.5" y="849.6855">off(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="542.5" cy="859.0059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="551.5" y="862.6406">on(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="542.5" cy="871.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="551.5" y="875.5957">once(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="542.5" cy="884.916" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="430" x="551.5" y="888.5508">prependListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="542.5" cy="897.8711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="458" x="551.5" y="901.5059">prependOnceListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="542.5" cy="910.8262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="551.5" y="914.4609">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="542.5" cy="923.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="551.5" y="927.416">removeAllListeners(event: string | symbol) : WritableStream</text><ellipse cx="542.5" cy="936.7363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="425" x="551.5" y="940.3711">removeListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="542.5" cy="949.6914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="551.5" y="953.3262">setMaxListeners(n: number) : WritableStream</text><ellipse cx="542.5" cy="962.6465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="551.5" y="966.2813">write(buffer: string | Uint8Array, cb: Function) : boolean</text><ellipse cx="542.5" cy="975.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="551.5" y="979.2363">write(str: string, encoding: BufferEncoding, cb: Function) : boolean</text><!--MD5=[a30ba3e3142646e7fece0b5aace5adf4]
reverse link EventEmitter to ReadableStream--><path codeLine="49" d="M365.38,591.72 C358.58,605.63 351.83,619.41 345.23,632.92 " fill="none" id="EventEmitter-backto-ReadableStream" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="359.28,588.26,374.36,573.37,371.86,594.41,359.28,588.26" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[162ae76787cddf20fcec29d21c2d6ca3]
reverse link EventEmitter to WritableStream--><path codeLine="73" d="M659.47,591.41 C671.86,616.73 684.04,641.64 695.57,665.21 " fill="none" id="EventEmitter-backto-WritableStream" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="653.14,594.41,650.64,573.37,665.72,588.26,653.14,594.41" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[4345fef6b526639e90ac916bded00af7]
reverse link EventEmitter to EventEmitter--><path codeLine="101" d="M845.76,231.6 C858.6,246.87 866,266.34 866,290 C866,321.55 852.84,345.64 831.18,362.28 " fill="none" id="EventEmitter-backto-EventEmitter" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="840.84,236.58,831.18,217.72,850.49,226.44,840.84,236.58" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[da036d12fe65664eaeac2dc9dfa3909f]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
interface "EventEmitter" {
    +addListener(eventName: string | symbol, listener: Function) : EventEmitter
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : EventEmitter
    +on(eventName: string | symbol, listener: Function) : EventEmitter
    +once(eventName: string | symbol, listener: Function) : EventEmitter
    +prependListener(eventName: string | symbol, listener: Function) : EventEmitter
    +prependOnceListener(eventName: string | symbol, listener: Function) : EventEmitter
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : EventEmitter
    +removeListener(eventName: string | symbol, listener: Function) : EventEmitter
    +setMaxListeners(n: number) : EventEmitter
}
interface "ReadableStream" {
    +readable : boolean
    +addListener(eventName: string | symbol, listener: Function) : ReadableStream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    +getMaxListeners() : number
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : ReadableStream
    +on(eventName: string | symbol, listener: Function) : ReadableStream
    +once(eventName: string | symbol, listener: Function) : ReadableStream
    +pause() : ReadableStream
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : ReadableStream
    +prependOnceListener(eventName: string | symbol, listener: Function) : ReadableStream
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : string | Buffer
    +removeAllListeners(event: string | symbol) : ReadableStream
    +removeListener(eventName: string | symbol, listener: Function) : ReadableStream
    +resume() : ReadableStream
    +setEncoding(encoding: BufferEncoding) : ReadableStream
    +setMaxListeners(n: number) : ReadableStream
    +unpipe(destination: WritableStream) : ReadableStream
    +unshift(chunk: string | Uint8Array, encoding: BufferEncoding) : void
    +wrap(oldStream: ReadableStream) : ReadableStream
    +[asyncIterator]() : AsyncIterableIterator<string | Buffer>
}
"EventEmitter" <|- - "ReadableStream"
interface "WritableStream" {
    +writable : boolean
    +addListener(eventName: string | symbol, listener: Function) : WritableStream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +end(cb: Function) : WritableStream
    +end(data: string | Uint8Array, cb: Function) : WritableStream
    +end(str: string, encoding: BufferEncoding, cb: Function) : WritableStream
    +eventNames() : (string | symbol)[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : WritableStream
    +on(eventName: string | symbol, listener: Function) : WritableStream
    +once(eventName: string | symbol, listener: Function) : WritableStream
    +prependListener(eventName: string | symbol, listener: Function) : WritableStream
    +prependOnceListener(eventName: string | symbol, listener: Function) : WritableStream
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : WritableStream
    +removeListener(eventName: string | symbol, listener: Function) : WritableStream
    +setMaxListeners(n: number) : WritableStream
    +write(buffer: string | Uint8Array, cb: Function) : boolean
    +write(str: string, encoding: BufferEncoding, cb: Function) : boolean
}
"EventEmitter" <|- - "WritableStream"
class "EventEmitter" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +addListener(eventName: string | symbol, listener: Function) : EventEmitter
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : EventEmitter
    +on(eventName: string | symbol, listener: Function) : EventEmitter
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(eventName: string | symbol, listener: Function) : EventEmitter
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : EventEmitter
    +prependOnceListener(eventName: string | symbol, listener: Function) : EventEmitter
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : EventEmitter
    +removeListener(eventName: string | symbol, listener: Function) : EventEmitter
    +setMaxListeners(n: number) : EventEmitter
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
}
"EventEmitter" <|- - "EventEmitter"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>