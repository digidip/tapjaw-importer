<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="3049px" preserveAspectRatio="none" style="width:1187px;height:3049px;background:#00000000;" version="1.1" viewBox="0 0 1187 3049" width="1187px" zoomAndPan="magnify"><defs><filter height="300%" id="f15zumwz799bi2" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[75295b061bf85356a312df551dda4666]
class WritableStream--><rect codeLine="4" fill="#FEFECE" filter="url(#f15zumwz799bi2)" height="320.0566" id="WritableStream" style="stroke:#A80036;stroke-width:1.5;" width="484" x="613" y="301"/><ellipse cx="807.25" cy="317" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M803.6777,313.2651 L803.6777,311.1069 L811.0571,311.1069 L811.0571,313.2651 L808.5918,313.2651 L808.5918,321.3418 L811.0571,321.3418 L811.0571,323.5 L803.6777,323.5 L803.6777,321.3418 L806.1431,321.3418 L806.1431,313.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="87" x="827.75" y="321.5352">WritableStream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="614" x2="1096" y1="333" y2="333"/><ellipse cx="624" cy="344" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="633" y="347.6348">writable : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="614" x2="1096" y1="353.9551" y2="353.9551"/><ellipse cx="624" cy="364.9551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="633" y="368.5898">addListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="624" cy="377.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="633" y="381.5449">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="624" cy="390.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="633" y="394.5">end(cb: Function) : void</text><ellipse cx="624" cy="403.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="633" y="407.4551">end(data: string | Uint8Array, cb: Function) : void</text><ellipse cx="624" cy="416.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="633" y="420.4102">end(str: string, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="624" cy="429.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="633" y="433.3652">eventNames() : (string | symbol)[]</text><ellipse cx="624" cy="442.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="633" y="446.3203">getMaxListeners() : number</text><ellipse cx="624" cy="455.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="633" y="459.2754">listenerCount(eventName: string | symbol) : number</text><ellipse cx="624" cy="468.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="633" y="472.2305">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="624" cy="481.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="633" y="485.1855">off(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="624" cy="494.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="633" y="498.1406">on(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="624" cy="507.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="633" y="511.0957">once(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="624" cy="520.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="430" x="633" y="524.0508">prependListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="624" cy="533.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="458" x="633" y="537.0059">prependOnceListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="624" cy="546.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="633" y="549.9609">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="624" cy="559.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="633" y="562.916">removeAllListeners(event: string | symbol) : WritableStream</text><ellipse cx="624" cy="572.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="425" x="633" y="575.8711">removeListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="624" cy="585.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="633" y="588.8262">setMaxListeners(n: number) : WritableStream</text><ellipse cx="624" cy="598.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="633" y="601.7813">write(buffer: string | Uint8Array, cb: Function) : boolean</text><ellipse cx="624" cy="611.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="633" y="614.7363">write(str: string, encoding: BufferEncoding, cb: Function) : boolean</text><!--MD5=[f00238d7d3b345818710a28959a0e6a6]
class EventEmitter--><rect codeLine="27" fill="#FEFECE" filter="url(#f15zumwz799bi2)" height="234.3262" id="EventEmitter" style="stroke:#A80036;stroke-width:1.5;" width="471" x="619.5" y="7"/><ellipse cx="814.75" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M811.1777,19.2651 L811.1777,17.1069 L818.5571,17.1069 L818.5571,19.2651 L816.0918,19.2651 L816.0918,27.3418 L818.5571,27.3418 L818.5571,29.5 L811.1777,29.5 L811.1777,27.3418 L813.6431,27.3418 L813.6431,19.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="72" x="835.25" y="27.5352">EventEmitter</text><line style="stroke:#A80036;stroke-width:1.5;" x1="620.5" x2="1089.5" y1="39" y2="39"/><ellipse cx="630.5" cy="50" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="639.5" y="53.6348">addListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="630.5" cy="62.9551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="639.5" y="66.5898">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="630.5" cy="75.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="639.5" y="79.5449">eventNames() : (string | symbol)[]</text><ellipse cx="630.5" cy="88.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="639.5" y="92.5">getMaxListeners() : number</text><ellipse cx="630.5" cy="101.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="639.5" y="105.4551">listenerCount(eventName: string | symbol) : number</text><ellipse cx="630.5" cy="114.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="639.5" y="118.4102">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="630.5" cy="127.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="639.5" y="131.3652">off(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="630.5" cy="140.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="639.5" y="144.3203">on(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="630.5" cy="153.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="639.5" y="157.2754">once(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="630.5" cy="166.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="639.5" y="170.2305">prependListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="630.5" cy="179.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="445" x="639.5" y="183.1855">prependOnceListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="630.5" cy="192.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="639.5" y="196.1406">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="630.5" cy="205.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="639.5" y="209.0957">removeAllListeners(event: string | symbol) : EventEmitter</text><ellipse cx="630.5" cy="218.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="639.5" y="222.0508">removeListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="630.5" cy="231.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="639.5" y="235.0059">setMaxListeners(n: number) : EventEmitter</text><!--MD5=[1a2903b9fb75a1c8b4e28e50cb3fa43a]
class ReadWriteStream--><rect codeLine="45" fill="#FEFECE" filter="url(#f15zumwz799bi2)" height="462.5625" id="ReadWriteStream" style="stroke:#A80036;stroke-width:1.5;" width="494" x="7" y="1626.5"/><ellipse cx="200.25" cy="1642.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M196.6777,1638.7651 L196.6777,1636.6069 L204.0571,1636.6069 L204.0571,1638.7651 L201.5918,1638.7651 L201.5918,1646.8418 L204.0571,1646.8418 L204.0571,1649 L196.6777,1649 L196.6777,1646.8418 L199.1431,1646.8418 L199.1431,1638.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="99" x="220.75" y="1647.0352">ReadWriteStream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="500" y1="1658.5" y2="1658.5"/><ellipse cx="18" cy="1669.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="1673.1348">readable : boolean</text><ellipse cx="18" cy="1682.4551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="1686.0898">writable : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="500" y1="1692.4102" y2="1692.4102"/><ellipse cx="18" cy="1703.4102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="27" y="1707.0449">addListener(eventName: string | symbol, listener: Function) : ReadWriteStream</text><ellipse cx="18" cy="1716.3652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="1720">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="1729.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="27" y="1732.9551">end(cb: Function) : void</text><ellipse cx="18" cy="1742.2754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="1745.9102">end(data: string | Uint8Array, cb: Function) : void</text><ellipse cx="18" cy="1755.2305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="27" y="1758.8652">end(str: string, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="18" cy="1768.1855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="1771.8203">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="1781.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="1784.7754">getMaxListeners() : number</text><ellipse cx="18" cy="1794.0957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="1797.7305">isPaused() : boolean</text><ellipse cx="18" cy="1807.0508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="1810.6855">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="1820.0059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="1823.6406">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="1832.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="1836.5957">off(eventName: string | symbol, listener: Function) : ReadWriteStream</text><ellipse cx="18" cy="1845.916" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="1849.5508">on(eventName: string | symbol, listener: Function) : ReadWriteStream</text><ellipse cx="18" cy="1858.8711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="378" x="27" y="1862.5059">once(eventName: string | symbol, listener: Function) : ReadWriteStream</text><ellipse cx="18" cy="1871.8262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="1875.4609">pause() : ReadWriteStream</text><ellipse cx="18" cy="1884.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="1888.416">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="1897.7363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="440" x="27" y="1901.3711">prependListener(eventName: string | symbol, listener: Function) : ReadWriteStream</text><ellipse cx="18" cy="1910.6914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="468" x="27" y="1914.3262">prependOnceListener(eventName: string | symbol, listener: Function) : ReadWriteStream</text><ellipse cx="18" cy="1923.6465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="1927.2813">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="1936.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="27" y="1940.2363">read(size: number) : string | Buffer</text><ellipse cx="18" cy="1949.5566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="27" y="1953.1914">removeAllListeners(event: string | symbol) : ReadWriteStream</text><ellipse cx="18" cy="1962.5117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="435" x="27" y="1966.1465">removeListener(eventName: string | symbol, listener: Function) : ReadWriteStream</text><ellipse cx="18" cy="1975.4668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="1979.1016">resume() : ReadWriteStream</text><ellipse cx="18" cy="1988.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="311" x="27" y="1992.0566">setEncoding(encoding: BufferEncoding) : ReadWriteStream</text><ellipse cx="18" cy="2001.377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="27" y="2005.0117">setMaxListeners(n: number) : ReadWriteStream</text><ellipse cx="18" cy="2014.332" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="27" y="2017.9668">unpipe(destination: WritableStream) : ReadWriteStream</text><ellipse cx="18" cy="2027.2871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="27" y="2030.9219">unshift(chunk: string | Uint8Array, encoding: BufferEncoding) : void</text><ellipse cx="18" cy="2040.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="2043.877">wrap(oldStream: ReadableStream) : ReadWriteStream</text><ellipse cx="18" cy="2053.1973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="2056.832">write(buffer: string | Uint8Array, cb: Function) : boolean</text><ellipse cx="18" cy="2066.1523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="2069.7871">write(str: string, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="18" cy="2079.1074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="27" y="2082.7422">[asyncIterator]() : AsyncIterableIterator&lt;string | Buffer&gt;</text><!--MD5=[93f77cf1cd71031e7728e23fe162cbe1]
class Writable--><rect codeLine="172" fill="#FEFECE" filter="url(#f15zumwz799bi2)" height="2354.0039" id="Writable" style="stroke:#A80036;stroke-width:1.5;" width="637" x="536.5" y="681"/><ellipse cx="827.25" cy="697" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M829.7231,703.1431 Q829.1421,703.4419 828.5029,703.5913 Q827.8638,703.7407 827.1582,703.7407 Q824.6514,703.7407 823.3315,702.0889 Q822.0117,700.437 822.0117,697.3159 Q822.0117,694.1865 823.3315,692.5347 Q824.6514,690.8828 827.1582,690.8828 Q827.8638,690.8828 828.5112,691.0322 Q829.1587,691.1816 829.7231,691.4805 L829.7231,694.2031 Q829.0923,693.6221 828.4988,693.3523 Q827.9053,693.0825 827.2744,693.0825 Q825.9297,693.0825 825.2449,694.1492 Q824.5601,695.2158 824.5601,697.3159 Q824.5601,699.4077 825.2449,700.4744 Q825.9297,701.541 827.2744,701.541 Q827.9053,701.541 828.4988,701.2712 Q829.0923,701.0015 829.7231,700.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="47" x="847.75" y="701.5352">Writable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="537.5" x2="1172.5" y1="713" y2="713"/><ellipse cx="547.5" cy="724" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="556.5" y="727.6348">captureRejections : boolean</text><ellipse cx="547.5" cy="736.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="556.5" y="740.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="547.5" cy="749.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="556.5" y="753.5449">defaultMaxListeners : number</text><ellipse cx="547.5" cy="762.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="556.5" y="766.5">destroyed : boolean</text><ellipse cx="547.5" cy="775.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="556.5" y="779.4551">errorMonitor : typeof errorMonitor</text><ellipse cx="547.5" cy="788.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="556.5" y="792.4102">writable : boolean</text><ellipse cx="547.5" cy="801.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="556.5" y="805.3652">writableCorked : number</text><ellipse cx="547.5" cy="814.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="556.5" y="818.3203">writableEnded : boolean</text><ellipse cx="547.5" cy="827.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="556.5" y="831.2754">writableFinished : boolean</text><ellipse cx="547.5" cy="840.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="556.5" y="844.2305">writableHighWaterMark : number</text><ellipse cx="547.5" cy="853.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="556.5" y="857.1855">writableLength : number</text><ellipse cx="547.5" cy="866.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="556.5" y="870.1406">writableObjectMode : boolean</text><ellipse cx="547.5" cy="879.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="556.5" y="883.0957">captureRejections : boolean</text><ellipse cx="547.5" cy="892.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="556.5" y="896.0508">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="547.5" cy="905.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="556.5" y="909.0059">defaultMaxListeners : number</text><ellipse cx="547.5" cy="918.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="556.5" y="921.9609">destroyed : boolean</text><ellipse cx="547.5" cy="931.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="556.5" y="934.916">errorMonitor : typeof errorMonitor</text><ellipse cx="547.5" cy="944.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="556.5" y="947.8711">writable : boolean</text><ellipse cx="547.5" cy="957.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="556.5" y="960.8262">writableCorked : number</text><ellipse cx="547.5" cy="970.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="556.5" y="973.7813">writableEnded : boolean</text><ellipse cx="547.5" cy="983.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="556.5" y="986.7363">writableFinished : boolean</text><ellipse cx="547.5" cy="996.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="556.5" y="999.6914">writableHighWaterMark : number</text><ellipse cx="547.5" cy="1009.0117" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="556.5" y="1012.6465">writableLength : number</text><ellipse cx="547.5" cy="1021.9668" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="556.5" y="1025.6016">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="537.5" x2="1172.5" y1="1031.9219" y2="1031.9219"/><ellipse cx="547.5" cy="1042.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="556.5" y="1046.5566">addListener(event: "close", listener: Function) : Writable</text><ellipse cx="547.5" cy="1055.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="556.5" y="1059.5117">addListener(event: "drain", listener: Function) : Writable</text><ellipse cx="547.5" cy="1068.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="556.5" y="1072.4668">addListener(event: "error", listener: Function) : Writable</text><ellipse cx="547.5" cy="1081.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="295" x="556.5" y="1085.4219">addListener(event: "finish", listener: Function) : Writable</text><ellipse cx="547.5" cy="1094.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="556.5" y="1098.377">addListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="1107.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="556.5" y="1111.332">addListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="1120.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="556.5" y="1124.2871">addListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="547.5" cy="1133.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="556.5" y="1137.2422">cork() : void</text><ellipse cx="547.5" cy="1146.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="556.5" y="1150.1973">destroy(error: Error) : void</text><ellipse cx="547.5" cy="1159.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="556.5" y="1163.1523">emit(event: "close") : boolean</text><ellipse cx="547.5" cy="1172.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="556.5" y="1176.1074">emit(event: "drain") : boolean</text><ellipse cx="547.5" cy="1185.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="556.5" y="1189.0625">emit(event: "error", err: Error) : boolean</text><ellipse cx="547.5" cy="1198.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="556.5" y="1202.0176">emit(event: "finish") : boolean</text><ellipse cx="547.5" cy="1211.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="556.5" y="1214.9727">emit(event: "pipe", src: Readable) : boolean</text><ellipse cx="547.5" cy="1224.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="556.5" y="1227.9277">emit(event: "unpipe", src: Readable) : boolean</text><ellipse cx="547.5" cy="1237.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="556.5" y="1240.8828">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="547.5" cy="1250.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="556.5" y="1253.8379">end(cb: Function) : void</text><ellipse cx="547.5" cy="1263.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="556.5" y="1266.793">end(chunk: any, cb: Function) : void</text><ellipse cx="547.5" cy="1276.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="556.5" y="1279.748">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="547.5" cy="1289.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="556.5" y="1292.7031">eventNames() : (string | symbol)[]</text><ellipse cx="547.5" cy="1302.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="556.5" y="1305.6582">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="547.5" cy="1314.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="556.5" y="1318.6133">getMaxListeners() : number</text><ellipse cx="547.5" cy="1327.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="556.5" y="1331.5684">listenerCount(eventName: string | symbol) : number</text><ellipse cx="547.5" cy="1340.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="556.5" y="1344.5234">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="547.5" cy="1353.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="556.5" y="1357.4785">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="547.5" cy="1366.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="556.5" y="1370.4336">off(eventName: string | symbol, listener: Function) : Writable</text><ellipse cx="547.5" cy="1379.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="556.5" y="1383.3887">on(event: "close", listener: Function) : Writable</text><ellipse cx="547.5" cy="1392.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="556.5" y="1396.3438">on(event: "drain", listener: Function) : Writable</text><ellipse cx="547.5" cy="1405.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="556.5" y="1409.2988">on(event: "error", listener: Function) : Writable</text><ellipse cx="547.5" cy="1418.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="556.5" y="1422.2539">on(event: "finish", listener: Function) : Writable</text><ellipse cx="547.5" cy="1431.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="556.5" y="1435.209">on(event: "pipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="1444.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="556.5" y="1448.1641">on(event: "unpipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="1457.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="556.5" y="1461.1191">on(event: string | symbol, listener: Function) : Writable</text><ellipse cx="547.5" cy="1470.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="556.5" y="1474.0742">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="547.5" cy="1483.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="556.5" y="1487.0293">once(event: "close", listener: Function) : Writable</text><ellipse cx="547.5" cy="1496.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="556.5" y="1499.9844">once(event: "drain", listener: Function) : Writable</text><ellipse cx="547.5" cy="1509.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="556.5" y="1512.9395">once(event: "error", listener: Function) : Writable</text><ellipse cx="547.5" cy="1522.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="556.5" y="1525.8945">once(event: "finish", listener: Function) : Writable</text><ellipse cx="547.5" cy="1535.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="556.5" y="1538.8496">once(event: "pipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="1548.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="556.5" y="1551.8047">once(event: "unpipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="1561.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="556.5" y="1564.7598">once(event: string | symbol, listener: Function) : Writable</text><ellipse cx="547.5" cy="1574.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="556.5" y="1577.7148">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="547.5" cy="1587.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="556.5" y="1590.6699">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="547.5" cy="1599.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="556.5" y="1603.625">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="547.5" cy="1612.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="556.5" y="1616.5801">prependListener(event: "close", listener: Function) : Writable</text><ellipse cx="547.5" cy="1625.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="556.5" y="1629.5352">prependListener(event: "drain", listener: Function) : Writable</text><ellipse cx="547.5" cy="1638.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="556.5" y="1642.4902">prependListener(event: "error", listener: Function) : Writable</text><ellipse cx="547.5" cy="1651.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="556.5" y="1655.4453">prependListener(event: "finish", listener: Function) : Writable</text><ellipse cx="547.5" cy="1664.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="556.5" y="1668.4004">prependListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="1677.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="556.5" y="1681.3555">prependListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="1690.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="556.5" y="1694.3105">prependListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="547.5" cy="1703.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="556.5" y="1707.2656">prependOnceListener(event: "close", listener: Function) : Writable</text><ellipse cx="547.5" cy="1716.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="556.5" y="1720.2207">prependOnceListener(event: "drain", listener: Function) : Writable</text><ellipse cx="547.5" cy="1729.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="556.5" y="1733.1758">prependOnceListener(event: "error", listener: Function) : Writable</text><ellipse cx="547.5" cy="1742.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="348" x="556.5" y="1746.1309">prependOnceListener(event: "finish", listener: Function) : Writable</text><ellipse cx="547.5" cy="1755.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="556.5" y="1759.0859">prependOnceListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="1768.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="556.5" y="1772.041">prependOnceListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="1781.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="556.5" y="1784.9961">prependOnceListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="547.5" cy="1794.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="556.5" y="1797.9512">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="547.5" cy="1807.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="556.5" y="1810.9063">removeAllListeners(event: string | symbol) : Writable</text><ellipse cx="547.5" cy="1820.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="556.5" y="1823.8613">removeListener(event: "close", listener: Function) : Writable</text><ellipse cx="547.5" cy="1833.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="556.5" y="1836.8164">removeListener(event: "drain", listener: Function) : Writable</text><ellipse cx="547.5" cy="1846.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="556.5" y="1849.7715">removeListener(event: "error", listener: Function) : Writable</text><ellipse cx="547.5" cy="1859.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="556.5" y="1862.7266">removeListener(event: "finish", listener: Function) : Writable</text><ellipse cx="547.5" cy="1872.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="556.5" y="1875.6816">removeListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="1885.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="556.5" y="1888.6367">removeListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="1897.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="556.5" y="1901.5918">removeListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="547.5" cy="1910.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="556.5" y="1914.5469">setDefaultEncoding(encoding: BufferEncoding) : Writable</text><ellipse cx="547.5" cy="1923.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="556.5" y="1927.502">setMaxListeners(n: number) : Writable</text><ellipse cx="547.5" cy="1936.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="556.5" y="1940.457">uncork() : void</text><ellipse cx="547.5" cy="1949.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="556.5" y="1953.4121">write(chunk: any, callback: Function) : boolean</text><ellipse cx="547.5" cy="1962.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="556.5" y="1966.3672">write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean</text><ellipse cx="547.5" cy="1975.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="556.5" y="1979.3223">_construct(callback: Function) : void</text><ellipse cx="547.5" cy="1988.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="556.5" y="1992.2773">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="547.5" cy="2001.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="556.5" y="2005.2324">_final(callback: Function) : void</text><ellipse cx="547.5" cy="2014.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="556.5" y="2018.1875">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="547.5" cy="2027.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="556.5" y="2031.1426">_writev(chunks: Object[], callback: Function) : void</text><ellipse cx="547.5" cy="2040.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="556.5" y="2044.0977">addListener(event: "close", listener: Function) : Writable</text><ellipse cx="547.5" cy="2053.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="556.5" y="2057.0527">addListener(event: "drain", listener: Function) : Writable</text><ellipse cx="547.5" cy="2066.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="556.5" y="2070.0078">addListener(event: "error", listener: Function) : Writable</text><ellipse cx="547.5" cy="2079.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="295" x="556.5" y="2082.9629">addListener(event: "finish", listener: Function) : Writable</text><ellipse cx="547.5" cy="2092.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="556.5" y="2095.918">addListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="2105.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="556.5" y="2108.873">addListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="2118.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="556.5" y="2121.8281">addListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="547.5" cy="2131.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="556.5" y="2134.7832">cork() : void</text><ellipse cx="547.5" cy="2144.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="556.5" y="2147.7383">destroy(error: Error) : void</text><ellipse cx="547.5" cy="2157.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="556.5" y="2160.6934">emit(event: "close") : boolean</text><ellipse cx="547.5" cy="2170.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="556.5" y="2173.6484">emit(event: "drain") : boolean</text><ellipse cx="547.5" cy="2182.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="556.5" y="2186.6035">emit(event: "error", err: Error) : boolean</text><ellipse cx="547.5" cy="2195.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="556.5" y="2199.5586">emit(event: "finish") : boolean</text><ellipse cx="547.5" cy="2208.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="556.5" y="2212.5137">emit(event: "pipe", src: Readable) : boolean</text><ellipse cx="547.5" cy="2221.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="556.5" y="2225.4688">emit(event: "unpipe", src: Readable) : boolean</text><ellipse cx="547.5" cy="2234.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="556.5" y="2238.4238">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="547.5" cy="2247.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="556.5" y="2251.3789">end(cb: Function) : void</text><ellipse cx="547.5" cy="2260.6992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="556.5" y="2264.334">end(chunk: any, cb: Function) : void</text><ellipse cx="547.5" cy="2273.6543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="556.5" y="2277.2891">end(chunk: any, encoding: BufferEncoding, cb: Function) : void</text><ellipse cx="547.5" cy="2286.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="556.5" y="2290.2441">eventNames() : (string | symbol)[]</text><ellipse cx="547.5" cy="2299.5645" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="556.5" y="2303.1992">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="547.5" cy="2312.5195" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="556.5" y="2316.1543">getMaxListeners() : number</text><ellipse cx="547.5" cy="2325.4746" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="556.5" y="2329.1094">listenerCount(eventName: string | symbol) : number</text><ellipse cx="547.5" cy="2338.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="556.5" y="2342.0645">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="547.5" cy="2351.3848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="556.5" y="2355.0195">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="547.5" cy="2364.3398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="556.5" y="2367.9746">off(eventName: string | symbol, listener: Function) : Writable</text><ellipse cx="547.5" cy="2377.2949" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="556.5" y="2380.9297">on(event: "close", listener: Function) : Writable</text><ellipse cx="547.5" cy="2390.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="556.5" y="2393.8848">on(event: "drain", listener: Function) : Writable</text><ellipse cx="547.5" cy="2403.2051" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="556.5" y="2406.8398">on(event: "error", listener: Function) : Writable</text><ellipse cx="547.5" cy="2416.1602" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="556.5" y="2419.7949">on(event: "finish", listener: Function) : Writable</text><ellipse cx="547.5" cy="2429.1152" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="556.5" y="2432.75">on(event: "pipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="2442.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="556.5" y="2445.7051">on(event: "unpipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="2455.0254" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="556.5" y="2458.6602">on(event: string | symbol, listener: Function) : Writable</text><ellipse cx="547.5" cy="2467.9805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="556.5" y="2471.6152">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="547.5" cy="2480.9355" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="556.5" y="2484.5703">once(event: "close", listener: Function) : Writable</text><ellipse cx="547.5" cy="2493.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="556.5" y="2497.5254">once(event: "drain", listener: Function) : Writable</text><ellipse cx="547.5" cy="2506.8457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="556.5" y="2510.4805">once(event: "error", listener: Function) : Writable</text><ellipse cx="547.5" cy="2519.8008" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="556.5" y="2523.4355">once(event: "finish", listener: Function) : Writable</text><ellipse cx="547.5" cy="2532.7559" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="556.5" y="2536.3906">once(event: "pipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="2545.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="556.5" y="2549.3457">once(event: "unpipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="2558.666" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="556.5" y="2562.3008">once(event: string | symbol, listener: Function) : Writable</text><ellipse cx="547.5" cy="2571.6211" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="556.5" y="2575.2559">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="547.5" cy="2584.5762" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="556.5" y="2588.2109">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="547.5" cy="2597.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="556.5" y="2601.166">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="547.5" cy="2610.4863" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="556.5" y="2614.1211">prependListener(event: "close", listener: Function) : Writable</text><ellipse cx="547.5" cy="2623.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="556.5" y="2627.0762">prependListener(event: "drain", listener: Function) : Writable</text><ellipse cx="547.5" cy="2636.3965" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="556.5" y="2640.0313">prependListener(event: "error", listener: Function) : Writable</text><ellipse cx="547.5" cy="2649.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="556.5" y="2652.9863">prependListener(event: "finish", listener: Function) : Writable</text><ellipse cx="547.5" cy="2662.3066" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="556.5" y="2665.9414">prependListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="2675.2617" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="556.5" y="2678.8965">prependListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="2688.2168" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="556.5" y="2691.8516">prependListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="547.5" cy="2701.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="556.5" y="2704.8066">prependOnceListener(event: "close", listener: Function) : Writable</text><ellipse cx="547.5" cy="2714.127" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="556.5" y="2717.7617">prependOnceListener(event: "drain", listener: Function) : Writable</text><ellipse cx="547.5" cy="2727.082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="556.5" y="2730.7168">prependOnceListener(event: "error", listener: Function) : Writable</text><ellipse cx="547.5" cy="2740.0371" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="348" x="556.5" y="2743.6719">prependOnceListener(event: "finish", listener: Function) : Writable</text><ellipse cx="547.5" cy="2752.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="556.5" y="2756.627">prependOnceListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="2765.9473" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="556.5" y="2769.582">prependOnceListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="2778.9023" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="556.5" y="2782.5371">prependOnceListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="547.5" cy="2791.8574" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="556.5" y="2795.4922">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="547.5" cy="2804.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="556.5" y="2808.4473">removeAllListeners(event: string | symbol) : Writable</text><ellipse cx="547.5" cy="2817.7676" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="556.5" y="2821.4023">removeListener(event: "close", listener: Function) : Writable</text><ellipse cx="547.5" cy="2830.7227" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="556.5" y="2834.3574">removeListener(event: "drain", listener: Function) : Writable</text><ellipse cx="547.5" cy="2843.6777" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="556.5" y="2847.3125">removeListener(event: "error", listener: Function) : Writable</text><ellipse cx="547.5" cy="2856.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="556.5" y="2860.2676">removeListener(event: "finish", listener: Function) : Writable</text><ellipse cx="547.5" cy="2869.5879" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="556.5" y="2873.2227">removeListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="2882.543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="556.5" y="2886.1777">removeListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="547.5" cy="2895.498" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="556.5" y="2899.1328">removeListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="547.5" cy="2908.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="556.5" y="2912.0879">setDefaultEncoding(encoding: BufferEncoding) : Writable</text><ellipse cx="547.5" cy="2921.4082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="556.5" y="2925.043">setMaxListeners(n: number) : Writable</text><ellipse cx="547.5" cy="2934.3633" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="556.5" y="2937.998">uncork() : void</text><ellipse cx="547.5" cy="2947.3184" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="556.5" y="2950.9531">write(chunk: any, callback: Function) : boolean</text><ellipse cx="547.5" cy="2960.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="556.5" y="2963.9082">write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean</text><ellipse cx="547.5" cy="2973.2285" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="556.5" y="2976.8633">_construct(callback: Function) : void</text><ellipse cx="547.5" cy="2986.1836" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="556.5" y="2989.8184">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="547.5" cy="2999.1387" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="556.5" y="3002.7734">_final(callback: Function) : void</text><ellipse cx="547.5" cy="3012.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="556.5" y="3015.7285">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="547.5" cy="3025.0488" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="556.5" y="3028.6836">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[162ae76787cddf20fcec29d21c2d6ca3]
reverse link EventEmitter to WritableStream--><path codeLine="44" d="M855,261.41 C855,274.42 855,287.7 855,300.9 " fill="none" id="EventEmitter-backto-WritableStream" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="848,261.23,855,241.23,862,261.23,848,261.23" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[58395a3ff6498bcd20349b5cb8d13b9c]
reverse link WritableStream to ReadWriteStream--><path codeLine="79" d="M596.64,599.02 C567.21,623.14 540.22,650.47 519,681 C321.39,965.31 268.52,1373.28 255.84,1626.35 " fill="none" id="WritableStream-backto-ReadWriteStream" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="592.69,593.22,612.72,586.32,601.36,604.21,592.69,593.22" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[722c79936b051f4d7c91a0b945b9cd18]
reverse link WritableStream to Writable--><path codeLine="171" d="M846.12,641.17 C845.88,653.86 845.65,667.07 845.42,680.76 " fill="none" id="WritableStream-backto-Writable" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="839.13,640.86,846.53,621.01,853.13,641.14,839.13,640.86" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[722c79936b051f4d7c91a0b945b9cd18]
reverse link WritableStream to Writable--><path codeLine="263" d="M864.4,641.17 C864.66,653.86 864.9,667.07 865.14,680.76 " fill="none" id="WritableStream-backto-Writable-1" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="857.4,641.15,863.97,621.01,871.39,640.85,857.4,641.15" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[ca6eeb2d5777e29fad9a21cdfa58a5ec]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
interface "WritableStream" {
    +writable : boolean
    +addListener(eventName: string | symbol, listener: Function) : WritableStream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(data: string | Uint8Array, cb: Function) : void
    +end(str: string, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : WritableStream
    +on(eventName: string | symbol, listener: Function) : WritableStream
    +once(eventName: string | symbol, listener: Function) : WritableStream
    +prependListener(eventName: string | symbol, listener: Function) : WritableStream
    +prependOnceListener(eventName: string | symbol, listener: Function) : WritableStream
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : WritableStream
    +removeListener(eventName: string | symbol, listener: Function) : WritableStream
    +setMaxListeners(n: number) : WritableStream
    +write(buffer: string | Uint8Array, cb: Function) : boolean
    +write(str: string, encoding: BufferEncoding, cb: Function) : boolean
}
interface "EventEmitter" {
    +addListener(eventName: string | symbol, listener: Function) : EventEmitter
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : EventEmitter
    +on(eventName: string | symbol, listener: Function) : EventEmitter
    +once(eventName: string | symbol, listener: Function) : EventEmitter
    +prependListener(eventName: string | symbol, listener: Function) : EventEmitter
    +prependOnceListener(eventName: string | symbol, listener: Function) : EventEmitter
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : EventEmitter
    +removeListener(eventName: string | symbol, listener: Function) : EventEmitter
    +setMaxListeners(n: number) : EventEmitter
}
"EventEmitter" <|- - "WritableStream"
interface "ReadWriteStream" {
    +readable : boolean
    +writable : boolean
    +addListener(eventName: string | symbol, listener: Function) : ReadWriteStream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(data: string | Uint8Array, cb: Function) : void
    +end(str: string, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    +getMaxListeners() : number
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : ReadWriteStream
    +on(eventName: string | symbol, listener: Function) : ReadWriteStream
    +once(eventName: string | symbol, listener: Function) : ReadWriteStream
    +pause() : ReadWriteStream
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : ReadWriteStream
    +prependOnceListener(eventName: string | symbol, listener: Function) : ReadWriteStream
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : string | Buffer
    +removeAllListeners(event: string | symbol) : ReadWriteStream
    +removeListener(eventName: string | symbol, listener: Function) : ReadWriteStream
    +resume() : ReadWriteStream
    +setEncoding(encoding: BufferEncoding) : ReadWriteStream
    +setMaxListeners(n: number) : ReadWriteStream
    +unpipe(destination: WritableStream) : ReadWriteStream
    +unshift(chunk: string | Uint8Array, encoding: BufferEncoding) : void
    +wrap(oldStream: ReadableStream) : ReadWriteStream
    +write(buffer: string | Uint8Array, cb: Function) : boolean
    +write(str: string, encoding: BufferEncoding, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<string | Buffer>
}
"WritableStream" <|- - "ReadWriteStream"
class "Writable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Writable
    +addListener(event: "drain", listener: Function) : Writable
    +addListener(event: "error", listener: Function) : Writable
    +addListener(event: "finish", listener: Function) : Writable
    +addListener(event: "pipe", listener: Function) : Writable
    +addListener(event: "unpipe", listener: Function) : Writable
    +addListener(event: string | symbol, listener: Function) : Writable
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "drain") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "finish") : boolean
    +emit(event: "pipe", src: Readable) : boolean
    +emit(event: "unpipe", src: Readable) : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Writable
    +on(event: "close", listener: Function) : Writable
    +on(event: "drain", listener: Function) : Writable
    +on(event: "error", listener: Function) : Writable
    +on(event: "finish", listener: Function) : Writable
    +on(event: "pipe", listener: Function) : Writable
    +on(event: "unpipe", listener: Function) : Writable
    +on(event: string | symbol, listener: Function) : Writable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Writable
    +once(event: "drain", listener: Function) : Writable
    +once(event: "error", listener: Function) : Writable
    +once(event: "finish", listener: Function) : Writable
    +once(event: "pipe", listener: Function) : Writable
    +once(event: "unpipe", listener: Function) : Writable
    +once(event: string | symbol, listener: Function) : Writable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Writable
    +prependListener(event: "drain", listener: Function) : Writable
    +prependListener(event: "error", listener: Function) : Writable
    +prependListener(event: "finish", listener: Function) : Writable
    +prependListener(event: "pipe", listener: Function) : Writable
    +prependListener(event: "unpipe", listener: Function) : Writable
    +prependListener(event: string | symbol, listener: Function) : Writable
    +prependOnceListener(event: "close", listener: Function) : Writable
    +prependOnceListener(event: "drain", listener: Function) : Writable
    +prependOnceListener(event: "error", listener: Function) : Writable
    +prependOnceListener(event: "finish", listener: Function) : Writable
    +prependOnceListener(event: "pipe", listener: Function) : Writable
    +prependOnceListener(event: "unpipe", listener: Function) : Writable
    +prependOnceListener(event: string | symbol, listener: Function) : Writable
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Writable
    +removeListener(event: "close", listener: Function) : Writable
    +removeListener(event: "drain", listener: Function) : Writable
    +removeListener(event: "error", listener: Function) : Writable
    +removeListener(event: "finish", listener: Function) : Writable
    +removeListener(event: "pipe", listener: Function) : Writable
    +removeListener(event: "unpipe", listener: Function) : Writable
    +removeListener(event: string | symbol, listener: Function) : Writable
    +setDefaultEncoding(encoding: BufferEncoding) : Writable
    +setMaxListeners(n: number) : Writable
    +uncork() : void
    +write(chunk: any, callback: Function) : boolean
    +write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"WritableStream" <|.. "Writable"
class "Writable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Writable
    +addListener(event: "drain", listener: Function) : Writable
    +addListener(event: "error", listener: Function) : Writable
    +addListener(event: "finish", listener: Function) : Writable
    +addListener(event: "pipe", listener: Function) : Writable
    +addListener(event: "unpipe", listener: Function) : Writable
    +addListener(event: string | symbol, listener: Function) : Writable
    +cork() : void
    +destroy(error: Error) : void
    +emit(event: "close") : boolean
    +emit(event: "drain") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "finish") : boolean
    +emit(event: "pipe", src: Readable) : boolean
    +emit(event: "unpipe", src: Readable) : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : void
    +end(chunk: any, cb: Function) : void
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : void
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Writable
    +on(event: "close", listener: Function) : Writable
    +on(event: "drain", listener: Function) : Writable
    +on(event: "error", listener: Function) : Writable
    +on(event: "finish", listener: Function) : Writable
    +on(event: "pipe", listener: Function) : Writable
    +on(event: "unpipe", listener: Function) : Writable
    +on(event: string | symbol, listener: Function) : Writable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Writable
    +once(event: "drain", listener: Function) : Writable
    +once(event: "error", listener: Function) : Writable
    +once(event: "finish", listener: Function) : Writable
    +once(event: "pipe", listener: Function) : Writable
    +once(event: "unpipe", listener: Function) : Writable
    +once(event: string | symbol, listener: Function) : Writable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Writable
    +prependListener(event: "drain", listener: Function) : Writable
    +prependListener(event: "error", listener: Function) : Writable
    +prependListener(event: "finish", listener: Function) : Writable
    +prependListener(event: "pipe", listener: Function) : Writable
    +prependListener(event: "unpipe", listener: Function) : Writable
    +prependListener(event: string | symbol, listener: Function) : Writable
    +prependOnceListener(event: "close", listener: Function) : Writable
    +prependOnceListener(event: "drain", listener: Function) : Writable
    +prependOnceListener(event: "error", listener: Function) : Writable
    +prependOnceListener(event: "finish", listener: Function) : Writable
    +prependOnceListener(event: "pipe", listener: Function) : Writable
    +prependOnceListener(event: "unpipe", listener: Function) : Writable
    +prependOnceListener(event: string | symbol, listener: Function) : Writable
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Writable
    +removeListener(event: "close", listener: Function) : Writable
    +removeListener(event: "drain", listener: Function) : Writable
    +removeListener(event: "error", listener: Function) : Writable
    +removeListener(event: "finish", listener: Function) : Writable
    +removeListener(event: "pipe", listener: Function) : Writable
    +removeListener(event: "unpipe", listener: Function) : Writable
    +removeListener(event: string | symbol, listener: Function) : Writable
    +setDefaultEncoding(encoding: BufferEncoding) : Writable
    +setMaxListeners(n: number) : Writable
    +uncork() : void
    +write(chunk: any, callback: Function) : boolean
    +write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"WritableStream" <|.. "Writable"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>