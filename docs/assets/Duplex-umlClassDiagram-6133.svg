<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="5130px" preserveAspectRatio="none" style="width:1656px;height:5130px;background:#00000000;" version="1.1" viewBox="0 0 1656 5130" width="1656px" zoomAndPan="magnify"><defs><filter height="300%" id="fj0cxsommxcwa" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[dbb0aac09fdd9457193737fcd885dcc9]
class Duplex--><rect codeLine="4" fill="#FEFECE" filter="url(#fj0cxsommxcwa)" height="1602.6094" id="Duplex" style="stroke:#A80036;stroke-width:1.5;" width="800" x="424" y="1423"/><ellipse cx="799.25" cy="1439" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M801.7231,1445.1431 Q801.1421,1445.4419 800.5029,1445.5913 Q799.8638,1445.7407 799.1582,1445.7407 Q796.6514,1445.7407 795.3315,1444.0889 Q794.0117,1442.437 794.0117,1439.3159 Q794.0117,1436.1865 795.3315,1434.5347 Q796.6514,1432.8828 799.1582,1432.8828 Q799.8638,1432.8828 800.5112,1433.0322 Q801.1587,1433.1816 801.7231,1433.4805 L801.7231,1436.2031 Q801.0923,1435.6221 800.4988,1435.3523 Q799.9053,1435.0825 799.2744,1435.0825 Q797.9297,1435.0825 797.2449,1436.1492 Q796.5601,1437.2158 796.5601,1439.3159 Q796.5601,1441.4077 797.2449,1442.4744 Q797.9297,1443.541 799.2744,1443.541 Q799.9053,1443.541 800.4988,1443.2712 Q801.0923,1443.0015 801.7231,1442.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="41" x="819.75" y="1443.5352">Duplex</text><line style="stroke:#A80036;stroke-width:1.5;" x1="425" x2="1223" y1="1455" y2="1455"/><ellipse cx="435" cy="1466" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="444" y="1469.6348">allowHalfOpen : boolean</text><ellipse cx="435" cy="1478.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="444" y="1482.5898">captureRejections : boolean</text><ellipse cx="435" cy="1491.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="444" y="1495.5449">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="435" cy="1504.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="444" y="1508.5">defaultMaxListeners : number</text><ellipse cx="435" cy="1517.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="444" y="1521.4551">destroyed : boolean</text><ellipse cx="435" cy="1530.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="444" y="1534.4102">errorMonitor : typeof errorMonitor</text><ellipse cx="435" cy="1543.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="444" y="1547.3652">readable : boolean</text><ellipse cx="435" cy="1556.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="444" y="1560.3203">readableAborted : boolean</text><ellipse cx="435" cy="1569.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="444" y="1573.2754">readableDidRead : boolean</text><ellipse cx="435" cy="1582.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="444" y="1586.2305">readableEncoding : null | BufferEncoding</text><ellipse cx="435" cy="1595.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="444" y="1599.1855">readableEnded : boolean</text><ellipse cx="435" cy="1608.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="444" y="1612.1406">readableFlowing : null | boolean</text><ellipse cx="435" cy="1621.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="444" y="1625.0957">readableHighWaterMark : number</text><ellipse cx="435" cy="1634.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="444" y="1638.0508">readableLength : number</text><ellipse cx="435" cy="1647.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="444" y="1651.0059">readableObjectMode : boolean</text><ellipse cx="435" cy="1660.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="444" y="1663.9609">writable : boolean</text><ellipse cx="435" cy="1673.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="444" y="1676.916">writableCorked : number</text><ellipse cx="435" cy="1686.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="444" y="1689.8711">writableEnded : boolean</text><ellipse cx="435" cy="1699.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="444" y="1702.8262">writableFinished : boolean</text><ellipse cx="435" cy="1712.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="444" y="1715.7813">writableHighWaterMark : number</text><ellipse cx="435" cy="1725.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="444" y="1728.7363">writableLength : number</text><ellipse cx="435" cy="1738.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="444" y="1741.6914">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="425" x2="1223" y1="1748.0117" y2="1748.0117"/><ellipse cx="435" cy="1759.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="444" y="1762.6465">addListener(event: "close", listener: Function) : Duplex</text><ellipse cx="435" cy="1771.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="444" y="1775.6016">addListener(event: "data", listener: Function) : Duplex</text><ellipse cx="435" cy="1784.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="444" y="1788.5566">addListener(event: "end", listener: Function) : Duplex</text><ellipse cx="435" cy="1797.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="444" y="1801.5117">addListener(event: "error", listener: Function) : Duplex</text><ellipse cx="435" cy="1810.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="444" y="1814.4668">addListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="435" cy="1823.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="444" y="1827.4219">addListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="435" cy="1836.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="444" y="1840.377">addListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="435" cy="1849.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="444" y="1853.332">addListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="435" cy="1862.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="444" y="1866.2871">cork() : void</text><ellipse cx="435" cy="1875.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="444" y="1879.2422">destroy(error: Error) : Duplex</text><ellipse cx="435" cy="1888.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="444" y="1892.1973">emit(event: "close") : boolean</text><ellipse cx="435" cy="1901.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="444" y="1905.1523">emit(event: "data", chunk: any) : boolean</text><ellipse cx="435" cy="1914.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="444" y="1918.1074">emit(event: "end") : boolean</text><ellipse cx="435" cy="1927.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="444" y="1931.0625">emit(event: "error", err: Error) : boolean</text><ellipse cx="435" cy="1940.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="444" y="1944.0176">emit(event: "pause") : boolean</text><ellipse cx="435" cy="1953.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="444" y="1956.9727">emit(event: "readable") : boolean</text><ellipse cx="435" cy="1966.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="444" y="1969.9277">emit(event: "resume") : boolean</text><ellipse cx="435" cy="1979.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="444" y="1982.8828">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="435" cy="1992.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="444" y="1995.8379">end(cb: Function) : Duplex</text><ellipse cx="435" cy="2005.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="444" y="2008.793">end(chunk: any, cb: Function) : Duplex</text><ellipse cx="435" cy="2018.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="444" y="2021.748">end(chunk: any, encoding: BufferEncoding, cb: Function) : Duplex</text><ellipse cx="435" cy="2031.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="444" y="2034.7031">eventNames() : (string | symbol)[]</text><ellipse cx="435" cy="2044.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="444" y="2047.6582">from(src: string | Object | ArrayBuffer | Blob | Promise&lt;any&gt; | AsyncGeneratorFunction | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;) : Duplex</text><ellipse cx="435" cy="2056.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="444" y="2060.6133">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="435" cy="2069.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="444" y="2073.5684">getMaxListeners() : number</text><ellipse cx="435" cy="2082.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="444" y="2086.5234">isDisturbed(stream: Readable | ReadableStream) : boolean</text><ellipse cx="435" cy="2095.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="444" y="2099.4785">isPaused() : boolean</text><ellipse cx="435" cy="2108.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="444" y="2112.4336">listenerCount(eventName: string | symbol) : number</text><ellipse cx="435" cy="2121.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="444" y="2125.3887">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="435" cy="2134.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="444" y="2138.3438">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="435" cy="2147.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="444" y="2151.2988">off(eventName: string | symbol, listener: Function) : Duplex</text><ellipse cx="435" cy="2160.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="444" y="2164.2539">on(event: "close", listener: Function) : Duplex</text><ellipse cx="435" cy="2173.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="444" y="2177.209">on(event: "data", listener: Function) : Duplex</text><ellipse cx="435" cy="2186.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="444" y="2190.1641">on(event: "end", listener: Function) : Duplex</text><ellipse cx="435" cy="2199.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="444" y="2203.1191">on(event: "error", listener: Function) : Duplex</text><ellipse cx="435" cy="2212.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="444" y="2216.0742">on(event: "pause", listener: Function) : Duplex</text><ellipse cx="435" cy="2225.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="444" y="2229.0293">on(event: "readable", listener: Function) : Duplex</text><ellipse cx="435" cy="2238.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="444" y="2241.9844">on(event: "resume", listener: Function) : Duplex</text><ellipse cx="435" cy="2251.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="444" y="2254.9395">on(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="435" cy="2264.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="444" y="2267.8945">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="435" cy="2277.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="444" y="2280.8496">once(event: "close", listener: Function) : Duplex</text><ellipse cx="435" cy="2290.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="444" y="2293.8047">once(event: "data", listener: Function) : Duplex</text><ellipse cx="435" cy="2303.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="444" y="2306.7598">once(event: "end", listener: Function) : Duplex</text><ellipse cx="435" cy="2316.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="444" y="2319.7148">once(event: "error", listener: Function) : Duplex</text><ellipse cx="435" cy="2329.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="444" y="2332.6699">once(event: "pause", listener: Function) : Duplex</text><ellipse cx="435" cy="2341.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="444" y="2345.625">once(event: "readable", listener: Function) : Duplex</text><ellipse cx="435" cy="2354.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="444" y="2358.5801">once(event: "resume", listener: Function) : Duplex</text><ellipse cx="435" cy="2367.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="444" y="2371.5352">once(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="435" cy="2380.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="444" y="2384.4902">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="435" cy="2393.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="444" y="2397.4453">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="435" cy="2406.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="444" y="2410.4004">pause() : Duplex</text><ellipse cx="435" cy="2419.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="444" y="2423.3555">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="435" cy="2432.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="444" y="2436.3105">prependListener(event: "close", listener: Function) : Duplex</text><ellipse cx="435" cy="2445.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="444" y="2449.2656">prependListener(event: "data", listener: Function) : Duplex</text><ellipse cx="435" cy="2458.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="444" y="2462.2207">prependListener(event: "end", listener: Function) : Duplex</text><ellipse cx="435" cy="2471.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="444" y="2475.1758">prependListener(event: "error", listener: Function) : Duplex</text><ellipse cx="435" cy="2484.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="444" y="2488.1309">prependListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="435" cy="2497.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="444" y="2501.0859">prependListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="435" cy="2510.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="444" y="2514.041">prependListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="435" cy="2523.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="444" y="2526.9961">prependListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="435" cy="2536.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="444" y="2539.9512">prependOnceListener(event: "close", listener: Function) : Duplex</text><ellipse cx="435" cy="2549.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="444" y="2552.9063">prependOnceListener(event: "data", listener: Function) : Duplex</text><ellipse cx="435" cy="2562.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="444" y="2565.8613">prependOnceListener(event: "end", listener: Function) : Duplex</text><ellipse cx="435" cy="2575.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="444" y="2578.8164">prependOnceListener(event: "error", listener: Function) : Duplex</text><ellipse cx="435" cy="2588.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="444" y="2591.7715">prependOnceListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="435" cy="2601.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="444" y="2604.7266">prependOnceListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="435" cy="2614.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="444" y="2617.6816">prependOnceListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="435" cy="2627.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="444" y="2630.6367">prependOnceListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="435" cy="2639.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="444" y="2643.5918">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="435" cy="2652.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="444" y="2656.5469">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="435" cy="2665.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="444" y="2669.502">read(size: number) : any</text><ellipse cx="435" cy="2678.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="444" y="2682.457">removeAllListeners(event: string | symbol) : Duplex</text><ellipse cx="435" cy="2691.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="444" y="2695.4121">removeListener(event: "close", listener: Function) : Duplex</text><ellipse cx="435" cy="2704.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="444" y="2708.3672">removeListener(event: "data", listener: Function) : Duplex</text><ellipse cx="435" cy="2717.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="444" y="2721.3223">removeListener(event: "end", listener: Function) : Duplex</text><ellipse cx="435" cy="2730.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="444" y="2734.2773">removeListener(event: "error", listener: Function) : Duplex</text><ellipse cx="435" cy="2743.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="444" y="2747.2324">removeListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="435" cy="2756.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="444" y="2760.1875">removeListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="435" cy="2769.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="444" y="2773.1426">removeListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="435" cy="2782.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="444" y="2786.0977">removeListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="435" cy="2795.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="444" y="2799.0527">resume() : Duplex</text><ellipse cx="435" cy="2808.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="444" y="2812.0078">setDefaultEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="435" cy="2821.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="444" y="2824.9629">setEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="435" cy="2834.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="444" y="2837.918">setMaxListeners(n: number) : Duplex</text><ellipse cx="435" cy="2847.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="444" y="2850.873">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="435" cy="2860.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="444" y="2863.8281">uncork() : void</text><ellipse cx="435" cy="2873.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="444" y="2876.7832">unpipe(destination: WritableStream) : Duplex</text><ellipse cx="435" cy="2886.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="444" y="2889.7383">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="435" cy="2899.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="444" y="2902.6934">wrap(stream: ReadableStream) : Duplex</text><ellipse cx="435" cy="2912.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="444" y="2915.6484">write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="435" cy="2924.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="444" y="2928.6035">write(chunk: any, cb: Function) : boolean</text><ellipse cx="435" cy="2937.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="444" y="2941.5586">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="435" cy="2950.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="444" y="2954.5137">_construct(callback: Function) : void</text><ellipse cx="435" cy="2963.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="444" y="2967.4688">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="435" cy="2976.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="444" y="2980.4238">_final(callback: Function) : void</text><ellipse cx="435" cy="2989.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="444" y="2993.3789">_read(size: number) : void</text><ellipse cx="435" cy="3002.6992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="444" y="3006.334">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="435" cy="3015.6543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="444" y="3019.2891">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[c367c524f13260ba207946109d621584]
class Readable--><rect codeLine="126" fill="#FEFECE" filter="url(#fj0cxsommxcwa)" height="1356.4629" id="Readable" style="stroke:#A80036;stroke-width:1.5;" width="637" x="169.5" y="7"/><ellipse cx="456.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M458.7231,29.1431 Q458.1421,29.4419 457.5029,29.5913 Q456.8638,29.7407 456.1582,29.7407 Q453.6514,29.7407 452.3315,28.0889 Q451.0117,26.437 451.0117,23.3159 Q451.0117,20.1865 452.3315,18.5347 Q453.6514,16.8828 456.1582,16.8828 Q456.8638,16.8828 457.5112,17.0322 Q458.1587,17.1816 458.7231,17.4805 L458.7231,20.2031 Q458.0923,19.6221 457.4988,19.3523 Q456.9053,19.0825 456.2744,19.0825 Q454.9297,19.0825 454.2449,20.1492 Q453.5601,21.2158 453.5601,23.3159 Q453.5601,25.4077 454.2449,26.4744 Q454.9297,27.541 456.2744,27.541 Q456.9053,27.541 457.4988,27.2712 Q458.0923,27.0015 458.7231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="55" x="476.75" y="27.5352">Readable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="170.5" x2="805.5" y1="39" y2="39"/><ellipse cx="180.5" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="189.5" y="53.6348">captureRejections : boolean</text><ellipse cx="180.5" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="189.5" y="66.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="180.5" cy="75.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="189.5" y="79.5449">defaultMaxListeners : number</text><ellipse cx="180.5" cy="88.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="189.5" y="92.5">destroyed : boolean</text><ellipse cx="180.5" cy="101.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="189.5" y="105.4551">errorMonitor : typeof errorMonitor</text><ellipse cx="180.5" cy="114.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="189.5" y="118.4102">readable : boolean</text><ellipse cx="180.5" cy="127.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="189.5" y="131.3652">readableAborted : boolean</text><ellipse cx="180.5" cy="140.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="189.5" y="144.3203">readableDidRead : boolean</text><ellipse cx="180.5" cy="153.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="189.5" y="157.2754">readableEncoding : null | BufferEncoding</text><ellipse cx="180.5" cy="166.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="189.5" y="170.2305">readableEnded : boolean</text><ellipse cx="180.5" cy="179.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="189.5" y="183.1855">readableFlowing : null | boolean</text><ellipse cx="180.5" cy="192.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="189.5" y="196.1406">readableHighWaterMark : number</text><ellipse cx="180.5" cy="205.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="189.5" y="209.0957">readableLength : number</text><ellipse cx="180.5" cy="218.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="189.5" y="222.0508">readableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="170.5" x2="805.5" y1="228.3711" y2="228.3711"/><ellipse cx="180.5" cy="239.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="189.5" y="243.0059">addListener(event: "close", listener: Function) : Readable</text><ellipse cx="180.5" cy="252.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="189.5" y="255.9609">addListener(event: "data", listener: Function) : Readable</text><ellipse cx="180.5" cy="265.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="189.5" y="268.916">addListener(event: "end", listener: Function) : Readable</text><ellipse cx="180.5" cy="278.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="189.5" y="281.8711">addListener(event: "error", listener: Function) : Readable</text><ellipse cx="180.5" cy="291.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="189.5" y="294.8262">addListener(event: "pause", listener: Function) : Readable</text><ellipse cx="180.5" cy="304.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="189.5" y="307.7813">addListener(event: "readable", listener: Function) : Readable</text><ellipse cx="180.5" cy="317.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="189.5" y="320.7363">addListener(event: "resume", listener: Function) : Readable</text><ellipse cx="180.5" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="189.5" y="333.6914">addListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="180.5" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="168" x="189.5" y="346.6465">destroy(error: Error) : Readable</text><ellipse cx="180.5" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="189.5" y="359.6016">emit(event: "close") : boolean</text><ellipse cx="180.5" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="189.5" y="372.5566">emit(event: "data", chunk: any) : boolean</text><ellipse cx="180.5" cy="381.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="189.5" y="385.5117">emit(event: "end") : boolean</text><ellipse cx="180.5" cy="394.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="189.5" y="398.4668">emit(event: "error", err: Error) : boolean</text><ellipse cx="180.5" cy="407.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="189.5" y="411.4219">emit(event: "pause") : boolean</text><ellipse cx="180.5" cy="420.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="189.5" y="424.377">emit(event: "readable") : boolean</text><ellipse cx="180.5" cy="433.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="189.5" y="437.332">emit(event: "resume") : boolean</text><ellipse cx="180.5" cy="446.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="189.5" y="450.2871">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="180.5" cy="459.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="189.5" y="463.2422">eventNames() : (string | symbol)[]</text><ellipse cx="180.5" cy="472.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="478" x="189.5" y="476.1973">from(iterable: Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;, options: ReadableOptions) : Readable</text><ellipse cx="180.5" cy="485.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="189.5" y="489.1523">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="180.5" cy="498.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="189.5" y="502.1074">getMaxListeners() : number</text><ellipse cx="180.5" cy="511.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="189.5" y="515.0625">isDisturbed(stream: Readable | ReadableStream) : boolean</text><ellipse cx="180.5" cy="524.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="189.5" y="528.0176">isPaused() : boolean</text><ellipse cx="180.5" cy="537.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="189.5" y="540.9727">listenerCount(eventName: string | symbol) : number</text><ellipse cx="180.5" cy="550.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="189.5" y="553.9277">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="180.5" cy="563.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="189.5" y="566.8828">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="180.5" cy="576.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="189.5" y="579.8379">off(eventName: string | symbol, listener: Function) : Readable</text><ellipse cx="180.5" cy="589.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="189.5" y="592.793">on(event: "close", listener: Function) : Readable</text><ellipse cx="180.5" cy="602.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="189.5" y="605.748">on(event: "data", listener: Function) : Readable</text><ellipse cx="180.5" cy="615.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="189.5" y="618.7031">on(event: "end", listener: Function) : Readable</text><ellipse cx="180.5" cy="628.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="189.5" y="631.6582">on(event: "error", listener: Function) : Readable</text><ellipse cx="180.5" cy="640.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="189.5" y="644.6133">on(event: "pause", listener: Function) : Readable</text><ellipse cx="180.5" cy="653.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="189.5" y="657.5684">on(event: "readable", listener: Function) : Readable</text><ellipse cx="180.5" cy="666.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="189.5" y="670.5234">on(event: "resume", listener: Function) : Readable</text><ellipse cx="180.5" cy="679.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="189.5" y="683.4785">on(event: string | symbol, listener: Function) : Readable</text><ellipse cx="180.5" cy="692.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="189.5" y="696.4336">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="180.5" cy="705.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="189.5" y="709.3887">once(event: "close", listener: Function) : Readable</text><ellipse cx="180.5" cy="718.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="189.5" y="722.3438">once(event: "data", listener: Function) : Readable</text><ellipse cx="180.5" cy="731.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="189.5" y="735.2988">once(event: "end", listener: Function) : Readable</text><ellipse cx="180.5" cy="744.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="189.5" y="748.2539">once(event: "error", listener: Function) : Readable</text><ellipse cx="180.5" cy="757.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="189.5" y="761.209">once(event: "pause", listener: Function) : Readable</text><ellipse cx="180.5" cy="770.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="189.5" y="774.1641">once(event: "readable", listener: Function) : Readable</text><ellipse cx="180.5" cy="783.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="189.5" y="787.1191">once(event: "resume", listener: Function) : Readable</text><ellipse cx="180.5" cy="796.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="189.5" y="800.0742">once(event: string | symbol, listener: Function) : Readable</text><ellipse cx="180.5" cy="809.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="189.5" y="813.0293">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="180.5" cy="822.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="189.5" y="825.9844">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="180.5" cy="835.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="189.5" y="838.9395">pause() : Readable</text><ellipse cx="180.5" cy="848.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="189.5" y="851.8945">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="180.5" cy="861.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="189.5" y="864.8496">prependListener(event: "close", listener: Function) : Readable</text><ellipse cx="180.5" cy="874.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="189.5" y="877.8047">prependListener(event: "data", listener: Function) : Readable</text><ellipse cx="180.5" cy="887.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="189.5" y="890.7598">prependListener(event: "end", listener: Function) : Readable</text><ellipse cx="180.5" cy="900.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="189.5" y="903.7148">prependListener(event: "error", listener: Function) : Readable</text><ellipse cx="180.5" cy="913.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="189.5" y="916.6699">prependListener(event: "pause", listener: Function) : Readable</text><ellipse cx="180.5" cy="925.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="189.5" y="929.625">prependListener(event: "readable", listener: Function) : Readable</text><ellipse cx="180.5" cy="938.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="189.5" y="942.5801">prependListener(event: "resume", listener: Function) : Readable</text><ellipse cx="180.5" cy="951.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="189.5" y="955.5352">prependListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="180.5" cy="964.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="189.5" y="968.4902">prependOnceListener(event: "close", listener: Function) : Readable</text><ellipse cx="180.5" cy="977.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="189.5" y="981.4453">prependOnceListener(event: "data", listener: Function) : Readable</text><ellipse cx="180.5" cy="990.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="189.5" y="994.4004">prependOnceListener(event: "end", listener: Function) : Readable</text><ellipse cx="180.5" cy="1003.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="189.5" y="1007.3555">prependOnceListener(event: "error", listener: Function) : Readable</text><ellipse cx="180.5" cy="1016.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="189.5" y="1020.3105">prependOnceListener(event: "pause", listener: Function) : Readable</text><ellipse cx="180.5" cy="1029.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="189.5" y="1033.2656">prependOnceListener(event: "readable", listener: Function) : Readable</text><ellipse cx="180.5" cy="1042.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="189.5" y="1046.2207">prependOnceListener(event: "resume", listener: Function) : Readable</text><ellipse cx="180.5" cy="1055.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="189.5" y="1059.1758">prependOnceListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="180.5" cy="1068.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="189.5" y="1072.1309">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="180.5" cy="1081.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="189.5" y="1085.0859">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="180.5" cy="1094.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="189.5" y="1098.041">read(size: number) : any</text><ellipse cx="180.5" cy="1107.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="189.5" y="1110.9961">removeAllListeners(event: string | symbol) : Readable</text><ellipse cx="180.5" cy="1120.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="189.5" y="1123.9512">removeListener(event: "close", listener: Function) : Readable</text><ellipse cx="180.5" cy="1133.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="189.5" y="1136.9063">removeListener(event: "data", listener: Function) : Readable</text><ellipse cx="180.5" cy="1146.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="189.5" y="1149.8613">removeListener(event: "end", listener: Function) : Readable</text><ellipse cx="180.5" cy="1159.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="189.5" y="1162.8164">removeListener(event: "error", listener: Function) : Readable</text><ellipse cx="180.5" cy="1172.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="189.5" y="1175.7715">removeListener(event: "pause", listener: Function) : Readable</text><ellipse cx="180.5" cy="1185.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="189.5" y="1188.7266">removeListener(event: "readable", listener: Function) : Readable</text><ellipse cx="180.5" cy="1198.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="189.5" y="1201.6816">removeListener(event: "resume", listener: Function) : Readable</text><ellipse cx="180.5" cy="1211.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="189.5" y="1214.6367">removeListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="180.5" cy="1223.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="189.5" y="1227.5918">resume() : Readable</text><ellipse cx="180.5" cy="1236.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="189.5" y="1240.5469">setEncoding(encoding: BufferEncoding) : Readable</text><ellipse cx="180.5" cy="1249.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="189.5" y="1253.502">setMaxListeners(n: number) : Readable</text><ellipse cx="180.5" cy="1262.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="189.5" y="1266.457">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="180.5" cy="1275.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="189.5" y="1279.4121">unpipe(destination: WritableStream) : Readable</text><ellipse cx="180.5" cy="1288.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="189.5" y="1292.3672">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="180.5" cy="1301.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="189.5" y="1305.3223">wrap(stream: ReadableStream) : Readable</text><ellipse cx="180.5" cy="1314.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="189.5" y="1318.2773">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="180.5" cy="1327.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="189.5" y="1331.2324">_construct(callback: Function) : void</text><ellipse cx="180.5" cy="1340.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="189.5" y="1344.1875">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="180.5" cy="1353.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="189.5" y="1357.1426">_read(size: number) : void</text><!--MD5=[93f77cf1cd71031e7728e23fe162cbe1]
class Writable--><rect codeLine="230" fill="#FEFECE" filter="url(#fj0cxsommxcwa)" height="1213.957" id="Writable" style="stroke:#A80036;stroke-width:1.5;" width="637" x="841.5" y="78"/><ellipse cx="1132.25" cy="94" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1134.7231,100.1431 Q1134.1421,100.4419 1133.5029,100.5913 Q1132.8638,100.7407 1132.1582,100.7407 Q1129.6514,100.7407 1128.3315,99.0889 Q1127.0117,97.437 1127.0117,94.3159 Q1127.0117,91.1865 1128.3315,89.5347 Q1129.6514,87.8828 1132.1582,87.8828 Q1132.8638,87.8828 1133.5112,88.0322 Q1134.1587,88.1816 1134.7231,88.4805 L1134.7231,91.2031 Q1134.0923,90.6221 1133.4988,90.3523 Q1132.9053,90.0825 1132.2744,90.0825 Q1130.9297,90.0825 1130.2449,91.1492 Q1129.5601,92.2158 1129.5601,94.3159 Q1129.5601,96.4077 1130.2449,97.4744 Q1130.9297,98.541 1132.2744,98.541 Q1132.9053,98.541 1133.4988,98.2712 Q1134.0923,98.0015 1134.7231,97.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="47" x="1152.75" y="98.5352">Writable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="842.5" x2="1477.5" y1="110" y2="110"/><ellipse cx="852.5" cy="121" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="861.5" y="124.6348">captureRejections : boolean</text><ellipse cx="852.5" cy="133.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="861.5" y="137.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="852.5" cy="146.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="861.5" y="150.5449">defaultMaxListeners : number</text><ellipse cx="852.5" cy="159.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="861.5" y="163.5">destroyed : boolean</text><ellipse cx="852.5" cy="172.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="861.5" y="176.4551">errorMonitor : typeof errorMonitor</text><ellipse cx="852.5" cy="185.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="861.5" y="189.4102">writable : boolean</text><ellipse cx="852.5" cy="198.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="861.5" y="202.3652">writableCorked : number</text><ellipse cx="852.5" cy="211.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="861.5" y="215.3203">writableEnded : boolean</text><ellipse cx="852.5" cy="224.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="861.5" y="228.2754">writableFinished : boolean</text><ellipse cx="852.5" cy="237.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="861.5" y="241.2305">writableHighWaterMark : number</text><ellipse cx="852.5" cy="250.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="861.5" y="254.1855">writableLength : number</text><ellipse cx="852.5" cy="263.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="861.5" y="267.1406">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="842.5" x2="1477.5" y1="273.4609" y2="273.4609"/><ellipse cx="852.5" cy="284.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="861.5" y="288.0957">addListener(event: "close", listener: Function) : Writable</text><ellipse cx="852.5" cy="297.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="861.5" y="301.0508">addListener(event: "drain", listener: Function) : Writable</text><ellipse cx="852.5" cy="310.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="861.5" y="314.0059">addListener(event: "error", listener: Function) : Writable</text><ellipse cx="852.5" cy="323.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="295" x="861.5" y="326.9609">addListener(event: "finish", listener: Function) : Writable</text><ellipse cx="852.5" cy="336.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="861.5" y="339.916">addListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="349.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="861.5" y="352.8711">addListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="362.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="861.5" y="365.8262">addListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="852.5" cy="375.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="861.5" y="378.7813">cork() : void</text><ellipse cx="852.5" cy="388.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="861.5" y="391.7363">destroy(error: Error) : Writable</text><ellipse cx="852.5" cy="401.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="861.5" y="404.6914">emit(event: "close") : boolean</text><ellipse cx="852.5" cy="414.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="861.5" y="417.6465">emit(event: "drain") : boolean</text><ellipse cx="852.5" cy="426.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="861.5" y="430.6016">emit(event: "error", err: Error) : boolean</text><ellipse cx="852.5" cy="439.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="861.5" y="443.5566">emit(event: "finish") : boolean</text><ellipse cx="852.5" cy="452.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="861.5" y="456.5117">emit(event: "pipe", src: Readable) : boolean</text><ellipse cx="852.5" cy="465.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="861.5" y="469.4668">emit(event: "unpipe", src: Readable) : boolean</text><ellipse cx="852.5" cy="478.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="861.5" y="482.4219">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="852.5" cy="491.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="861.5" y="495.377">end(cb: Function) : Writable</text><ellipse cx="852.5" cy="504.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="861.5" y="508.332">end(chunk: any, cb: Function) : Writable</text><ellipse cx="852.5" cy="517.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="354" x="861.5" y="521.2871">end(chunk: any, encoding: BufferEncoding, cb: Function) : Writable</text><ellipse cx="852.5" cy="530.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="861.5" y="534.2422">eventNames() : (string | symbol)[]</text><ellipse cx="852.5" cy="543.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="861.5" y="547.1973">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="852.5" cy="556.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="861.5" y="560.1523">getMaxListeners() : number</text><ellipse cx="852.5" cy="569.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="861.5" y="573.1074">listenerCount(eventName: string | symbol) : number</text><ellipse cx="852.5" cy="582.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="861.5" y="586.0625">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="852.5" cy="595.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="861.5" y="599.0176">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="852.5" cy="608.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="861.5" y="611.9727">off(eventName: string | symbol, listener: Function) : Writable</text><ellipse cx="852.5" cy="621.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="861.5" y="624.9277">on(event: "close", listener: Function) : Writable</text><ellipse cx="852.5" cy="634.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="861.5" y="637.8828">on(event: "drain", listener: Function) : Writable</text><ellipse cx="852.5" cy="647.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="861.5" y="650.8379">on(event: "error", listener: Function) : Writable</text><ellipse cx="852.5" cy="660.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="861.5" y="663.793">on(event: "finish", listener: Function) : Writable</text><ellipse cx="852.5" cy="673.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="861.5" y="676.748">on(event: "pipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="686.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="861.5" y="689.7031">on(event: "unpipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="699.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="861.5" y="702.6582">on(event: string | symbol, listener: Function) : Writable</text><ellipse cx="852.5" cy="711.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="861.5" y="715.6133">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="852.5" cy="724.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="861.5" y="728.5684">once(event: "close", listener: Function) : Writable</text><ellipse cx="852.5" cy="737.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="861.5" y="741.5234">once(event: "drain", listener: Function) : Writable</text><ellipse cx="852.5" cy="750.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="861.5" y="754.4785">once(event: "error", listener: Function) : Writable</text><ellipse cx="852.5" cy="763.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="861.5" y="767.4336">once(event: "finish", listener: Function) : Writable</text><ellipse cx="852.5" cy="776.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="861.5" y="780.3887">once(event: "pipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="789.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="861.5" y="793.3438">once(event: "unpipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="802.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="861.5" y="806.2988">once(event: string | symbol, listener: Function) : Writable</text><ellipse cx="852.5" cy="815.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="861.5" y="819.2539">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="852.5" cy="828.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="861.5" y="832.209">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="852.5" cy="841.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="861.5" y="845.1641">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="852.5" cy="854.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="861.5" y="858.1191">prependListener(event: "close", listener: Function) : Writable</text><ellipse cx="852.5" cy="867.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="861.5" y="871.0742">prependListener(event: "drain", listener: Function) : Writable</text><ellipse cx="852.5" cy="880.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="861.5" y="884.0293">prependListener(event: "error", listener: Function) : Writable</text><ellipse cx="852.5" cy="893.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="861.5" y="896.9844">prependListener(event: "finish", listener: Function) : Writable</text><ellipse cx="852.5" cy="906.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="861.5" y="909.9395">prependListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="919.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="861.5" y="922.8945">prependListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="932.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="861.5" y="935.8496">prependListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="852.5" cy="945.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="861.5" y="948.8047">prependOnceListener(event: "close", listener: Function) : Writable</text><ellipse cx="852.5" cy="958.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="861.5" y="961.7598">prependOnceListener(event: "drain", listener: Function) : Writable</text><ellipse cx="852.5" cy="971.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="861.5" y="974.7148">prependOnceListener(event: "error", listener: Function) : Writable</text><ellipse cx="852.5" cy="984.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="348" x="861.5" y="987.6699">prependOnceListener(event: "finish", listener: Function) : Writable</text><ellipse cx="852.5" cy="996.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="861.5" y="1000.625">prependOnceListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="1009.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="861.5" y="1013.5801">prependOnceListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="1022.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="861.5" y="1026.5352">prependOnceListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="852.5" cy="1035.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="861.5" y="1039.4902">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="852.5" cy="1048.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="861.5" y="1052.4453">removeAllListeners(event: string | symbol) : Writable</text><ellipse cx="852.5" cy="1061.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="861.5" y="1065.4004">removeListener(event: "close", listener: Function) : Writable</text><ellipse cx="852.5" cy="1074.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="861.5" y="1078.3555">removeListener(event: "drain", listener: Function) : Writable</text><ellipse cx="852.5" cy="1087.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="861.5" y="1091.3105">removeListener(event: "error", listener: Function) : Writable</text><ellipse cx="852.5" cy="1100.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="861.5" y="1104.2656">removeListener(event: "finish", listener: Function) : Writable</text><ellipse cx="852.5" cy="1113.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="861.5" y="1117.2207">removeListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="1126.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="861.5" y="1130.1758">removeListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="852.5" cy="1139.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="861.5" y="1143.1309">removeListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="852.5" cy="1152.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="861.5" y="1156.0859">setDefaultEncoding(encoding: BufferEncoding) : Writable</text><ellipse cx="852.5" cy="1165.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="861.5" y="1169.041">setMaxListeners(n: number) : Writable</text><ellipse cx="852.5" cy="1178.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="861.5" y="1181.9961">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="852.5" cy="1191.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="861.5" y="1194.9512">uncork() : void</text><ellipse cx="852.5" cy="1204.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="861.5" y="1207.9063">write(chunk: any, callback: Function) : boolean</text><ellipse cx="852.5" cy="1217.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="861.5" y="1220.8613">write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean</text><ellipse cx="852.5" cy="1230.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="861.5" y="1233.8164">_construct(callback: Function) : void</text><ellipse cx="852.5" cy="1243.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="861.5" y="1246.7715">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="852.5" cy="1256.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="861.5" y="1259.7266">_final(callback: Function) : void</text><ellipse cx="852.5" cy="1269.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="861.5" y="1272.6816">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="852.5" cy="1282.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="861.5" y="1285.6367">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[8f07f51d887e64eddc161f608ee0ddb0]
class Socket--><rect codeLine="323" fill="#FEFECE" filter="url(#fj0cxsommxcwa)" height="2030.127" id="Socket" style="stroke:#A80036;stroke-width:1.5;" width="800" x="7" y="3086"/><ellipse cx="384.25" cy="3102" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M386.7231,3108.1431 Q386.1421,3108.4419 385.5029,3108.5913 Q384.8638,3108.7407 384.1582,3108.7407 Q381.6514,3108.7407 380.3315,3107.0889 Q379.0117,3105.437 379.0117,3102.3159 Q379.0117,3099.1865 380.3315,3097.5347 Q381.6514,3095.8828 384.1582,3095.8828 Q384.8638,3095.8828 385.5112,3096.0322 Q386.1587,3096.1816 386.7231,3096.4805 L386.7231,3099.2031 Q386.0923,3098.6221 385.4988,3098.3523 Q384.9053,3098.0825 384.2744,3098.0825 Q382.9297,3098.0825 382.2449,3099.1492 Q381.5601,3100.2158 381.5601,3102.3159 Q381.5601,3104.4077 382.2449,3105.4744 Q382.9297,3106.541 384.2744,3106.541 Q384.9053,3106.541 385.4988,3106.2712 Q386.0923,3106.0015 386.7231,3105.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="37" x="404.75" y="3106.5352">Socket</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="806" y1="3118" y2="3118"/><ellipse cx="18" cy="3129" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="3132.6348">allowHalfOpen : boolean</text><ellipse cx="18" cy="3141.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="27" y="3145.5898">bufferSize : number</text><ellipse cx="18" cy="3154.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="3158.5449">bytesRead : number</text><ellipse cx="18" cy="3167.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="27" y="3171.5">bytesWritten : number</text><ellipse cx="18" cy="3180.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="3184.4551">captureRejections : boolean</text><ellipse cx="18" cy="3193.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="3197.4102">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="3206.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="27" y="3210.3652">connecting : boolean</text><ellipse cx="18" cy="3219.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="3223.3203">defaultMaxListeners : number</text><ellipse cx="18" cy="3232.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="3236.2754">destroyed : boolean</text><ellipse cx="18" cy="3245.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="3249.2305">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="3258.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="27" y="3262.1855">localAddress : string</text><ellipse cx="18" cy="3271.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="3275.1406">localPort : number</text><ellipse cx="18" cy="3284.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="3288.0957">readable : boolean</text><ellipse cx="18" cy="3297.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="3301.0508">readableAborted : boolean</text><ellipse cx="18" cy="3310.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="3314.0059">readableDidRead : boolean</text><ellipse cx="18" cy="3323.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="27" y="3326.9609">readableEncoding : null | BufferEncoding</text><ellipse cx="18" cy="3336.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="27" y="3339.916">readableEnded : boolean</text><ellipse cx="18" cy="3349.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="3352.8711">readableFlowing : null | boolean</text><ellipse cx="18" cy="3362.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="27" y="3365.8262">readableHighWaterMark : number</text><ellipse cx="18" cy="3375.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="3378.7813">readableLength : number</text><ellipse cx="18" cy="3388.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="27" y="3391.7363">readableObjectMode : boolean</text><ellipse cx="18" cy="3401.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="3404.6914">readyState : SocketReadyState</text><ellipse cx="18" cy="3414.0117" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="27" y="3417.6465">remoteAddress : string</text><ellipse cx="18" cy="3426.9668" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="27" y="3430.6016">remoteFamily : string</text><ellipse cx="18" cy="3439.9219" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="27" y="3443.5566">remotePort : number</text><ellipse cx="18" cy="3452.877" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="27" y="3456.5117">timeout : number</text><ellipse cx="18" cy="3465.832" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="3469.4668">writable : boolean</text><ellipse cx="18" cy="3478.7871" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="27" y="3482.4219">writableCorked : number</text><ellipse cx="18" cy="3491.7422" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="27" y="3495.377">writableEnded : boolean</text><ellipse cx="18" cy="3504.6973" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="3508.332">writableFinished : boolean</text><ellipse cx="18" cy="3517.6523" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="27" y="3521.2871">writableHighWaterMark : number</text><ellipse cx="18" cy="3530.6074" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="27" y="3534.2422">writableLength : number</text><ellipse cx="18" cy="3543.5625" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="3547.1973">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="806" y1="3553.5176" y2="3553.5176"/><ellipse cx="18" cy="3564.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="3568.1523">addListener(event: string, listener: Function) : Socket</text><ellipse cx="18" cy="3577.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="27" y="3581.1074">addListener(event: "close", listener: Function) : Socket</text><ellipse cx="18" cy="3590.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="27" y="3594.0625">addListener(event: "connect", listener: Function) : Socket</text><ellipse cx="18" cy="3603.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="27" y="3607.0176">addListener(event: "data", listener: Function) : Socket</text><ellipse cx="18" cy="3616.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="27" y="3619.9727">addListener(event: "drain", listener: Function) : Socket</text><ellipse cx="18" cy="3629.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="27" y="3632.9277">addListener(event: "end", listener: Function) : Socket</text><ellipse cx="18" cy="3642.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="27" y="3645.8828">addListener(event: "error", listener: Function) : Socket</text><ellipse cx="18" cy="3655.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="27" y="3658.8379">addListener(event: "lookup", listener: Function) : Socket</text><ellipse cx="18" cy="3668.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="27" y="3671.793">addListener(event: "ready", listener: Function) : Socket</text><ellipse cx="18" cy="3681.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="3684.748">addListener(event: "timeout", listener: Function) : Socket</text><ellipse cx="18" cy="3694.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="171" x="27" y="3697.7031">address() : Object | AddressInfo</text><ellipse cx="18" cy="3707.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="410" x="27" y="3710.6582">connect(options: SocketConnectOpts, connectionListener: Function) : Socket</text><ellipse cx="18" cy="3719.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="27" y="3723.6133">connect(port: number, host: string, connectionListener: Function) : Socket</text><ellipse cx="18" cy="3732.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="328" x="27" y="3736.5684">connect(port: number, connectionListener: Function) : Socket</text><ellipse cx="18" cy="3745.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="27" y="3749.5234">connect(path: string, connectionListener: Function) : Socket</text><ellipse cx="18" cy="3758.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="27" y="3762.4785">cork() : void</text><ellipse cx="18" cy="3771.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="27" y="3775.4336">destroy(error: Error) : Socket</text><ellipse cx="18" cy="3784.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="3788.3887">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="3797.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="27" y="3801.3438">emit(event: "close", hadError: boolean) : boolean</text><ellipse cx="18" cy="3810.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="3814.2988">emit(event: "connect") : boolean</text><ellipse cx="18" cy="3823.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="27" y="3827.2539">emit(event: "data", data: Buffer) : boolean</text><ellipse cx="18" cy="3836.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="3840.209">emit(event: "drain") : boolean</text><ellipse cx="18" cy="3849.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="3853.1641">emit(event: "end") : boolean</text><ellipse cx="18" cy="3862.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="3866.1191">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="3875.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="502" x="27" y="3879.0742">emit(event: "lookup", err: Error, address: string, family: string | number, host: string) : boolean</text><ellipse cx="18" cy="3888.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="27" y="3892.0293">emit(event: "ready") : boolean</text><ellipse cx="18" cy="3901.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="27" y="3904.9844">emit(event: "timeout") : boolean</text><ellipse cx="18" cy="3914.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="168" x="27" y="3917.9395">end(callback: Function) : Socket</text><ellipse cx="18" cy="3927.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="314" x="27" y="3930.8945">end(buffer: string | Uint8Array, callback: Function) : Socket</text><ellipse cx="18" cy="3940.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="440" x="27" y="3943.8496">end(str: string | Uint8Array, encoding: BufferEncoding, callback: Function) : Socket</text><ellipse cx="18" cy="3953.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="3956.8047">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="3966.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="27" y="3969.7598">from(src: string | Object | ArrayBuffer | Blob | Promise&lt;any&gt; | AsyncGeneratorFunction | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;) : Duplex</text><ellipse cx="18" cy="3979.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="3982.7148">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="3992.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="3995.6699">getMaxListeners() : number</text><ellipse cx="18" cy="4004.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="27" y="4008.625">isDisturbed(stream: Readable | ReadableStream) : boolean</text><ellipse cx="18" cy="4017.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="4021.5801">isPaused() : boolean</text><ellipse cx="18" cy="4030.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="4034.5352">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="4043.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="4047.4902">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="4056.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="4060.4453">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="4069.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="27" y="4073.4004">off(eventName: string | symbol, listener: Function) : Socket</text><ellipse cx="18" cy="4082.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="232" x="27" y="4086.3555">on(event: string, listener: Function) : Socket</text><ellipse cx="18" cy="4095.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="236" x="27" y="4099.3105">on(event: "close", listener: Function) : Socket</text><ellipse cx="18" cy="4108.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="27" y="4112.2656">on(event: "connect", listener: Function) : Socket</text><ellipse cx="18" cy="4121.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="27" y="4125.2207">on(event: "data", listener: Function) : Socket</text><ellipse cx="18" cy="4134.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="236" x="27" y="4138.1758">on(event: "drain", listener: Function) : Socket</text><ellipse cx="18" cy="4147.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="228" x="27" y="4151.1309">on(event: "end", listener: Function) : Socket</text><ellipse cx="18" cy="4160.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="236" x="27" y="4164.0859">on(event: "error", listener: Function) : Socket</text><ellipse cx="18" cy="4173.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="27" y="4177.041">on(event: "lookup", listener: Function) : Socket</text><ellipse cx="18" cy="4186.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="27" y="4189.9961">on(event: "ready", listener: Function) : Socket</text><ellipse cx="18" cy="4199.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="27" y="4202.9512">on(event: "timeout", listener: Function) : Socket</text><ellipse cx="18" cy="4212.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="4215.9063">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="4225.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="27" y="4228.8613">once(event: string, listener: Function) : Socket</text><ellipse cx="18" cy="4238.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="27" y="4241.8164">once(event: "close", listener: Function) : Socket</text><ellipse cx="18" cy="4251.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="27" y="4254.7715">once(event: "connect", listener: Function) : Socket</text><ellipse cx="18" cy="4264.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="27" y="4267.7266">once(event: "data", listener: Function) : Socket</text><ellipse cx="18" cy="4277.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="27" y="4280.6816">once(event: "drain", listener: Function) : Socket</text><ellipse cx="18" cy="4290.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="27" y="4293.6367">once(event: "end", listener: Function) : Socket</text><ellipse cx="18" cy="4302.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="27" y="4306.5918">once(event: "error", listener: Function) : Socket</text><ellipse cx="18" cy="4315.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="27" y="4319.5469">once(event: "lookup", listener: Function) : Socket</text><ellipse cx="18" cy="4328.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="27" y="4332.502">once(event: "ready", listener: Function) : Socket</text><ellipse cx="18" cy="4341.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="27" y="4345.457">once(event: "timeout", listener: Function) : Socket</text><ellipse cx="18" cy="4354.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="4358.4121">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="4367.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="4371.3672">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="4380.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="27" y="4384.3223">pause() : Socket</text><ellipse cx="18" cy="4393.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="4397.2773">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="4406.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="27" y="4410.2324">prependListener(event: string, listener: Function) : Socket</text><ellipse cx="18" cy="4419.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="4423.1875">prependListener(event: "close", listener: Function) : Socket</text><ellipse cx="18" cy="4432.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="4436.1426">prependListener(event: "connect", listener: Function) : Socket</text><ellipse cx="18" cy="4445.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="27" y="4449.0977">prependListener(event: "data", listener: Function) : Socket</text><ellipse cx="18" cy="4458.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="4462.0527">prependListener(event: "drain", listener: Function) : Socket</text><ellipse cx="18" cy="4471.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="27" y="4475.0078">prependListener(event: "end", listener: Function) : Socket</text><ellipse cx="18" cy="4484.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="4487.9629">prependListener(event: "error", listener: Function) : Socket</text><ellipse cx="18" cy="4497.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="27" y="4500.918">prependListener(event: "lookup", listener: Function) : Socket</text><ellipse cx="18" cy="4510.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="27" y="4513.873">prependListener(event: "ready", listener: Function) : Socket</text><ellipse cx="18" cy="4523.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="27" y="4526.8281">prependListener(event: "timeout", listener: Function) : Socket</text><ellipse cx="18" cy="4536.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="27" y="4539.7832">prependOnceListener(event: string, listener: Function) : Socket</text><ellipse cx="18" cy="4549.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="27" y="4552.7383">prependOnceListener(event: "close", listener: Function) : Socket</text><ellipse cx="18" cy="4562.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="27" y="4565.6934">prependOnceListener(event: "connect", listener: Function) : Socket</text><ellipse cx="18" cy="4575.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="27" y="4578.6484">prependOnceListener(event: "data", listener: Function) : Socket</text><ellipse cx="18" cy="4587.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="27" y="4591.6035">prependOnceListener(event: "drain", listener: Function) : Socket</text><ellipse cx="18" cy="4600.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="27" y="4604.5586">prependOnceListener(event: "end", listener: Function) : Socket</text><ellipse cx="18" cy="4613.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="27" y="4617.5137">prependOnceListener(event: "error", listener: Function) : Socket</text><ellipse cx="18" cy="4626.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="347" x="27" y="4630.4688">prependOnceListener(event: "lookup", listener: Function) : Socket</text><ellipse cx="18" cy="4639.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="340" x="27" y="4643.4238">prependOnceListener(event: "ready", listener: Function) : Socket</text><ellipse cx="18" cy="4652.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="27" y="4656.3789">prependOnceListener(event: "timeout", listener: Function) : Socket</text><ellipse cx="18" cy="4665.6992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="4669.334">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="18" cy="4678.6543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="4682.2891">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="4691.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="4695.2441">read(size: number) : any</text><ellipse cx="18" cy="4704.5645" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="27" y="4708.1992">ref() : Socket</text><ellipse cx="18" cy="4717.5195" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="271" x="27" y="4721.1543">removeAllListeners(event: string | symbol) : Socket</text><ellipse cx="18" cy="4730.4746" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="27" y="4734.1094">removeListener(event: "close", listener: Function) : Socket</text><ellipse cx="18" cy="4743.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="27" y="4747.0645">removeListener(event: "data", listener: Function) : Socket</text><ellipse cx="18" cy="4756.3848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="27" y="4760.0195">removeListener(event: "end", listener: Function) : Socket</text><ellipse cx="18" cy="4769.3398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="27" y="4772.9746">removeListener(event: "error", listener: Function) : Socket</text><ellipse cx="18" cy="4782.2949" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="27" y="4785.9297">removeListener(event: "pause", listener: Function) : Socket</text><ellipse cx="18" cy="4795.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="27" y="4798.8848">removeListener(event: "readable", listener: Function) : Socket</text><ellipse cx="18" cy="4808.2051" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="27" y="4811.8398">removeListener(event: "resume", listener: Function) : Socket</text><ellipse cx="18" cy="4821.1602" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="350" x="27" y="4824.7949">removeListener(event: string | symbol, listener: Function) : Socket</text><ellipse cx="18" cy="4834.1152" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="27" y="4837.75">resume() : Socket</text><ellipse cx="18" cy="4847.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="27" y="4850.7051">setDefaultEncoding(encoding: BufferEncoding) : Socket</text><ellipse cx="18" cy="4860.0254" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="27" y="4863.6602">setEncoding(encoding: BufferEncoding) : Socket</text><ellipse cx="18" cy="4872.9805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="27" y="4876.6152">setKeepAlive(enable: boolean, initialDelay: number) : Socket</text><ellipse cx="18" cy="4885.9355" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="4889.5703">setMaxListeners(n: number) : Socket</text><ellipse cx="18" cy="4898.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="27" y="4902.5254">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="18" cy="4911.8457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="204" x="27" y="4915.4805">setNoDelay(noDelay: boolean) : Socket</text><ellipse cx="18" cy="4924.8008" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="27" y="4928.4355">setTimeout(timeout: number, callback: Function) : Socket</text><ellipse cx="18" cy="4937.7559" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="27" y="4941.3906">uncork() : void</text><ellipse cx="18" cy="4950.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="235" x="27" y="4954.3457">unpipe(destination: WritableStream) : Socket</text><ellipse cx="18" cy="4963.666" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="81" x="27" y="4967.3008">unref() : Socket</text><ellipse cx="18" cy="4976.6211" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="27" y="4980.2559">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="18" cy="4989.5762" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="206" x="27" y="4993.2109">wrap(stream: ReadableStream) : Socket</text><ellipse cx="18" cy="5002.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="5006.166">write(buffer: string | Uint8Array, cb: Function) : boolean</text><ellipse cx="18" cy="5015.4863" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="424" x="27" y="5019.1211">write(str: string | Uint8Array, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="18" cy="5028.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="5032.0762">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="5041.3965" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="5045.0313">_construct(callback: Function) : void</text><ellipse cx="18" cy="5054.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="5057.9863">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="5067.3066" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="27" y="5070.9414">_final(callback: Function) : void</text><ellipse cx="18" cy="5080.2617" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="5083.8965">_read(size: number) : void</text><ellipse cx="18" cy="5093.2168" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="27" y="5096.8516">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="18" cy="5106.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="27" y="5109.8066">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[004b1d6c4ca8aad4ba8b586a335ed4f3]
class Transform--><rect codeLine="479" fill="#FEFECE" filter="url(#fj0cxsommxcwa)" height="1628.5195" id="Transform" style="stroke:#A80036;stroke-width:1.5;" width="800" x="842" y="3286.5"/><ellipse cx="1207.75" cy="3302.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1210.2231,3308.6431 Q1209.6421,3308.9419 1209.0029,3309.0913 Q1208.3638,3309.2407 1207.6582,3309.2407 Q1205.1514,3309.2407 1203.8315,3307.5889 Q1202.5117,3305.937 1202.5117,3302.8159 Q1202.5117,3299.6865 1203.8315,3298.0347 Q1205.1514,3296.3828 1207.6582,3296.3828 Q1208.3638,3296.3828 1209.0112,3296.5322 Q1209.6587,3296.6816 1210.2231,3296.9805 L1210.2231,3299.7031 Q1209.5923,3299.1221 1208.9988,3298.8523 Q1208.4053,3298.5825 1207.7744,3298.5825 Q1206.4297,3298.5825 1205.7449,3299.6492 Q1205.0601,3300.7158 1205.0601,3302.8159 Q1205.0601,3304.9077 1205.7449,3305.9744 Q1206.4297,3307.041 1207.7744,3307.041 Q1208.4053,3307.041 1208.9988,3306.7712 Q1209.5923,3306.5015 1210.2231,3305.9204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="60" x="1228.25" y="3307.0352">Transform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="843" x2="1641" y1="3318.5" y2="3318.5"/><ellipse cx="853" cy="3329.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="862" y="3333.1348">allowHalfOpen : boolean</text><ellipse cx="853" cy="3342.4551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="862" y="3346.0898">captureRejections : boolean</text><ellipse cx="853" cy="3355.4102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="862" y="3359.0449">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="853" cy="3368.3652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="862" y="3372">defaultMaxListeners : number</text><ellipse cx="853" cy="3381.3203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="862" y="3384.9551">destroyed : boolean</text><ellipse cx="853" cy="3394.2754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="862" y="3397.9102">errorMonitor : typeof errorMonitor</text><ellipse cx="853" cy="3407.2305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="862" y="3410.8652">readable : boolean</text><ellipse cx="853" cy="3420.1855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="862" y="3423.8203">readableAborted : boolean</text><ellipse cx="853" cy="3433.1406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="862" y="3436.7754">readableDidRead : boolean</text><ellipse cx="853" cy="3446.0957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="862" y="3449.7305">readableEncoding : null | BufferEncoding</text><ellipse cx="853" cy="3459.0508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="862" y="3462.6855">readableEnded : boolean</text><ellipse cx="853" cy="3472.0059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="862" y="3475.6406">readableFlowing : null | boolean</text><ellipse cx="853" cy="3484.9609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="862" y="3488.5957">readableHighWaterMark : number</text><ellipse cx="853" cy="3497.916" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="862" y="3501.5508">readableLength : number</text><ellipse cx="853" cy="3510.8711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="862" y="3514.5059">readableObjectMode : boolean</text><ellipse cx="853" cy="3523.8262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="862" y="3527.4609">writable : boolean</text><ellipse cx="853" cy="3536.7813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="862" y="3540.416">writableCorked : number</text><ellipse cx="853" cy="3549.7363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="862" y="3553.3711">writableEnded : boolean</text><ellipse cx="853" cy="3562.6914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="862" y="3566.3262">writableFinished : boolean</text><ellipse cx="853" cy="3575.6465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="862" y="3579.2813">writableHighWaterMark : number</text><ellipse cx="853" cy="3588.6016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="862" y="3592.2363">writableLength : number</text><ellipse cx="853" cy="3601.5566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="862" y="3605.1914">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="843" x2="1641" y1="3611.5117" y2="3611.5117"/><ellipse cx="853" cy="3622.5117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="862" y="3626.1465">addListener(event: "close", listener: Function) : Transform</text><ellipse cx="853" cy="3635.4668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="862" y="3639.1016">addListener(event: "data", listener: Function) : Transform</text><ellipse cx="853" cy="3648.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="299" x="862" y="3652.0566">addListener(event: "end", listener: Function) : Transform</text><ellipse cx="853" cy="3661.377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="862" y="3665.0117">addListener(event: "error", listener: Function) : Transform</text><ellipse cx="853" cy="3674.332" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="311" x="862" y="3677.9668">addListener(event: "pause", listener: Function) : Transform</text><ellipse cx="853" cy="3687.2871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="862" y="3690.9219">addListener(event: "readable", listener: Function) : Transform</text><ellipse cx="853" cy="3700.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="862" y="3703.877">addListener(event: "resume", listener: Function) : Transform</text><ellipse cx="853" cy="3713.1973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="352" x="862" y="3716.832">addListener(event: string | symbol, listener: Function) : Transform</text><ellipse cx="853" cy="3726.1523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="862" y="3729.7871">cork() : void</text><ellipse cx="853" cy="3739.1074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="177" x="862" y="3742.7422">destroy(error: Error) : Transform</text><ellipse cx="853" cy="3752.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="862" y="3755.6973">emit(event: "close") : boolean</text><ellipse cx="853" cy="3765.0176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="862" y="3768.6523">emit(event: "data", chunk: any) : boolean</text><ellipse cx="853" cy="3777.9727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="862" y="3781.6074">emit(event: "end") : boolean</text><ellipse cx="853" cy="3790.9277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="862" y="3794.5625">emit(event: "error", err: Error) : boolean</text><ellipse cx="853" cy="3803.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="862" y="3807.5176">emit(event: "pause") : boolean</text><ellipse cx="853" cy="3816.8379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="862" y="3820.4727">emit(event: "readable") : boolean</text><ellipse cx="853" cy="3829.793" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="862" y="3833.4277">emit(event: "resume") : boolean</text><ellipse cx="853" cy="3842.748" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="862" y="3846.3828">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="853" cy="3855.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="862" y="3859.3379">end(cb: Function) : Transform</text><ellipse cx="853" cy="3868.6582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="224" x="862" y="3872.293">end(chunk: any, cb: Function) : Transform</text><ellipse cx="853" cy="3881.6133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="862" y="3885.248">end(chunk: any, encoding: BufferEncoding, cb: Function) : Transform</text><ellipse cx="853" cy="3894.5684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="862" y="3898.2031">eventNames() : (string | symbol)[]</text><ellipse cx="853" cy="3907.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="862" y="3911.1582">from(src: string | Object | ArrayBuffer | Blob | Promise&lt;any&gt; | AsyncGeneratorFunction | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;) : Duplex</text><ellipse cx="853" cy="3920.4785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="862" y="3924.1133">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="853" cy="3933.4336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="862" y="3937.0684">getMaxListeners() : number</text><ellipse cx="853" cy="3946.3887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="862" y="3950.0234">isDisturbed(stream: Readable | ReadableStream) : boolean</text><ellipse cx="853" cy="3959.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="862" y="3962.9785">isPaused() : boolean</text><ellipse cx="853" cy="3972.2988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="862" y="3975.9336">listenerCount(eventName: string | symbol) : number</text><ellipse cx="853" cy="3985.2539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="862" y="3988.8887">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="853" cy="3998.209" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="862" y="4001.8438">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="853" cy="4011.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="862" y="4014.7988">off(eventName: string | symbol, listener: Function) : Transform</text><ellipse cx="853" cy="4024.1191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="862" y="4027.7539">on(event: "close", listener: Function) : Transform</text><ellipse cx="853" cy="4037.0742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="862" y="4040.709">on(event: "data", listener: Function) : Transform</text><ellipse cx="853" cy="4050.0293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="862" y="4053.6641">on(event: "end", listener: Function) : Transform</text><ellipse cx="853" cy="4062.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="862" y="4066.6191">on(event: "error", listener: Function) : Transform</text><ellipse cx="853" cy="4075.9395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="862" y="4079.5742">on(event: "pause", listener: Function) : Transform</text><ellipse cx="853" cy="4088.8945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="862" y="4092.5293">on(event: "readable", listener: Function) : Transform</text><ellipse cx="853" cy="4101.8496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="862" y="4105.4844">on(event: "resume", listener: Function) : Transform</text><ellipse cx="853" cy="4114.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="862" y="4118.4395">on(event: string | symbol, listener: Function) : Transform</text><ellipse cx="853" cy="4127.7598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="862" y="4131.3945">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="853" cy="4140.7148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="862" y="4144.3496">once(event: "close", listener: Function) : Transform</text><ellipse cx="853" cy="4153.6699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="862" y="4157.3047">once(event: "data", listener: Function) : Transform</text><ellipse cx="853" cy="4166.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="862" y="4170.2598">once(event: "end", listener: Function) : Transform</text><ellipse cx="853" cy="4179.5801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="862" y="4183.2148">once(event: "error", listener: Function) : Transform</text><ellipse cx="853" cy="4192.5352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="862" y="4196.1699">once(event: "pause", listener: Function) : Transform</text><ellipse cx="853" cy="4205.4902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="862" y="4209.125">once(event: "readable", listener: Function) : Transform</text><ellipse cx="853" cy="4218.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="862" y="4222.0801">once(event: "resume", listener: Function) : Transform</text><ellipse cx="853" cy="4231.4004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="862" y="4235.0352">once(event: string | symbol, listener: Function) : Transform</text><ellipse cx="853" cy="4244.3555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="862" y="4247.9902">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="853" cy="4257.3105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="862" y="4260.9453">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="853" cy="4270.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="862" y="4273.9004">pause() : Transform</text><ellipse cx="853" cy="4283.2207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="862" y="4286.8555">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="853" cy="4296.1758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="332" x="862" y="4299.8105">prependListener(event: "close", listener: Function) : Transform</text><ellipse cx="853" cy="4309.1309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="862" y="4312.7656">prependListener(event: "data", listener: Function) : Transform</text><ellipse cx="853" cy="4322.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="862" y="4325.7207">prependListener(event: "end", listener: Function) : Transform</text><ellipse cx="853" cy="4335.041" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="332" x="862" y="4338.6758">prependListener(event: "error", listener: Function) : Transform</text><ellipse cx="853" cy="4347.9961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="862" y="4351.6309">prependListener(event: "pause", listener: Function) : Transform</text><ellipse cx="853" cy="4360.9512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="350" x="862" y="4364.5859">prependListener(event: "readable", listener: Function) : Transform</text><ellipse cx="853" cy="4373.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="862" y="4377.541">prependListener(event: "resume", listener: Function) : Transform</text><ellipse cx="853" cy="4386.8613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="377" x="862" y="4390.4961">prependListener(event: string | symbol, listener: Function) : Transform</text><ellipse cx="853" cy="4399.8164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="862" y="4403.4512">prependOnceListener(event: "close", listener: Function) : Transform</text><ellipse cx="853" cy="4412.7715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="862" y="4416.4063">prependOnceListener(event: "data", listener: Function) : Transform</text><ellipse cx="853" cy="4425.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="352" x="862" y="4429.3613">prependOnceListener(event: "end", listener: Function) : Transform</text><ellipse cx="853" cy="4438.6816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="862" y="4442.3164">prependOnceListener(event: "error", listener: Function) : Transform</text><ellipse cx="853" cy="4451.6367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="364" x="862" y="4455.2715">prependOnceListener(event: "pause", listener: Function) : Transform</text><ellipse cx="853" cy="4464.5918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="378" x="862" y="4468.2266">prependOnceListener(event: "readable", listener: Function) : Transform</text><ellipse cx="853" cy="4477.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="862" y="4481.1816">prependOnceListener(event: "resume", listener: Function) : Transform</text><ellipse cx="853" cy="4490.502" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="862" y="4494.1367">prependOnceListener(event: string | symbol, listener: Function) : Transform</text><ellipse cx="853" cy="4503.457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="862" y="4507.0918">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="853" cy="4516.4121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="862" y="4520.0469">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="853" cy="4529.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="862" y="4533.002">read(size: number) : any</text><ellipse cx="853" cy="4542.3223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="862" y="4545.957">removeAllListeners(event: string | symbol) : Transform</text><ellipse cx="853" cy="4555.2773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="862" y="4558.9121">removeListener(event: "close", listener: Function) : Transform</text><ellipse cx="853" cy="4568.2324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="862" y="4571.8672">removeListener(event: "data", listener: Function) : Transform</text><ellipse cx="853" cy="4581.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="862" y="4584.8223">removeListener(event: "end", listener: Function) : Transform</text><ellipse cx="853" cy="4594.1426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="862" y="4597.7773">removeListener(event: "error", listener: Function) : Transform</text><ellipse cx="853" cy="4607.0977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="862" y="4610.7324">removeListener(event: "pause", listener: Function) : Transform</text><ellipse cx="853" cy="4620.0527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="862" y="4623.6875">removeListener(event: "readable", listener: Function) : Transform</text><ellipse cx="853" cy="4633.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="339" x="862" y="4636.6426">removeListener(event: "resume", listener: Function) : Transform</text><ellipse cx="853" cy="4645.9629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="862" y="4649.5977">removeListener(event: string | symbol, listener: Function) : Transform</text><ellipse cx="853" cy="4658.918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="862" y="4662.5527">resume() : Transform</text><ellipse cx="853" cy="4671.873" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="862" y="4675.5078">setDefaultEncoding(encoding: BufferEncoding) : Transform</text><ellipse cx="853" cy="4684.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="862" y="4688.4629">setEncoding(encoding: BufferEncoding) : Transform</text><ellipse cx="853" cy="4697.7832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="862" y="4701.418">setMaxListeners(n: number) : Transform</text><ellipse cx="853" cy="4710.7383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="862" y="4714.373">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="853" cy="4723.6934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="862" y="4727.3281">uncork() : void</text><ellipse cx="853" cy="4736.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="862" y="4740.2832">unpipe(destination: WritableStream) : Transform</text><ellipse cx="853" cy="4749.6035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="862" y="4753.2383">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="853" cy="4762.5586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="228" x="862" y="4766.1934">wrap(stream: ReadableStream) : Transform</text><ellipse cx="853" cy="4775.5137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="862" y="4779.1484">write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="853" cy="4788.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="862" y="4792.1035">write(chunk: any, cb: Function) : boolean</text><ellipse cx="853" cy="4801.4238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="862" y="4805.0586">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="853" cy="4814.3789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="862" y="4818.0137">_construct(callback: Function) : void</text><ellipse cx="853" cy="4827.334" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="862" y="4830.9688">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="853" cy="4840.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="862" y="4843.9238">_final(callback: Function) : void</text><ellipse cx="853" cy="4853.2441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="224" x="862" y="4856.8789">_flush(callback: TransformCallback) : void</text><ellipse cx="853" cy="4866.1992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="862" y="4869.834">_read(size: number) : void</text><ellipse cx="853" cy="4879.1543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="459" x="862" y="4882.7891">_transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback) : void</text><ellipse cx="853" cy="4892.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="862" y="4895.7441">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="853" cy="4905.0645" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="862" y="4908.6992">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[53a1472f2276db14e765f88ac3fda3da]
reverse link Readable to Duplex--><path codeLine="229" d="M640.26,1382.71 C643.18,1396.07 646.1,1409.46 649.03,1422.86 " fill="none" id="Readable-backto-Duplex" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="633.42,1384.2,635.99,1363.17,647.09,1381.21,633.42,1384.2" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[b14a26cd20596b28f442b4a89d6e536c]
reverse link Writable to Duplex--><path codeLine="322" d="M1023.26,1311.73 C1015.24,1348.4 1007.13,1385.52 999,1422.74 " fill="none" id="Writable-backto-Duplex" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1016.46,1310.05,1027.57,1292.01,1030.13,1313.04,1016.46,1310.05" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[a4114feeeff1c6c6b384e3daf34d6def]
reverse link Duplex to Socket--><path codeLine="478" d="M641.43,3046.19 C638.5,3059.35 635.57,3072.55 632.63,3085.77 " fill="none" id="Duplex-backto-Socket" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="634.69,3044.24,645.87,3026.23,648.36,3047.28,634.69,3044.24" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[7d14d80e7db99eb0e17e10209142389b]
reverse link Duplex to Transform--><path codeLine="603" d="M1006.95,3045.93 C1024.72,3125.64 1042.75,3206.49 1060.51,3286.13 " fill="none" id="Duplex-backto-Transform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1000.08,3047.28,1002.56,3026.23,1013.74,3044.23,1000.08,3047.28" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[0973e188ec26c53b86d89eb33882a824]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "Duplex" {
    +allowHalfOpen : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Duplex
    +addListener(event: "data", listener: Function) : Duplex
    +addListener(event: "end", listener: Function) : Duplex
    +addListener(event: "error", listener: Function) : Duplex
    +addListener(event: "pause", listener: Function) : Duplex
    +addListener(event: "readable", listener: Function) : Duplex
    +addListener(event: "resume", listener: Function) : Duplex
    +addListener(event: string | symbol, listener: Function) : Duplex
    +cork() : void
    +destroy(error: Error) : Duplex
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : Duplex
    +end(chunk: any, cb: Function) : Duplex
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : Duplex
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | ArrayBuffer | Blob | Promise<any> | AsyncGeneratorFunction | Stream | Iterable<any> | AsyncIterable<any>) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: Readable | ReadableStream) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Duplex
    +on(event: "close", listener: Function) : Duplex
    +on(event: "data", listener: Function) : Duplex
    +on(event: "end", listener: Function) : Duplex
    +on(event: "error", listener: Function) : Duplex
    +on(event: "pause", listener: Function) : Duplex
    +on(event: "readable", listener: Function) : Duplex
    +on(event: "resume", listener: Function) : Duplex
    +on(event: string | symbol, listener: Function) : Duplex
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Duplex
    +once(event: "data", listener: Function) : Duplex
    +once(event: "end", listener: Function) : Duplex
    +once(event: "error", listener: Function) : Duplex
    +once(event: "pause", listener: Function) : Duplex
    +once(event: "readable", listener: Function) : Duplex
    +once(event: "resume", listener: Function) : Duplex
    +once(event: string | symbol, listener: Function) : Duplex
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Duplex
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Duplex
    +prependListener(event: "data", listener: Function) : Duplex
    +prependListener(event: "end", listener: Function) : Duplex
    +prependListener(event: "error", listener: Function) : Duplex
    +prependListener(event: "pause", listener: Function) : Duplex
    +prependListener(event: "readable", listener: Function) : Duplex
    +prependListener(event: "resume", listener: Function) : Duplex
    +prependListener(event: string | symbol, listener: Function) : Duplex
    +prependOnceListener(event: "close", listener: Function) : Duplex
    +prependOnceListener(event: "data", listener: Function) : Duplex
    +prependOnceListener(event: "end", listener: Function) : Duplex
    +prependOnceListener(event: "error", listener: Function) : Duplex
    +prependOnceListener(event: "pause", listener: Function) : Duplex
    +prependOnceListener(event: "readable", listener: Function) : Duplex
    +prependOnceListener(event: "resume", listener: Function) : Duplex
    +prependOnceListener(event: string | symbol, listener: Function) : Duplex
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Duplex
    +removeListener(event: "close", listener: Function) : Duplex
    +removeListener(event: "data", listener: Function) : Duplex
    +removeListener(event: "end", listener: Function) : Duplex
    +removeListener(event: "error", listener: Function) : Duplex
    +removeListener(event: "pause", listener: Function) : Duplex
    +removeListener(event: "readable", listener: Function) : Duplex
    +removeListener(event: "resume", listener: Function) : Duplex
    +removeListener(event: string | symbol, listener: Function) : Duplex
    +resume() : Duplex
    +setDefaultEncoding(encoding: BufferEncoding) : Duplex
    +setEncoding(encoding: BufferEncoding) : Duplex
    +setMaxListeners(n: number) : Duplex
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +uncork() : void
    +unpipe(destination: WritableStream) : Duplex
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Duplex
    +write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean
    +write(chunk: any, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_read(size: number) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
class "Readable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Readable
    +addListener(event: "data", listener: Function) : Readable
    +addListener(event: "end", listener: Function) : Readable
    +addListener(event: "error", listener: Function) : Readable
    +addListener(event: "pause", listener: Function) : Readable
    +addListener(event: "readable", listener: Function) : Readable
    +addListener(event: "resume", listener: Function) : Readable
    +addListener(event: string | symbol, listener: Function) : Readable
    +destroy(error: Error) : Readable
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +from(iterable: Iterable<any> | AsyncIterable<any>, options: ReadableOptions) : Readable
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: Readable | ReadableStream) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Readable
    +on(event: "close", listener: Function) : Readable
    +on(event: "data", listener: Function) : Readable
    +on(event: "end", listener: Function) : Readable
    +on(event: "error", listener: Function) : Readable
    +on(event: "pause", listener: Function) : Readable
    +on(event: "readable", listener: Function) : Readable
    +on(event: "resume", listener: Function) : Readable
    +on(event: string | symbol, listener: Function) : Readable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Readable
    +once(event: "data", listener: Function) : Readable
    +once(event: "end", listener: Function) : Readable
    +once(event: "error", listener: Function) : Readable
    +once(event: "pause", listener: Function) : Readable
    +once(event: "readable", listener: Function) : Readable
    +once(event: "resume", listener: Function) : Readable
    +once(event: string | symbol, listener: Function) : Readable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Readable
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Readable
    +prependListener(event: "data", listener: Function) : Readable
    +prependListener(event: "end", listener: Function) : Readable
    +prependListener(event: "error", listener: Function) : Readable
    +prependListener(event: "pause", listener: Function) : Readable
    +prependListener(event: "readable", listener: Function) : Readable
    +prependListener(event: "resume", listener: Function) : Readable
    +prependListener(event: string | symbol, listener: Function) : Readable
    +prependOnceListener(event: "close", listener: Function) : Readable
    +prependOnceListener(event: "data", listener: Function) : Readable
    +prependOnceListener(event: "end", listener: Function) : Readable
    +prependOnceListener(event: "error", listener: Function) : Readable
    +prependOnceListener(event: "pause", listener: Function) : Readable
    +prependOnceListener(event: "readable", listener: Function) : Readable
    +prependOnceListener(event: "resume", listener: Function) : Readable
    +prependOnceListener(event: string | symbol, listener: Function) : Readable
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Readable
    +removeListener(event: "close", listener: Function) : Readable
    +removeListener(event: "data", listener: Function) : Readable
    +removeListener(event: "end", listener: Function) : Readable
    +removeListener(event: "error", listener: Function) : Readable
    +removeListener(event: "pause", listener: Function) : Readable
    +removeListener(event: "readable", listener: Function) : Readable
    +removeListener(event: "resume", listener: Function) : Readable
    +removeListener(event: string | symbol, listener: Function) : Readable
    +resume() : Readable
    +setEncoding(encoding: BufferEncoding) : Readable
    +setMaxListeners(n: number) : Readable
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +unpipe(destination: WritableStream) : Readable
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Readable
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_read(size: number) : void
}
"Readable" <|- - "Duplex"
class "Writable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Writable
    +addListener(event: "drain", listener: Function) : Writable
    +addListener(event: "error", listener: Function) : Writable
    +addListener(event: "finish", listener: Function) : Writable
    +addListener(event: "pipe", listener: Function) : Writable
    +addListener(event: "unpipe", listener: Function) : Writable
    +addListener(event: string | symbol, listener: Function) : Writable
    +cork() : void
    +destroy(error: Error) : Writable
    +emit(event: "close") : boolean
    +emit(event: "drain") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "finish") : boolean
    +emit(event: "pipe", src: Readable) : boolean
    +emit(event: "unpipe", src: Readable) : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : Writable
    +end(chunk: any, cb: Function) : Writable
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : Writable
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Writable
    +on(event: "close", listener: Function) : Writable
    +on(event: "drain", listener: Function) : Writable
    +on(event: "error", listener: Function) : Writable
    +on(event: "finish", listener: Function) : Writable
    +on(event: "pipe", listener: Function) : Writable
    +on(event: "unpipe", listener: Function) : Writable
    +on(event: string | symbol, listener: Function) : Writable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Writable
    +once(event: "drain", listener: Function) : Writable
    +once(event: "error", listener: Function) : Writable
    +once(event: "finish", listener: Function) : Writable
    +once(event: "pipe", listener: Function) : Writable
    +once(event: "unpipe", listener: Function) : Writable
    +once(event: string | symbol, listener: Function) : Writable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Writable
    +prependListener(event: "drain", listener: Function) : Writable
    +prependListener(event: "error", listener: Function) : Writable
    +prependListener(event: "finish", listener: Function) : Writable
    +prependListener(event: "pipe", listener: Function) : Writable
    +prependListener(event: "unpipe", listener: Function) : Writable
    +prependListener(event: string | symbol, listener: Function) : Writable
    +prependOnceListener(event: "close", listener: Function) : Writable
    +prependOnceListener(event: "drain", listener: Function) : Writable
    +prependOnceListener(event: "error", listener: Function) : Writable
    +prependOnceListener(event: "finish", listener: Function) : Writable
    +prependOnceListener(event: "pipe", listener: Function) : Writable
    +prependOnceListener(event: "unpipe", listener: Function) : Writable
    +prependOnceListener(event: string | symbol, listener: Function) : Writable
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Writable
    +removeListener(event: "close", listener: Function) : Writable
    +removeListener(event: "drain", listener: Function) : Writable
    +removeListener(event: "error", listener: Function) : Writable
    +removeListener(event: "finish", listener: Function) : Writable
    +removeListener(event: "pipe", listener: Function) : Writable
    +removeListener(event: "unpipe", listener: Function) : Writable
    +removeListener(event: string | symbol, listener: Function) : Writable
    +setDefaultEncoding(encoding: BufferEncoding) : Writable
    +setMaxListeners(n: number) : Writable
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +uncork() : void
    +write(chunk: any, callback: Function) : boolean
    +write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Writable" <|.. "Duplex"
class "Socket" {
    +allowHalfOpen : boolean
    +bufferSize : number
    +bytesRead : number
    +bytesWritten : number
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    +connecting : boolean
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +localAddress : string
    +localPort : number
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +readyState : SocketReadyState
    +remoteAddress : string
    +remoteFamily : string
    +remotePort : number
    +timeout : number
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: string, listener: Function) : Socket
    +addListener(event: "close", listener: Function) : Socket
    +addListener(event: "connect", listener: Function) : Socket
    +addListener(event: "data", listener: Function) : Socket
    +addListener(event: "drain", listener: Function) : Socket
    +addListener(event: "end", listener: Function) : Socket
    +addListener(event: "error", listener: Function) : Socket
    +addListener(event: "lookup", listener: Function) : Socket
    +addListener(event: "ready", listener: Function) : Socket
    +addListener(event: "timeout", listener: Function) : Socket
    +address() : Object | AddressInfo
    +connect(options: SocketConnectOpts, connectionListener: Function) : Socket
    +connect(port: number, host: string, connectionListener: Function) : Socket
    +connect(port: number, connectionListener: Function) : Socket
    +connect(path: string, connectionListener: Function) : Socket
    +cork() : void
    +destroy(error: Error) : Socket
    +emit(event: string | symbol, args: any[]) : boolean
    +emit(event: "close", hadError: boolean) : boolean
    +emit(event: "connect") : boolean
    +emit(event: "data", data: Buffer) : boolean
    +emit(event: "drain") : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "lookup", err: Error, address: string, family: string | number, host: string) : boolean
    +emit(event: "ready") : boolean
    +emit(event: "timeout") : boolean
    +end(callback: Function) : Socket
    +end(buffer: string | Uint8Array, callback: Function) : Socket
    +end(str: string | Uint8Array, encoding: BufferEncoding, callback: Function) : Socket
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | ArrayBuffer | Blob | Promise<any> | AsyncGeneratorFunction | Stream | Iterable<any> | AsyncIterable<any>) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: Readable | ReadableStream) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Socket
    +on(event: string, listener: Function) : Socket
    +on(event: "close", listener: Function) : Socket
    +on(event: "connect", listener: Function) : Socket
    +on(event: "data", listener: Function) : Socket
    +on(event: "drain", listener: Function) : Socket
    +on(event: "end", listener: Function) : Socket
    +on(event: "error", listener: Function) : Socket
    +on(event: "lookup", listener: Function) : Socket
    +on(event: "ready", listener: Function) : Socket
    +on(event: "timeout", listener: Function) : Socket
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: string, listener: Function) : Socket
    +once(event: "close", listener: Function) : Socket
    +once(event: "connect", listener: Function) : Socket
    +once(event: "data", listener: Function) : Socket
    +once(event: "drain", listener: Function) : Socket
    +once(event: "end", listener: Function) : Socket
    +once(event: "error", listener: Function) : Socket
    +once(event: "lookup", listener: Function) : Socket
    +once(event: "ready", listener: Function) : Socket
    +once(event: "timeout", listener: Function) : Socket
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Socket
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: string, listener: Function) : Socket
    +prependListener(event: "close", listener: Function) : Socket
    +prependListener(event: "connect", listener: Function) : Socket
    +prependListener(event: "data", listener: Function) : Socket
    +prependListener(event: "drain", listener: Function) : Socket
    +prependListener(event: "end", listener: Function) : Socket
    +prependListener(event: "error", listener: Function) : Socket
    +prependListener(event: "lookup", listener: Function) : Socket
    +prependListener(event: "ready", listener: Function) : Socket
    +prependListener(event: "timeout", listener: Function) : Socket
    +prependOnceListener(event: string, listener: Function) : Socket
    +prependOnceListener(event: "close", listener: Function) : Socket
    +prependOnceListener(event: "connect", listener: Function) : Socket
    +prependOnceListener(event: "data", listener: Function) : Socket
    +prependOnceListener(event: "drain", listener: Function) : Socket
    +prependOnceListener(event: "end", listener: Function) : Socket
    +prependOnceListener(event: "error", listener: Function) : Socket
    +prependOnceListener(event: "lookup", listener: Function) : Socket
    +prependOnceListener(event: "ready", listener: Function) : Socket
    +prependOnceListener(event: "timeout", listener: Function) : Socket
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +ref() : Socket
    +removeAllListeners(event: string | symbol) : Socket
    +removeListener(event: "close", listener: Function) : Socket
    +removeListener(event: "data", listener: Function) : Socket
    +removeListener(event: "end", listener: Function) : Socket
    +removeListener(event: "error", listener: Function) : Socket
    +removeListener(event: "pause", listener: Function) : Socket
    +removeListener(event: "readable", listener: Function) : Socket
    +removeListener(event: "resume", listener: Function) : Socket
    +removeListener(event: string | symbol, listener: Function) : Socket
    +resume() : Socket
    +setDefaultEncoding(encoding: BufferEncoding) : Socket
    +setEncoding(encoding: BufferEncoding) : Socket
    +setKeepAlive(enable: boolean, initialDelay: number) : Socket
    +setMaxListeners(n: number) : Socket
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setNoDelay(noDelay: boolean) : Socket
    +setTimeout(timeout: number, callback: Function) : Socket
    +uncork() : void
    +unpipe(destination: WritableStream) : Socket
    +unref() : Socket
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Socket
    +write(buffer: string | Uint8Array, cb: Function) : boolean
    +write(str: string | Uint8Array, encoding: BufferEncoding, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_read(size: number) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Duplex" <|- - "Socket"
class "Transform" {
    +allowHalfOpen : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Transform
    +addListener(event: "data", listener: Function) : Transform
    +addListener(event: "end", listener: Function) : Transform
    +addListener(event: "error", listener: Function) : Transform
    +addListener(event: "pause", listener: Function) : Transform
    +addListener(event: "readable", listener: Function) : Transform
    +addListener(event: "resume", listener: Function) : Transform
    +addListener(event: string | symbol, listener: Function) : Transform
    +cork() : void
    +destroy(error: Error) : Transform
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : Transform
    +end(chunk: any, cb: Function) : Transform
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : Transform
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | ArrayBuffer | Blob | Promise<any> | AsyncGeneratorFunction | Stream | Iterable<any> | AsyncIterable<any>) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: Readable | ReadableStream) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Transform
    +on(event: "close", listener: Function) : Transform
    +on(event: "data", listener: Function) : Transform
    +on(event: "end", listener: Function) : Transform
    +on(event: "error", listener: Function) : Transform
    +on(event: "pause", listener: Function) : Transform
    +on(event: "readable", listener: Function) : Transform
    +on(event: "resume", listener: Function) : Transform
    +on(event: string | symbol, listener: Function) : Transform
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Transform
    +once(event: "data", listener: Function) : Transform
    +once(event: "end", listener: Function) : Transform
    +once(event: "error", listener: Function) : Transform
    +once(event: "pause", listener: Function) : Transform
    +once(event: "readable", listener: Function) : Transform
    +once(event: "resume", listener: Function) : Transform
    +once(event: string | symbol, listener: Function) : Transform
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Transform
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Transform
    +prependListener(event: "data", listener: Function) : Transform
    +prependListener(event: "end", listener: Function) : Transform
    +prependListener(event: "error", listener: Function) : Transform
    +prependListener(event: "pause", listener: Function) : Transform
    +prependListener(event: "readable", listener: Function) : Transform
    +prependListener(event: "resume", listener: Function) : Transform
    +prependListener(event: string | symbol, listener: Function) : Transform
    +prependOnceListener(event: "close", listener: Function) : Transform
    +prependOnceListener(event: "data", listener: Function) : Transform
    +prependOnceListener(event: "end", listener: Function) : Transform
    +prependOnceListener(event: "error", listener: Function) : Transform
    +prependOnceListener(event: "pause", listener: Function) : Transform
    +prependOnceListener(event: "readable", listener: Function) : Transform
    +prependOnceListener(event: "resume", listener: Function) : Transform
    +prependOnceListener(event: string | symbol, listener: Function) : Transform
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Transform
    +removeListener(event: "close", listener: Function) : Transform
    +removeListener(event: "data", listener: Function) : Transform
    +removeListener(event: "end", listener: Function) : Transform
    +removeListener(event: "error", listener: Function) : Transform
    +removeListener(event: "pause", listener: Function) : Transform
    +removeListener(event: "readable", listener: Function) : Transform
    +removeListener(event: "resume", listener: Function) : Transform
    +removeListener(event: string | symbol, listener: Function) : Transform
    +resume() : Transform
    +setDefaultEncoding(encoding: BufferEncoding) : Transform
    +setEncoding(encoding: BufferEncoding) : Transform
    +setMaxListeners(n: number) : Transform
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +uncork() : void
    +unpipe(destination: WritableStream) : Transform
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Transform
    +write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean
    +write(chunk: any, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_flush(callback: TransformCallback) : void
    +_read(size: number) : void
    +_transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Duplex" <|- - "Transform"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 17:46:50 CET 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>