<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="6899px" preserveAspectRatio="none" style="width:724px;height:6899px;background:#00000000;" version="1.1" viewBox="0 0 724 6899" width="724px" zoomAndPan="magnify"><defs><filter height="300%" id="f1tctgwpf4c8m2" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[5664b56fc48f45c883f47220d582106c]
class RelativeIndexable<T>--><rect codeLine="5" fill="#FEFECE" filter="url(#f1tctgwpf4c8m2)" height="52.9551" id="RelativeIndexable&lt;T&gt;" style="stroke:#A80036;stroke-width:1.5;" width="202" x="7" y="3491.5"/><ellipse cx="40" cy="3507.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M36.4277,3503.7651 L36.4277,3501.6069 L43.8071,3501.6069 L43.8071,3503.7651 L41.3418,3503.7651 L41.3418,3511.8418 L43.8071,3511.8418 L43.8071,3514 L36.4277,3514 L36.4277,3511.8418 L38.8931,3511.8418 L38.8931,3503.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="130" x="58" y="3512.0352">RelativeIndexable&lt;T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="208" y1="3523.5" y2="3523.5"/><ellipse cx="18" cy="3534.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="176" x="27" y="3538.1348">at(index: number) : undefined | T</text><!--MD5=[cb36e1f5dd1818f987d708963e595f6c]
class Uint8Array--><rect codeLine="8" fill="#FEFECE" filter="url(#f1tctgwpf4c8m2)" height="540.293" id="Uint8Array" style="stroke:#A80036;stroke-width:1.5;" width="394" x="292.5" y="7"/><ellipse cx="454.75" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M451.1777,19.2651 L451.1777,17.1069 L458.5571,17.1069 L458.5571,19.2651 L456.0918,19.2651 L456.0918,27.3418 L458.5571,27.3418 L458.5571,29.5 L451.1777,29.5 L451.1777,27.3418 L453.6431,27.3418 L453.6431,19.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="61" x="475.25" y="27.5352">Uint8Array</text><line style="stroke:#A80036;stroke-width:1.5;" x1="293.5" x2="685.5" y1="39" y2="39"/><ellipse cx="303.5" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="312.5" y="53.6348">buffer : ArrayBufferLike</text><ellipse cx="303.5" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="312.5" y="66.5898">byteLength : number</text><ellipse cx="303.5" cy="75.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="312.5" y="79.5449">byteOffset : number</text><ellipse cx="303.5" cy="88.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="312.5" y="92.5">BYTES_PER_ELEMENT : number</text><ellipse cx="303.5" cy="101.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="312.5" y="105.4551">length : number</text><ellipse cx="303.5" cy="114.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="312.5" y="118.4102">[toStringTag] : "Uint8Array"</text><line style="stroke:#A80036;stroke-width:1.5;" x1="293.5" x2="685.5" y1="124.7305" y2="124.7305"/><ellipse cx="303.5" cy="135.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="312.5" y="139.3652">at(index: number) : undefined | number</text><ellipse cx="303.5" cy="148.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="312.5" y="152.3203">copyWithin(target: number, start: number, end: number) : Uint8Array</text><ellipse cx="303.5" cy="161.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="312.5" y="165.2754">entries() : IterableIterator&lt;[number, number]&gt;</text><ellipse cx="303.5" cy="174.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="312.5" y="178.2305">every(predicate: Function, thisArg: any) : boolean</text><ellipse cx="303.5" cy="187.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="312.5" y="191.1855">fill(value: number, start: number, end: number) : Uint8Array</text><ellipse cx="303.5" cy="200.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="275" x="312.5" y="204.1406">filter(predicate: Function, thisArg: any) : Uint8Array</text><ellipse cx="303.5" cy="213.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="312.5" y="217.0957">find(predicate: Function, thisArg: any) : undefined | number</text><ellipse cx="303.5" cy="226.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="312.5" y="230.0508">findIndex(predicate: Function, thisArg: any) : number</text><ellipse cx="303.5" cy="239.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="312.5" y="243.0059">forEach(callbackfn: Function, thisArg: any) : void</text><ellipse cx="303.5" cy="252.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="312.5" y="255.9609">includes(searchElement: number, fromIndex: number) : boolean</text><ellipse cx="303.5" cy="265.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="312.5" y="268.916">indexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="303.5" cy="278.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="312.5" y="281.8711">join(separator: string) : string</text><ellipse cx="303.5" cy="291.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="312.5" y="294.8262">keys() : IterableIterator&lt;number&gt;</text><ellipse cx="303.5" cy="304.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="312.5" y="307.7813">lastIndexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="303.5" cy="317.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="312.5" y="320.7363">map(callbackfn: Function, thisArg: any) : Uint8Array</text><ellipse cx="303.5" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="312.5" y="333.6914">reduce(callbackfn: Function) : number</text><ellipse cx="303.5" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="312.5" y="346.6465">reduce(callbackfn: Function, initialValue: number) : number</text><ellipse cx="303.5" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="312.5" y="359.6016">reduce</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="349.5" y="359.6016">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="303.5" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="312.5" y="372.5566">reduceRight(callbackfn: Function) : number</text><ellipse cx="303.5" cy="381.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="312.5" y="385.5117">reduceRight(callbackfn: Function, initialValue: number) : number</text><ellipse cx="303.5" cy="394.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="312.5" y="398.4668">reduceRight</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="377.5" y="398.4668">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="303.5" cy="407.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="116" x="312.5" y="411.4219">reverse() : Uint8Array</text><ellipse cx="303.5" cy="420.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="312.5" y="424.377">set(array: ArrayLike&lt;number&gt;, offset: number) : void</text><ellipse cx="303.5" cy="433.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="247" x="312.5" y="437.332">slice(start: number, end: number) : Uint8Array</text><ellipse cx="303.5" cy="446.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="312.5" y="450.2871">some(predicate: Function, thisArg: any) : boolean</text><ellipse cx="303.5" cy="459.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="312.5" y="463.2422">sort(compareFn: Function) : Uint8Array</text><ellipse cx="303.5" cy="472.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="312.5" y="476.1973">subarray(begin: number, end: number) : Uint8Array</text><ellipse cx="303.5" cy="485.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="312.5" y="489.1523">toLocaleString() : string</text><ellipse cx="303.5" cy="498.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="312.5" y="502.1074">toString() : string</text><ellipse cx="303.5" cy="511.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="312.5" y="515.0625">valueOf() : Uint8Array</text><ellipse cx="303.5" cy="524.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="312.5" y="528.0176">values() : IterableIterator&lt;number&gt;</text><ellipse cx="303.5" cy="537.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="312.5" y="540.9727">[iterator]() : IterableIterator&lt;number&gt;</text><!--MD5=[5b61f1a6ab7ca68737705fcaea219bf6]
class Array<T>--><rect codeLine="49" fill="#FEFECE" filter="url(#f1tctgwpf4c8m2)" height="618.0234" id="Array&lt;T&gt;" style="stroke:#A80036;stroke-width:1.5;" width="350" x="314.5" y="582"/><ellipse cx="455.75" cy="598" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M452.1777,594.2651 L452.1777,592.1069 L459.5571,592.1069 L459.5571,594.2651 L457.0918,594.2651 L457.0918,602.3418 L459.5571,602.3418 L459.5571,604.5 L452.1777,604.5 L452.1777,602.3418 L454.6431,602.3418 L454.6431,594.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="59" x="476.25" y="602.5352">Array&lt;T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="315.5" x2="663.5" y1="614" y2="614"/><ellipse cx="325.5" cy="625" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="334.5" y="628.6348">length : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="315.5" x2="663.5" y1="634.9551" y2="634.9551"/><ellipse cx="325.5" cy="645.9551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="176" x="334.5" y="649.5898">at(index: number) : undefined | T</text><ellipse cx="325.5" cy="658.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="204" x="334.5" y="662.5449">concat(items: ConcatArray&lt;T&gt;[]) : T[]</text><ellipse cx="325.5" cy="671.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="334.5" y="675.5">concat(items: (T | ConcatArray&lt;T&gt;)[]) : T[]</text><ellipse cx="325.5" cy="684.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="334.5" y="688.4551">copyWithin(target: number, start: number, end: number) : T[]</text><ellipse cx="325.5" cy="697.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="334.5" y="701.4102">entries() : IterableIterator&lt;[number, T]&gt;</text><ellipse cx="325.5" cy="710.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="29" x="334.5" y="714.3652">every</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="line-through" textLength="240" x="363.5" y="714.3652">(predicate: Function, thisArg: any) : this is S[]</text><ellipse cx="325.5" cy="723.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="334.5" y="727.3203">every(predicate: Function, thisArg: any) : boolean</text><ellipse cx="325.5" cy="736.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="334.5" y="740.2754">fill(value: T, start: number, end: number) : T[]</text><ellipse cx="325.5" cy="749.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="25" x="334.5" y="753.2305">filter</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="line-through" textLength="205" x="359.5" y="753.2305">(predicate: Function, thisArg: any) : S[]</text><ellipse cx="325.5" cy="762.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="334.5" y="766.1855">filter(predicate: Function, thisArg: any) : T[]</text><ellipse cx="325.5" cy="775.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="21" x="334.5" y="779.1406">find</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="line-through" textLength="261" x="355.5" y="779.1406">(predicate: Function, thisArg: any) : undefined | S</text><ellipse cx="325.5" cy="788.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="334.5" y="792.0957">find(predicate: Function, thisArg: any) : undefined | T</text><ellipse cx="325.5" cy="801.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="334.5" y="805.0508">findIndex(predicate: Function, thisArg: any) : number</text><ellipse cx="325.5" cy="814.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="334.5" y="818.0059">flat&lt;A, D&gt;(depth: D) : FlatArray&lt;A, D&gt;[]</text><ellipse cx="325.5" cy="827.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="334.5" y="830.9609">flatMap&lt;U, This&gt;(callback: Function, thisArg: This) : U[]</text><ellipse cx="325.5" cy="840.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="334.5" y="843.916">forEach(callbackfn: Function, thisArg: any) : void</text><ellipse cx="325.5" cy="853.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="334.5" y="856.8711">includes(searchElement: T, fromIndex: number) : boolean</text><ellipse cx="325.5" cy="866.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="334.5" y="869.8262">indexOf(searchElement: T, fromIndex: number) : number</text><ellipse cx="325.5" cy="879.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="334.5" y="882.7813">join(separator: string) : string</text><ellipse cx="325.5" cy="892.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="334.5" y="895.7363">keys() : IterableIterator&lt;number&gt;</text><ellipse cx="325.5" cy="905.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="334.5" y="908.6914">lastIndexOf(searchElement: T, fromIndex: number) : number</text><ellipse cx="325.5" cy="918.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="23" x="334.5" y="921.6465">map</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="211" x="357.5" y="921.6465">(callbackfn: Function, thisArg: any) : U[]</text><ellipse cx="325.5" cy="930.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="334.5" y="934.6016">pop() : undefined | T</text><ellipse cx="325.5" cy="943.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="136" x="334.5" y="947.5566">push(items: T[]) : number</text><ellipse cx="325.5" cy="956.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="168" x="334.5" y="960.5117">reduce(callbackfn: Function) : T</text><ellipse cx="325.5" cy="969.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="334.5" y="973.4668">reduce(callbackfn: Function, initialValue: T) : T</text><ellipse cx="325.5" cy="982.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="334.5" y="986.4219">reduce</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="371.5" y="986.4219">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="325.5" cy="995.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="334.5" y="999.377">reduceRight(callbackfn: Function) : T</text><ellipse cx="325.5" cy="1008.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="334.5" y="1012.332">reduceRight(callbackfn: Function, initialValue: T) : T</text><ellipse cx="325.5" cy="1021.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="334.5" y="1025.2871">reduceRight</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="399.5" y="1025.2871">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="325.5" cy="1034.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="334.5" y="1038.2422">reverse() : T[]</text><ellipse cx="325.5" cy="1047.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="334.5" y="1051.1973">shift() : undefined | T</text><ellipse cx="325.5" cy="1060.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="334.5" y="1064.1523">slice(start: number, end: number) : T[]</text><ellipse cx="325.5" cy="1073.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="334.5" y="1077.1074">some(predicate: Function, thisArg: any) : boolean</text><ellipse cx="325.5" cy="1086.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="334.5" y="1090.0625">sort(compareFn: Function) : T[]</text><ellipse cx="325.5" cy="1099.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="334.5" y="1103.0176">splice(start: number, deleteCount: number) : T[]</text><ellipse cx="325.5" cy="1112.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="311" x="334.5" y="1115.9727">splice(start: number, deleteCount: number, items: T[]) : T[]</text><ellipse cx="325.5" cy="1125.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="334.5" y="1128.9277">toLocaleString() : string</text><ellipse cx="325.5" cy="1138.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="334.5" y="1141.8828">toString() : string</text><ellipse cx="325.5" cy="1151.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="334.5" y="1154.8379">unshift(items: T[]) : number</text><ellipse cx="325.5" cy="1164.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="334.5" y="1167.793">values() : IterableIterator&lt;T&gt;</text><ellipse cx="325.5" cy="1177.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="334.5" y="1180.748">[iterator]() : IterableIterator&lt;T&gt;</text><ellipse cx="325.5" cy="1190.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="334.5" y="1193.7031">[unscopables]() : Object</text><!--MD5=[0534dd94db1296a0d5e4816b2dd51db6]
class Uint8ClampedArray--><rect codeLine="96" fill="#FEFECE" filter="url(#f1tctgwpf4c8m2)" height="540.293" id="Uint8ClampedArray" style="stroke:#A80036;stroke-width:1.5;" width="441" x="269" y="1235"/><ellipse cx="428.75" cy="1251" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M425.1777,1247.2651 L425.1777,1245.1069 L432.5571,1245.1069 L432.5571,1247.2651 L430.0918,1247.2651 L430.0918,1255.3418 L432.5571,1255.3418 L432.5571,1257.5 L425.1777,1257.5 L425.1777,1255.3418 L427.6431,1255.3418 L427.6431,1247.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="113" x="449.25" y="1255.5352">Uint8ClampedArray</text><line style="stroke:#A80036;stroke-width:1.5;" x1="270" x2="709" y1="1267" y2="1267"/><ellipse cx="280" cy="1278" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="289" y="1281.6348">buffer : ArrayBufferLike</text><ellipse cx="280" cy="1290.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="289" y="1294.5898">byteLength : number</text><ellipse cx="280" cy="1303.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="289" y="1307.5449">byteOffset : number</text><ellipse cx="280" cy="1316.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="289" y="1320.5">BYTES_PER_ELEMENT : number</text><ellipse cx="280" cy="1329.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="289" y="1333.4551">length : number</text><ellipse cx="280" cy="1342.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="289" y="1346.4102">[toStringTag] : "Uint8ClampedArray"</text><line style="stroke:#A80036;stroke-width:1.5;" x1="270" x2="709" y1="1352.7305" y2="1352.7305"/><ellipse cx="280" cy="1363.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="289" y="1367.3652">at(index: number) : undefined | number</text><ellipse cx="280" cy="1376.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="289" y="1380.3203">copyWithin(target: number, start: number, end: number) : Uint8ClampedArray</text><ellipse cx="280" cy="1389.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="289" y="1393.2754">entries() : IterableIterator&lt;[number, number]&gt;</text><ellipse cx="280" cy="1402.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="289" y="1406.2305">every(predicate: Function, thisArg: any) : boolean</text><ellipse cx="280" cy="1415.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="365" x="289" y="1419.1855">fill(value: number, start: number, end: number) : Uint8ClampedArray</text><ellipse cx="280" cy="1428.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="289" y="1432.1406">filter(predicate: Function, thisArg: any) : Uint8ClampedArray</text><ellipse cx="280" cy="1441.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="289" y="1445.0957">find(predicate: Function, thisArg: any) : undefined | number</text><ellipse cx="280" cy="1454.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="289" y="1458.0508">findIndex(predicate: Function, thisArg: any) : number</text><ellipse cx="280" cy="1467.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="289" y="1471.0059">forEach(callbackfn: Function, thisArg: any) : void</text><ellipse cx="280" cy="1480.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="289" y="1483.9609">includes(searchElement: number, fromIndex: number) : boolean</text><ellipse cx="280" cy="1493.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="289" y="1496.916">indexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="280" cy="1506.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="289" y="1509.8711">join(separator: string) : string</text><ellipse cx="280" cy="1519.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="289" y="1522.8262">keys() : IterableIterator&lt;number&gt;</text><ellipse cx="280" cy="1532.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="289" y="1535.7813">lastIndexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="280" cy="1545.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="289" y="1548.7363">map(callbackfn: Function, thisArg: any) : Uint8ClampedArray</text><ellipse cx="280" cy="1558.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="289" y="1561.6914">reduce(callbackfn: Function) : number</text><ellipse cx="280" cy="1571.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="289" y="1574.6465">reduce(callbackfn: Function, initialValue: number) : number</text><ellipse cx="280" cy="1583.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="289" y="1587.6016">reduce</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="326" y="1587.6016">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="280" cy="1596.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="289" y="1600.5566">reduceRight(callbackfn: Function) : number</text><ellipse cx="280" cy="1609.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="289" y="1613.5117">reduceRight(callbackfn: Function, initialValue: number) : number</text><ellipse cx="280" cy="1622.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="289" y="1626.4668">reduceRight</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="354" y="1626.4668">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="280" cy="1635.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="289" y="1639.4219">reverse() : Uint8ClampedArray</text><ellipse cx="280" cy="1648.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="289" y="1652.377">set(array: ArrayLike&lt;number&gt;, offset: number) : void</text><ellipse cx="280" cy="1661.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="289" y="1665.332">slice(start: number, end: number) : Uint8ClampedArray</text><ellipse cx="280" cy="1674.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="289" y="1678.2871">some(predicate: Function, thisArg: any) : boolean</text><ellipse cx="280" cy="1687.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="289" y="1691.2422">sort(compareFn: Function) : Uint8ClampedArray</text><ellipse cx="280" cy="1700.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="289" y="1704.1973">subarray(begin: number, end: number) : Uint8ClampedArray</text><ellipse cx="280" cy="1713.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="289" y="1717.1523">toLocaleString() : string</text><ellipse cx="280" cy="1726.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="289" y="1730.1074">toString() : string</text><ellipse cx="280" cy="1739.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="289" y="1743.0625">valueOf() : Uint8ClampedArray</text><ellipse cx="280" cy="1752.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="289" y="1756.0176">values() : IterableIterator&lt;number&gt;</text><ellipse cx="280" cy="1765.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="289" y="1768.9727">[iterator]() : IterableIterator&lt;number&gt;</text><!--MD5=[c6ff26be36864ed218e4cad6038ceca9]
class Uint16Array--><rect codeLine="137" fill="#FEFECE" filter="url(#f1tctgwpf4c8m2)" height="540.293" id="Uint16Array" style="stroke:#A80036;stroke-width:1.5;" width="401" x="289" y="1810"/><ellipse cx="450.75" cy="1826" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M447.1777,1822.2651 L447.1777,1820.1069 L454.5571,1820.1069 L454.5571,1822.2651 L452.0918,1822.2651 L452.0918,1830.3418 L454.5571,1830.3418 L454.5571,1832.5 L447.1777,1832.5 L447.1777,1830.3418 L449.6431,1830.3418 L449.6431,1822.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="69" x="471.25" y="1830.5352">Uint16Array</text><line style="stroke:#A80036;stroke-width:1.5;" x1="290" x2="689" y1="1842" y2="1842"/><ellipse cx="300" cy="1853" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="309" y="1856.6348">buffer : ArrayBufferLike</text><ellipse cx="300" cy="1865.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="309" y="1869.5898">byteLength : number</text><ellipse cx="300" cy="1878.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="309" y="1882.5449">byteOffset : number</text><ellipse cx="300" cy="1891.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="309" y="1895.5">BYTES_PER_ELEMENT : number</text><ellipse cx="300" cy="1904.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="309" y="1908.4551">length : number</text><ellipse cx="300" cy="1917.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="309" y="1921.4102">[toStringTag] : "Uint16Array"</text><line style="stroke:#A80036;stroke-width:1.5;" x1="290" x2="689" y1="1927.7305" y2="1927.7305"/><ellipse cx="300" cy="1938.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="309" y="1942.3652">at(index: number) : undefined | number</text><ellipse cx="300" cy="1951.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="375" x="309" y="1955.3203">copyWithin(target: number, start: number, end: number) : Uint16Array</text><ellipse cx="300" cy="1964.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="309" y="1968.2754">entries() : IterableIterator&lt;[number, number]&gt;</text><ellipse cx="300" cy="1977.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="309" y="1981.2305">every(predicate: Function, thisArg: any) : boolean</text><ellipse cx="300" cy="1990.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="309" y="1994.1855">fill(value: number, start: number, end: number) : Uint16Array</text><ellipse cx="300" cy="2003.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="309" y="2007.1406">filter(predicate: Function, thisArg: any) : Uint16Array</text><ellipse cx="300" cy="2016.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="309" y="2020.0957">find(predicate: Function, thisArg: any) : undefined | number</text><ellipse cx="300" cy="2029.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="309" y="2033.0508">findIndex(predicate: Function, thisArg: any) : number</text><ellipse cx="300" cy="2042.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="309" y="2046.0059">forEach(callbackfn: Function, thisArg: any) : void</text><ellipse cx="300" cy="2055.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="309" y="2058.9609">includes(searchElement: number, fromIndex: number) : boolean</text><ellipse cx="300" cy="2068.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="309" y="2071.916">indexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="300" cy="2081.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="309" y="2084.8711">join(separator: string) : string</text><ellipse cx="300" cy="2094.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="309" y="2097.8262">keys() : IterableIterator&lt;number&gt;</text><ellipse cx="300" cy="2107.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="309" y="2110.7813">lastIndexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="300" cy="2120.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="309" y="2123.7363">map(callbackfn: Function, thisArg: any) : Uint16Array</text><ellipse cx="300" cy="2133.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="309" y="2136.6914">reduce(callbackfn: Function) : number</text><ellipse cx="300" cy="2146.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="309" y="2149.6465">reduce(callbackfn: Function, initialValue: number) : number</text><ellipse cx="300" cy="2158.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="309" y="2162.6016">reduce</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="346" y="2162.6016">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="300" cy="2171.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="309" y="2175.5566">reduceRight(callbackfn: Function) : number</text><ellipse cx="300" cy="2184.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="309" y="2188.5117">reduceRight(callbackfn: Function, initialValue: number) : number</text><ellipse cx="300" cy="2197.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="309" y="2201.4668">reduceRight</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="374" y="2201.4668">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="300" cy="2210.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="309" y="2214.4219">reverse() : Uint16Array</text><ellipse cx="300" cy="2223.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="309" y="2227.377">set(array: ArrayLike&lt;number&gt;, offset: number) : void</text><ellipse cx="300" cy="2236.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="254" x="309" y="2240.332">slice(start: number, end: number) : Uint16Array</text><ellipse cx="300" cy="2249.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="309" y="2253.2871">some(predicate: Function, thisArg: any) : boolean</text><ellipse cx="300" cy="2262.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="218" x="309" y="2266.2422">sort(compareFn: Function) : Uint16Array</text><ellipse cx="300" cy="2275.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="309" y="2279.1973">subarray(begin: number, end: number) : Uint16Array</text><ellipse cx="300" cy="2288.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="309" y="2292.1523">toLocaleString() : string</text><ellipse cx="300" cy="2301.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="309" y="2305.1074">toString() : string</text><ellipse cx="300" cy="2314.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="309" y="2318.0625">valueOf() : Uint16Array</text><ellipse cx="300" cy="2327.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="309" y="2331.0176">values() : IterableIterator&lt;number&gt;</text><ellipse cx="300" cy="2340.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="309" y="2343.9727">[iterator]() : IterableIterator&lt;number&gt;</text><!--MD5=[a8a96653100341ceba9dfab628271e2b]
class Uint32Array--><rect codeLine="178" fill="#FEFECE" filter="url(#f1tctgwpf4c8m2)" height="540.293" id="Uint32Array" style="stroke:#A80036;stroke-width:1.5;" width="401" x="289" y="2385"/><ellipse cx="450.75" cy="2401" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M447.1777,2397.2651 L447.1777,2395.1069 L454.5571,2395.1069 L454.5571,2397.2651 L452.0918,2397.2651 L452.0918,2405.3418 L454.5571,2405.3418 L454.5571,2407.5 L447.1777,2407.5 L447.1777,2405.3418 L449.6431,2405.3418 L449.6431,2397.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="69" x="471.25" y="2405.5352">Uint32Array</text><line style="stroke:#A80036;stroke-width:1.5;" x1="290" x2="689" y1="2417" y2="2417"/><ellipse cx="300" cy="2428" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="309" y="2431.6348">buffer : ArrayBufferLike</text><ellipse cx="300" cy="2440.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="309" y="2444.5898">byteLength : number</text><ellipse cx="300" cy="2453.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="309" y="2457.5449">byteOffset : number</text><ellipse cx="300" cy="2466.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="309" y="2470.5">BYTES_PER_ELEMENT : number</text><ellipse cx="300" cy="2479.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="309" y="2483.4551">length : number</text><ellipse cx="300" cy="2492.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="309" y="2496.4102">[toStringTag] : "Uint32Array"</text><line style="stroke:#A80036;stroke-width:1.5;" x1="290" x2="689" y1="2502.7305" y2="2502.7305"/><ellipse cx="300" cy="2513.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="309" y="2517.3652">at(index: number) : undefined | number</text><ellipse cx="300" cy="2526.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="375" x="309" y="2530.3203">copyWithin(target: number, start: number, end: number) : Uint32Array</text><ellipse cx="300" cy="2539.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="309" y="2543.2754">entries() : IterableIterator&lt;[number, number]&gt;</text><ellipse cx="300" cy="2552.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="309" y="2556.2305">every(predicate: Function, thisArg: any) : boolean</text><ellipse cx="300" cy="2565.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="309" y="2569.1855">fill(value: number, start: number, end: number) : Uint32Array</text><ellipse cx="300" cy="2578.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="309" y="2582.1406">filter(predicate: Function, thisArg: any) : Uint32Array</text><ellipse cx="300" cy="2591.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="309" y="2595.0957">find(predicate: Function, thisArg: any) : undefined | number</text><ellipse cx="300" cy="2604.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="309" y="2608.0508">findIndex(predicate: Function, thisArg: any) : number</text><ellipse cx="300" cy="2617.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="309" y="2621.0059">forEach(callbackfn: Function, thisArg: any) : void</text><ellipse cx="300" cy="2630.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="309" y="2633.9609">includes(searchElement: number, fromIndex: number) : boolean</text><ellipse cx="300" cy="2643.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="309" y="2646.916">indexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="300" cy="2656.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="309" y="2659.8711">join(separator: string) : string</text><ellipse cx="300" cy="2669.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="309" y="2672.8262">keys() : IterableIterator&lt;number&gt;</text><ellipse cx="300" cy="2682.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="309" y="2685.7813">lastIndexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="300" cy="2695.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="309" y="2698.7363">map(callbackfn: Function, thisArg: any) : Uint32Array</text><ellipse cx="300" cy="2708.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="309" y="2711.6914">reduce(callbackfn: Function) : number</text><ellipse cx="300" cy="2721.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="309" y="2724.6465">reduce(callbackfn: Function, initialValue: number) : number</text><ellipse cx="300" cy="2733.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="309" y="2737.6016">reduce</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="346" y="2737.6016">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="300" cy="2746.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="309" y="2750.5566">reduceRight(callbackfn: Function) : number</text><ellipse cx="300" cy="2759.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="309" y="2763.5117">reduceRight(callbackfn: Function, initialValue: number) : number</text><ellipse cx="300" cy="2772.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="309" y="2776.4668">reduceRight</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="374" y="2776.4668">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="300" cy="2785.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="309" y="2789.4219">reverse() : Uint32Array</text><ellipse cx="300" cy="2798.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="309" y="2802.377">set(array: ArrayLike&lt;number&gt;, offset: number) : void</text><ellipse cx="300" cy="2811.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="254" x="309" y="2815.332">slice(start: number, end: number) : Uint32Array</text><ellipse cx="300" cy="2824.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="309" y="2828.2871">some(predicate: Function, thisArg: any) : boolean</text><ellipse cx="300" cy="2837.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="218" x="309" y="2841.2422">sort(compareFn: Function) : Uint32Array</text><ellipse cx="300" cy="2850.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="309" y="2854.1973">subarray(begin: number, end: number) : Uint32Array</text><ellipse cx="300" cy="2863.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="309" y="2867.1523">toLocaleString() : string</text><ellipse cx="300" cy="2876.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="309" y="2880.1074">toString() : string</text><ellipse cx="300" cy="2889.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="309" y="2893.0625">valueOf() : Uint32Array</text><ellipse cx="300" cy="2902.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="309" y="2906.0176">values() : IterableIterator&lt;number&gt;</text><ellipse cx="300" cy="2915.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="309" y="2918.9727">[iterator]() : IterableIterator&lt;number&gt;</text><!--MD5=[30fa278490d5cc41ef906a952afa9bc5]
class Int8Array--><rect codeLine="219" fill="#FEFECE" filter="url(#f1tctgwpf4c8m2)" height="540.293" id="Int8Array" style="stroke:#A80036;stroke-width:1.5;" width="386" x="296.5" y="2960"/><ellipse cx="458.75" cy="2976" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M455.1777,2972.2651 L455.1777,2970.1069 L462.5571,2970.1069 L462.5571,2972.2651 L460.0918,2972.2651 L460.0918,2980.3418 L462.5571,2980.3418 L462.5571,2982.5 L455.1777,2982.5 L455.1777,2980.3418 L457.6431,2980.3418 L457.6431,2972.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="53" x="479.25" y="2980.5352">Int8Array</text><line style="stroke:#A80036;stroke-width:1.5;" x1="297.5" x2="681.5" y1="2992" y2="2992"/><ellipse cx="307.5" cy="3003" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="316.5" y="3006.6348">buffer : ArrayBufferLike</text><ellipse cx="307.5" cy="3015.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="316.5" y="3019.5898">byteLength : number</text><ellipse cx="307.5" cy="3028.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="316.5" y="3032.5449">byteOffset : number</text><ellipse cx="307.5" cy="3041.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="316.5" y="3045.5">BYTES_PER_ELEMENT : number</text><ellipse cx="307.5" cy="3054.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="316.5" y="3058.4551">length : number</text><ellipse cx="307.5" cy="3067.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="316.5" y="3071.4102">[toStringTag] : "Int8Array"</text><line style="stroke:#A80036;stroke-width:1.5;" x1="297.5" x2="681.5" y1="3077.7305" y2="3077.7305"/><ellipse cx="307.5" cy="3088.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="316.5" y="3092.3652">at(index: number) : undefined | number</text><ellipse cx="307.5" cy="3101.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="316.5" y="3105.3203">copyWithin(target: number, start: number, end: number) : Int8Array</text><ellipse cx="307.5" cy="3114.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="316.5" y="3118.2754">entries() : IterableIterator&lt;[number, number]&gt;</text><ellipse cx="307.5" cy="3127.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="316.5" y="3131.2305">every(predicate: Function, thisArg: any) : boolean</text><ellipse cx="307.5" cy="3140.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="316.5" y="3144.1855">fill(value: number, start: number, end: number) : Int8Array</text><ellipse cx="307.5" cy="3153.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="316.5" y="3157.1406">filter(predicate: Function, thisArg: any) : Int8Array</text><ellipse cx="307.5" cy="3166.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="316.5" y="3170.0957">find(predicate: Function, thisArg: any) : undefined | number</text><ellipse cx="307.5" cy="3179.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="316.5" y="3183.0508">findIndex(predicate: Function, thisArg: any) : number</text><ellipse cx="307.5" cy="3192.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="316.5" y="3196.0059">forEach(callbackfn: Function, thisArg: any) : void</text><ellipse cx="307.5" cy="3205.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="316.5" y="3208.9609">includes(searchElement: number, fromIndex: number) : boolean</text><ellipse cx="307.5" cy="3218.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="316.5" y="3221.916">indexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="307.5" cy="3231.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="316.5" y="3234.8711">join(separator: string) : string</text><ellipse cx="307.5" cy="3244.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="316.5" y="3247.8262">keys() : IterableIterator&lt;number&gt;</text><ellipse cx="307.5" cy="3257.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="316.5" y="3260.7813">lastIndexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="307.5" cy="3270.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="316.5" y="3273.7363">map(callbackfn: Function, thisArg: any) : Int8Array</text><ellipse cx="307.5" cy="3283.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="316.5" y="3286.6914">reduce(callbackfn: Function) : number</text><ellipse cx="307.5" cy="3296.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="316.5" y="3299.6465">reduce(callbackfn: Function, initialValue: number) : number</text><ellipse cx="307.5" cy="3308.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="316.5" y="3312.6016">reduce</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="353.5" y="3312.6016">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="307.5" cy="3321.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="316.5" y="3325.5566">reduceRight(callbackfn: Function) : number</text><ellipse cx="307.5" cy="3334.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="316.5" y="3338.5117">reduceRight(callbackfn: Function, initialValue: number) : number</text><ellipse cx="307.5" cy="3347.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="316.5" y="3351.4668">reduceRight</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="381.5" y="3351.4668">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="307.5" cy="3360.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="108" x="316.5" y="3364.4219">reverse() : Int8Array</text><ellipse cx="307.5" cy="3373.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="316.5" y="3377.377">set(array: ArrayLike&lt;number&gt;, offset: number) : void</text><ellipse cx="307.5" cy="3386.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="316.5" y="3390.332">slice(start: number, end: number) : Int8Array</text><ellipse cx="307.5" cy="3399.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="316.5" y="3403.2871">some(predicate: Function, thisArg: any) : boolean</text><ellipse cx="307.5" cy="3412.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="316.5" y="3416.2422">sort(compareFn: Function) : Int8Array</text><ellipse cx="307.5" cy="3425.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="316.5" y="3429.1973">subarray(begin: number, end: number) : Int8Array</text><ellipse cx="307.5" cy="3438.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="316.5" y="3442.1523">toLocaleString() : string</text><ellipse cx="307.5" cy="3451.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="316.5" y="3455.1074">toString() : string</text><ellipse cx="307.5" cy="3464.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="316.5" y="3468.0625">valueOf() : Int8Array</text><ellipse cx="307.5" cy="3477.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="316.5" y="3481.0176">values() : IterableIterator&lt;number&gt;</text><ellipse cx="307.5" cy="3490.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="316.5" y="3493.9727">[iterator]() : IterableIterator&lt;number&gt;</text><!--MD5=[fc4e5d0830b228b95735bbf0cd5bb240]
class Int16Array--><rect codeLine="260" fill="#FEFECE" filter="url(#f1tctgwpf4c8m2)" height="540.293" id="Int16Array" style="stroke:#A80036;stroke-width:1.5;" width="393" x="293" y="3535"/><ellipse cx="454.75" cy="3551" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M451.1777,3547.2651 L451.1777,3545.1069 L458.5571,3545.1069 L458.5571,3547.2651 L456.0918,3547.2651 L456.0918,3555.3418 L458.5571,3555.3418 L458.5571,3557.5 L451.1777,3557.5 L451.1777,3555.3418 L453.6431,3555.3418 L453.6431,3547.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="61" x="475.25" y="3555.5352">Int16Array</text><line style="stroke:#A80036;stroke-width:1.5;" x1="294" x2="685" y1="3567" y2="3567"/><ellipse cx="304" cy="3578" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="313" y="3581.6348">buffer : ArrayBufferLike</text><ellipse cx="304" cy="3590.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="313" y="3594.5898">byteLength : number</text><ellipse cx="304" cy="3603.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="313" y="3607.5449">byteOffset : number</text><ellipse cx="304" cy="3616.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="313" y="3620.5">BYTES_PER_ELEMENT : number</text><ellipse cx="304" cy="3629.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="313" y="3633.4551">length : number</text><ellipse cx="304" cy="3642.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="313" y="3646.4102">[toStringTag] : "Int16Array"</text><line style="stroke:#A80036;stroke-width:1.5;" x1="294" x2="685" y1="3652.7305" y2="3652.7305"/><ellipse cx="304" cy="3663.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="313" y="3667.3652">at(index: number) : undefined | number</text><ellipse cx="304" cy="3676.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="313" y="3680.3203">copyWithin(target: number, start: number, end: number) : Int16Array</text><ellipse cx="304" cy="3689.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="313" y="3693.2754">entries() : IterableIterator&lt;[number, number]&gt;</text><ellipse cx="304" cy="3702.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="313" y="3706.2305">every(predicate: Function, thisArg: any) : boolean</text><ellipse cx="304" cy="3715.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="313" y="3719.1855">fill(value: number, start: number, end: number) : Int16Array</text><ellipse cx="304" cy="3728.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="313" y="3732.1406">filter(predicate: Function, thisArg: any) : Int16Array</text><ellipse cx="304" cy="3741.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="313" y="3745.0957">find(predicate: Function, thisArg: any) : undefined | number</text><ellipse cx="304" cy="3754.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="313" y="3758.0508">findIndex(predicate: Function, thisArg: any) : number</text><ellipse cx="304" cy="3767.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="313" y="3771.0059">forEach(callbackfn: Function, thisArg: any) : void</text><ellipse cx="304" cy="3780.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="313" y="3783.9609">includes(searchElement: number, fromIndex: number) : boolean</text><ellipse cx="304" cy="3793.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="313" y="3796.916">indexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="304" cy="3806.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="313" y="3809.8711">join(separator: string) : string</text><ellipse cx="304" cy="3819.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="313" y="3822.8262">keys() : IterableIterator&lt;number&gt;</text><ellipse cx="304" cy="3832.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="313" y="3835.7813">lastIndexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="304" cy="3845.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="313" y="3848.7363">map(callbackfn: Function, thisArg: any) : Int16Array</text><ellipse cx="304" cy="3858.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="313" y="3861.6914">reduce(callbackfn: Function) : number</text><ellipse cx="304" cy="3871.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="313" y="3874.6465">reduce(callbackfn: Function, initialValue: number) : number</text><ellipse cx="304" cy="3883.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="313" y="3887.6016">reduce</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="350" y="3887.6016">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="304" cy="3896.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="313" y="3900.5566">reduceRight(callbackfn: Function) : number</text><ellipse cx="304" cy="3909.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="313" y="3913.5117">reduceRight(callbackfn: Function, initialValue: number) : number</text><ellipse cx="304" cy="3922.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="313" y="3926.4668">reduceRight</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="378" y="3926.4668">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="304" cy="3935.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="313" y="3939.4219">reverse() : Int16Array</text><ellipse cx="304" cy="3948.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="313" y="3952.377">set(array: ArrayLike&lt;number&gt;, offset: number) : void</text><ellipse cx="304" cy="3961.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="313" y="3965.332">slice(start: number, end: number) : Int16Array</text><ellipse cx="304" cy="3974.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="313" y="3978.2871">some(predicate: Function, thisArg: any) : boolean</text><ellipse cx="304" cy="3987.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="313" y="3991.2422">sort(compareFn: Function) : Int16Array</text><ellipse cx="304" cy="4000.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="275" x="313" y="4004.1973">subarray(begin: number, end: number) : Int16Array</text><ellipse cx="304" cy="4013.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="313" y="4017.1523">toLocaleString() : string</text><ellipse cx="304" cy="4026.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="313" y="4030.1074">toString() : string</text><ellipse cx="304" cy="4039.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="116" x="313" y="4043.0625">valueOf() : Int16Array</text><ellipse cx="304" cy="4052.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="313" y="4056.0176">values() : IterableIterator&lt;number&gt;</text><ellipse cx="304" cy="4065.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="313" y="4068.9727">[iterator]() : IterableIterator&lt;number&gt;</text><!--MD5=[5e625a7b543897defced1ca0f0463469]
class Int32Array--><rect codeLine="301" fill="#FEFECE" filter="url(#f1tctgwpf4c8m2)" height="540.293" id="Int32Array" style="stroke:#A80036;stroke-width:1.5;" width="393" x="293" y="4110"/><ellipse cx="454.75" cy="4126" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M451.1777,4122.2651 L451.1777,4120.1069 L458.5571,4120.1069 L458.5571,4122.2651 L456.0918,4122.2651 L456.0918,4130.3418 L458.5571,4130.3418 L458.5571,4132.5 L451.1777,4132.5 L451.1777,4130.3418 L453.6431,4130.3418 L453.6431,4122.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="61" x="475.25" y="4130.5352">Int32Array</text><line style="stroke:#A80036;stroke-width:1.5;" x1="294" x2="685" y1="4142" y2="4142"/><ellipse cx="304" cy="4153" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="313" y="4156.6348">buffer : ArrayBufferLike</text><ellipse cx="304" cy="4165.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="313" y="4169.5898">byteLength : number</text><ellipse cx="304" cy="4178.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="313" y="4182.5449">byteOffset : number</text><ellipse cx="304" cy="4191.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="313" y="4195.5">BYTES_PER_ELEMENT : number</text><ellipse cx="304" cy="4204.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="313" y="4208.4551">length : number</text><ellipse cx="304" cy="4217.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="313" y="4221.4102">[toStringTag] : "Int32Array"</text><line style="stroke:#A80036;stroke-width:1.5;" x1="294" x2="685" y1="4227.7305" y2="4227.7305"/><ellipse cx="304" cy="4238.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="313" y="4242.3652">at(index: number) : undefined | number</text><ellipse cx="304" cy="4251.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="313" y="4255.3203">copyWithin(target: number, start: number, end: number) : Int32Array</text><ellipse cx="304" cy="4264.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="313" y="4268.2754">entries() : IterableIterator&lt;[number, number]&gt;</text><ellipse cx="304" cy="4277.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="313" y="4281.2305">every(predicate: Function, thisArg: any) : boolean</text><ellipse cx="304" cy="4290.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="313" y="4294.1855">fill(value: number, start: number, end: number) : Int32Array</text><ellipse cx="304" cy="4303.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="313" y="4307.1406">filter(predicate: Function, thisArg: any) : Int32Array</text><ellipse cx="304" cy="4316.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="313" y="4320.0957">find(predicate: Function, thisArg: any) : undefined | number</text><ellipse cx="304" cy="4329.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="313" y="4333.0508">findIndex(predicate: Function, thisArg: any) : number</text><ellipse cx="304" cy="4342.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="313" y="4346.0059">forEach(callbackfn: Function, thisArg: any) : void</text><ellipse cx="304" cy="4355.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="313" y="4358.9609">includes(searchElement: number, fromIndex: number) : boolean</text><ellipse cx="304" cy="4368.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="313" y="4371.916">indexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="304" cy="4381.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="313" y="4384.8711">join(separator: string) : string</text><ellipse cx="304" cy="4394.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="313" y="4397.8262">keys() : IterableIterator&lt;number&gt;</text><ellipse cx="304" cy="4407.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="313" y="4410.7813">lastIndexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="304" cy="4420.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="313" y="4423.7363">map(callbackfn: Function, thisArg: any) : Int32Array</text><ellipse cx="304" cy="4433.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="313" y="4436.6914">reduce(callbackfn: Function) : number</text><ellipse cx="304" cy="4446.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="313" y="4449.6465">reduce(callbackfn: Function, initialValue: number) : number</text><ellipse cx="304" cy="4458.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="313" y="4462.6016">reduce</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="350" y="4462.6016">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="304" cy="4471.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="313" y="4475.5566">reduceRight(callbackfn: Function) : number</text><ellipse cx="304" cy="4484.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="313" y="4488.5117">reduceRight(callbackfn: Function, initialValue: number) : number</text><ellipse cx="304" cy="4497.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="313" y="4501.4668">reduceRight</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="378" y="4501.4668">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="304" cy="4510.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="313" y="4514.4219">reverse() : Int32Array</text><ellipse cx="304" cy="4523.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="313" y="4527.377">set(array: ArrayLike&lt;number&gt;, offset: number) : void</text><ellipse cx="304" cy="4536.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="313" y="4540.332">slice(start: number, end: number) : Int32Array</text><ellipse cx="304" cy="4549.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="313" y="4553.2871">some(predicate: Function, thisArg: any) : boolean</text><ellipse cx="304" cy="4562.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="313" y="4566.2422">sort(compareFn: Function) : Int32Array</text><ellipse cx="304" cy="4575.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="275" x="313" y="4579.1973">subarray(begin: number, end: number) : Int32Array</text><ellipse cx="304" cy="4588.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="313" y="4592.1523">toLocaleString() : string</text><ellipse cx="304" cy="4601.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="313" y="4605.1074">toString() : string</text><ellipse cx="304" cy="4614.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="116" x="313" y="4618.0625">valueOf() : Int32Array</text><ellipse cx="304" cy="4627.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="313" y="4631.0176">values() : IterableIterator&lt;number&gt;</text><ellipse cx="304" cy="4640.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="313" y="4643.9727">[iterator]() : IterableIterator&lt;number&gt;</text><!--MD5=[bab7458fbe4b52f14db63798d14112ec]
class BigUint64Array--><rect codeLine="342" fill="#FEFECE" filter="url(#f1tctgwpf4c8m2)" height="514.3828" id="BigUint64Array" style="stroke:#A80036;stroke-width:1.5;" width="417" x="281" y="4685"/><ellipse cx="442.25" cy="4701" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M438.6777,4697.2651 L438.6777,4695.1069 L446.0571,4695.1069 L446.0571,4697.2651 L443.5918,4697.2651 L443.5918,4705.3418 L446.0571,4705.3418 L446.0571,4707.5 L438.6777,4707.5 L438.6777,4705.3418 L441.1431,4705.3418 L441.1431,4697.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="86" x="462.75" y="4705.5352">BigUint64Array</text><line style="stroke:#A80036;stroke-width:1.5;" x1="282" x2="697" y1="4717" y2="4717"/><ellipse cx="292" cy="4728" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="301" y="4731.6348">buffer : ArrayBufferLike</text><ellipse cx="292" cy="4740.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="301" y="4744.5898">byteLength : number</text><ellipse cx="292" cy="4753.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="301" y="4757.5449">byteOffset : number</text><ellipse cx="292" cy="4766.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="301" y="4770.5">BYTES_PER_ELEMENT : number</text><ellipse cx="292" cy="4779.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="301" y="4783.4551">length : number</text><ellipse cx="292" cy="4792.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="301" y="4796.4102">[toStringTag] : "BigUint64Array"</text><line style="stroke:#A80036;stroke-width:1.5;" x1="282" x2="697" y1="4802.7305" y2="4802.7305"/><ellipse cx="292" cy="4813.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="301" y="4817.3652">at(index: number) : undefined | bigint</text><ellipse cx="292" cy="4826.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="301" y="4830.3203">copyWithin(target: number, start: number, end: number) : BigUint64Array</text><ellipse cx="292" cy="4839.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="301" y="4843.2754">entries() : IterableIterator&lt;[number, bigint]&gt;</text><ellipse cx="292" cy="4852.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="301" y="4856.2305">every(predicate: Function, thisArg: any) : boolean</text><ellipse cx="292" cy="4865.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="301" y="4869.1855">fill(value: bigint, start: number, end: number) : BigUint64Array</text><ellipse cx="292" cy="4878.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="301" y="4882.1406">filter(predicate: Function, thisArg: any) : BigUint64Array</text><ellipse cx="292" cy="4891.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="301" y="4895.0957">find(predicate: Function, thisArg: any) : undefined | bigint</text><ellipse cx="292" cy="4904.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="301" y="4908.0508">findIndex(predicate: Function, thisArg: any) : number</text><ellipse cx="292" cy="4917.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="301" y="4921.0059">forEach(callbackfn: Function, thisArg: any) : void</text><ellipse cx="292" cy="4930.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="301" y="4933.9609">includes(searchElement: bigint, fromIndex: number) : boolean</text><ellipse cx="292" cy="4943.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="301" y="4946.916">indexOf(searchElement: bigint, fromIndex: number) : number</text><ellipse cx="292" cy="4956.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="301" y="4959.8711">join(separator: string) : string</text><ellipse cx="292" cy="4969.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="301" y="4972.8262">keys() : IterableIterator&lt;number&gt;</text><ellipse cx="292" cy="4982.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="301" y="4985.7813">lastIndexOf(searchElement: bigint, fromIndex: number) : number</text><ellipse cx="292" cy="4995.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="301" y="4998.7363">map(callbackfn: Function, thisArg: any) : BigUint64Array</text><ellipse cx="292" cy="5008.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="192" x="301" y="5011.6914">reduce(callbackfn: Function) : bigint</text><ellipse cx="292" cy="5021.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="301" y="5024.6465">reduce</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="338" y="5024.6465">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="292" cy="5033.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="220" x="301" y="5037.6016">reduceRight(callbackfn: Function) : bigint</text><ellipse cx="292" cy="5046.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="301" y="5050.5566">reduceRight</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="366" y="5050.5566">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="292" cy="5059.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="301" y="5063.5117">reverse() : BigUint64Array</text><ellipse cx="292" cy="5072.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="275" x="301" y="5076.4668">set(array: ArrayLike&lt;bigint&gt;, offset: number) : void</text><ellipse cx="292" cy="5085.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="301" y="5089.4219">slice(start: number, end: number) : BigUint64Array</text><ellipse cx="292" cy="5098.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="301" y="5102.377">some(predicate: Function, thisArg: any) : boolean</text><ellipse cx="292" cy="5111.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="301" y="5115.332">sort(compareFn: Function) : BigUint64Array</text><ellipse cx="292" cy="5124.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="299" x="301" y="5128.2871">subarray(begin: number, end: number) : BigUint64Array</text><ellipse cx="292" cy="5137.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="301" y="5141.2422">toLocaleString() : string</text><ellipse cx="292" cy="5150.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="301" y="5154.1973">toString() : string</text><ellipse cx="292" cy="5163.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="140" x="301" y="5167.1523">valueOf() : BigUint64Array</text><ellipse cx="292" cy="5176.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="180" x="301" y="5180.1074">values() : IterableIterator&lt;bigint&gt;</text><ellipse cx="292" cy="5189.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="301" y="5193.0625">[iterator]() : IterableIterator&lt;bigint&gt;</text><!--MD5=[df8816ae4934c5d67d88adb6e6ba1a8f]
class BigInt64Array--><rect codeLine="381" fill="#FEFECE" filter="url(#f1tctgwpf4c8m2)" height="514.3828" id="BigInt64Array" style="stroke:#A80036;stroke-width:1.5;" width="409" x="285" y="5234"/><ellipse cx="446.25" cy="5250" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M442.6777,5246.2651 L442.6777,5244.1069 L450.0571,5244.1069 L450.0571,5246.2651 L447.5918,5246.2651 L447.5918,5254.3418 L450.0571,5254.3418 L450.0571,5256.5 L442.6777,5256.5 L442.6777,5254.3418 L445.1431,5254.3418 L445.1431,5246.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="78" x="466.75" y="5254.5352">BigInt64Array</text><line style="stroke:#A80036;stroke-width:1.5;" x1="286" x2="693" y1="5266" y2="5266"/><ellipse cx="296" cy="5277" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="305" y="5280.6348">buffer : ArrayBufferLike</text><ellipse cx="296" cy="5289.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="305" y="5293.5898">byteLength : number</text><ellipse cx="296" cy="5302.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="305" y="5306.5449">byteOffset : number</text><ellipse cx="296" cy="5315.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="305" y="5319.5">BYTES_PER_ELEMENT : number</text><ellipse cx="296" cy="5328.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="305" y="5332.4551">length : number</text><ellipse cx="296" cy="5341.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="305" y="5345.4102">[toStringTag] : "BigInt64Array"</text><line style="stroke:#A80036;stroke-width:1.5;" x1="286" x2="693" y1="5351.7305" y2="5351.7305"/><ellipse cx="296" cy="5362.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="305" y="5366.3652">at(index: number) : undefined | bigint</text><ellipse cx="296" cy="5375.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="383" x="305" y="5379.3203">copyWithin(target: number, start: number, end: number) : BigInt64Array</text><ellipse cx="296" cy="5388.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="305" y="5392.2754">entries() : IterableIterator&lt;[number, bigint]&gt;</text><ellipse cx="296" cy="5401.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="305" y="5405.2305">every(predicate: Function, thisArg: any) : boolean</text><ellipse cx="296" cy="5414.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="305" y="5418.1855">fill(value: bigint, start: number, end: number) : BigInt64Array</text><ellipse cx="296" cy="5427.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="305" y="5431.1406">filter(predicate: Function, thisArg: any) : BigInt64Array</text><ellipse cx="296" cy="5440.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="305" y="5444.0957">find(predicate: Function, thisArg: any) : undefined | bigint</text><ellipse cx="296" cy="5453.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="305" y="5457.0508">findIndex(predicate: Function, thisArg: any) : number</text><ellipse cx="296" cy="5466.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="305" y="5470.0059">forEach(callbackfn: Function, thisArg: any) : void</text><ellipse cx="296" cy="5479.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="305" y="5482.9609">includes(searchElement: bigint, fromIndex: number) : boolean</text><ellipse cx="296" cy="5492.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="305" y="5495.916">indexOf(searchElement: bigint, fromIndex: number) : number</text><ellipse cx="296" cy="5505.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="305" y="5508.8711">join(separator: string) : string</text><ellipse cx="296" cy="5518.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="305" y="5521.8262">keys() : IterableIterator&lt;number&gt;</text><ellipse cx="296" cy="5531.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="305" y="5534.7813">lastIndexOf(searchElement: bigint, fromIndex: number) : number</text><ellipse cx="296" cy="5544.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="305" y="5547.7363">map(callbackfn: Function, thisArg: any) : BigInt64Array</text><ellipse cx="296" cy="5557.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="192" x="305" y="5560.6914">reduce(callbackfn: Function) : bigint</text><ellipse cx="296" cy="5570.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="305" y="5573.6465">reduce</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="342" y="5573.6465">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="296" cy="5582.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="220" x="305" y="5586.6016">reduceRight(callbackfn: Function) : bigint</text><ellipse cx="296" cy="5595.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="305" y="5599.5566">reduceRight</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="370" y="5599.5566">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="296" cy="5608.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="305" y="5612.5117">reverse() : BigInt64Array</text><ellipse cx="296" cy="5621.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="275" x="305" y="5625.4668">set(array: ArrayLike&lt;bigint&gt;, offset: number) : void</text><ellipse cx="296" cy="5634.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="305" y="5638.4219">slice(start: number, end: number) : BigInt64Array</text><ellipse cx="296" cy="5647.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="305" y="5651.377">some(predicate: Function, thisArg: any) : boolean</text><ellipse cx="296" cy="5660.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="305" y="5664.332">sort(compareFn: Function) : BigInt64Array</text><ellipse cx="296" cy="5673.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="291" x="305" y="5677.2871">subarray(begin: number, end: number) : BigInt64Array</text><ellipse cx="296" cy="5686.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="305" y="5690.2422">toLocaleString() : string</text><ellipse cx="296" cy="5699.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="305" y="5703.1973">toString() : string</text><ellipse cx="296" cy="5712.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="305" y="5716.1523">valueOf() : BigInt64Array</text><ellipse cx="296" cy="5725.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="180" x="305" y="5729.1074">values() : IterableIterator&lt;bigint&gt;</text><ellipse cx="296" cy="5738.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="305" y="5742.0625">[iterator]() : IterableIterator&lt;bigint&gt;</text><!--MD5=[216602c2ccf099a482cfd37fa98f4fa9]
class Float32Array--><rect codeLine="420" fill="#FEFECE" filter="url(#f1tctgwpf4c8m2)" height="540.293" id="Float32Array" style="stroke:#A80036;stroke-width:1.5;" width="405" x="287" y="5783"/><ellipse cx="448.25" cy="5799" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M444.6777,5795.2651 L444.6777,5793.1069 L452.0571,5793.1069 L452.0571,5795.2651 L449.5918,5795.2651 L449.5918,5803.3418 L452.0571,5803.3418 L452.0571,5805.5 L444.6777,5805.5 L444.6777,5803.3418 L447.1431,5803.3418 L447.1431,5795.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="74" x="468.75" y="5803.5352">Float32Array</text><line style="stroke:#A80036;stroke-width:1.5;" x1="288" x2="691" y1="5815" y2="5815"/><ellipse cx="298" cy="5826" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="307" y="5829.6348">buffer : ArrayBufferLike</text><ellipse cx="298" cy="5838.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="307" y="5842.5898">byteLength : number</text><ellipse cx="298" cy="5851.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="307" y="5855.5449">byteOffset : number</text><ellipse cx="298" cy="5864.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="307" y="5868.5">BYTES_PER_ELEMENT : number</text><ellipse cx="298" cy="5877.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="307" y="5881.4551">length : number</text><ellipse cx="298" cy="5890.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="307" y="5894.4102">[toStringTag] : "Float32Array"</text><line style="stroke:#A80036;stroke-width:1.5;" x1="288" x2="691" y1="5900.7305" y2="5900.7305"/><ellipse cx="298" cy="5911.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="307" y="5915.3652">at(index: number) : undefined | number</text><ellipse cx="298" cy="5924.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="379" x="307" y="5928.3203">copyWithin(target: number, start: number, end: number) : Float32Array</text><ellipse cx="298" cy="5937.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="307" y="5941.2754">entries() : IterableIterator&lt;[number, number]&gt;</text><ellipse cx="298" cy="5950.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="307" y="5954.2305">every(predicate: Function, thisArg: any) : boolean</text><ellipse cx="298" cy="5963.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="307" y="5967.1855">fill(value: number, start: number, end: number) : Float32Array</text><ellipse cx="298" cy="5976.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="307" y="5980.1406">filter(predicate: Function, thisArg: any) : Float32Array</text><ellipse cx="298" cy="5989.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="307" y="5993.0957">find(predicate: Function, thisArg: any) : undefined | number</text><ellipse cx="298" cy="6002.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="307" y="6006.0508">findIndex(predicate: Function, thisArg: any) : number</text><ellipse cx="298" cy="6015.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="307" y="6019.0059">forEach(callbackfn: Function, thisArg: any) : void</text><ellipse cx="298" cy="6028.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="307" y="6031.9609">includes(searchElement: number, fromIndex: number) : boolean</text><ellipse cx="298" cy="6041.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="307" y="6044.916">indexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="298" cy="6054.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="307" y="6057.8711">join(separator: string) : string</text><ellipse cx="298" cy="6067.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="307" y="6070.8262">keys() : IterableIterator&lt;number&gt;</text><ellipse cx="298" cy="6080.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="307" y="6083.7813">lastIndexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="298" cy="6093.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="307" y="6096.7363">map(callbackfn: Function, thisArg: any) : Float32Array</text><ellipse cx="298" cy="6106.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="307" y="6109.6914">reduce(callbackfn: Function) : number</text><ellipse cx="298" cy="6119.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="307" y="6122.6465">reduce(callbackfn: Function, initialValue: number) : number</text><ellipse cx="298" cy="6131.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="307" y="6135.6016">reduce</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="344" y="6135.6016">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="298" cy="6144.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="307" y="6148.5566">reduceRight(callbackfn: Function) : number</text><ellipse cx="298" cy="6157.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="307" y="6161.5117">reduceRight(callbackfn: Function, initialValue: number) : number</text><ellipse cx="298" cy="6170.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="307" y="6174.4668">reduceRight</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="372" y="6174.4668">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="298" cy="6183.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="307" y="6187.4219">reverse() : Float32Array</text><ellipse cx="298" cy="6196.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="307" y="6200.377">set(array: ArrayLike&lt;number&gt;, offset: number) : void</text><ellipse cx="298" cy="6209.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="307" y="6213.332">slice(start: number, end: number) : Float32Array</text><ellipse cx="298" cy="6222.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="307" y="6226.2871">some(predicate: Function, thisArg: any) : boolean</text><ellipse cx="298" cy="6235.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="307" y="6239.2422">sort(compareFn: Function) : Float32Array</text><ellipse cx="298" cy="6248.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="307" y="6252.1973">subarray(begin: number, end: number) : Float32Array</text><ellipse cx="298" cy="6261.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="307" y="6265.1523">toLocaleString() : string</text><ellipse cx="298" cy="6274.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="307" y="6278.1074">toString() : string</text><ellipse cx="298" cy="6287.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="307" y="6291.0625">valueOf() : Float32Array</text><ellipse cx="298" cy="6300.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="307" y="6304.0176">values() : IterableIterator&lt;number&gt;</text><ellipse cx="298" cy="6313.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="307" y="6316.9727">[iterator]() : IterableIterator&lt;number&gt;</text><!--MD5=[ce90b70912192d8c7345329b8248deed]
class Float64Array--><rect codeLine="461" fill="#FEFECE" filter="url(#f1tctgwpf4c8m2)" height="527.3379" id="Float64Array" style="stroke:#A80036;stroke-width:1.5;" width="405" x="287" y="6358.5"/><ellipse cx="448.25" cy="6374.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M444.6777,6370.7651 L444.6777,6368.6069 L452.0571,6368.6069 L452.0571,6370.7651 L449.5918,6370.7651 L449.5918,6378.8418 L452.0571,6378.8418 L452.0571,6381 L444.6777,6381 L444.6777,6378.8418 L447.1431,6378.8418 L447.1431,6370.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="74" x="468.75" y="6379.0352">Float64Array</text><line style="stroke:#A80036;stroke-width:1.5;" x1="288" x2="691" y1="6390.5" y2="6390.5"/><ellipse cx="298" cy="6401.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="307" y="6405.1348">buffer : ArrayBufferLike</text><ellipse cx="298" cy="6414.4551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="307" y="6418.0898">byteLength : number</text><ellipse cx="298" cy="6427.4102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="307" y="6431.0449">byteOffset : number</text><ellipse cx="298" cy="6440.3652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="307" y="6444">BYTES_PER_ELEMENT : number</text><ellipse cx="298" cy="6453.3203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="307" y="6456.9551">length : number</text><ellipse cx="298" cy="6466.2754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="307" y="6469.9102">[toStringTag] : "Float64Array"</text><line style="stroke:#A80036;stroke-width:1.5;" x1="288" x2="691" y1="6476.2305" y2="6476.2305"/><ellipse cx="298" cy="6487.2305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="307" y="6490.8652">at(index: number) : undefined | number</text><ellipse cx="298" cy="6500.1855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="379" x="307" y="6503.8203">copyWithin(target: number, start: number, end: number) : Float64Array</text><ellipse cx="298" cy="6513.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="307" y="6516.7754">entries() : IterableIterator&lt;[number, number]&gt;</text><ellipse cx="298" cy="6526.0957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="307" y="6529.7305">every(predicate: Function, thisArg: any) : boolean</text><ellipse cx="298" cy="6539.0508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="307" y="6542.6855">fill(value: number, start: number, end: number) : Float64Array</text><ellipse cx="298" cy="6552.0059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="307" y="6555.6406">filter(predicate: Function, thisArg: any) : Float64Array</text><ellipse cx="298" cy="6564.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="307" y="6568.5957">find(predicate: Function, thisArg: any) : undefined | number</text><ellipse cx="298" cy="6577.916" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="307" y="6581.5508">findIndex(predicate: Function, thisArg: any) : number</text><ellipse cx="298" cy="6590.8711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="307" y="6594.5059">forEach(callbackfn: Function, thisArg: any) : void</text><ellipse cx="298" cy="6603.8262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="307" y="6607.4609">includes(searchElement: number, fromIndex: number) : boolean</text><ellipse cx="298" cy="6616.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="307" y="6620.416">indexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="298" cy="6629.7363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="307" y="6633.3711">join(separator: string) : string</text><ellipse cx="298" cy="6642.6914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="307" y="6646.3262">keys() : IterableIterator&lt;number&gt;</text><ellipse cx="298" cy="6655.6465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="307" y="6659.2813">lastIndexOf(searchElement: number, fromIndex: number) : number</text><ellipse cx="298" cy="6668.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="307" y="6672.2363">map(callbackfn: Function, thisArg: any) : Float64Array</text><ellipse cx="298" cy="6681.5566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="307" y="6685.1914">reduce(callbackfn: Function) : number</text><ellipse cx="298" cy="6694.5117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="307" y="6698.1465">reduce(callbackfn: Function, initialValue: number) : number</text><ellipse cx="298" cy="6707.4668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="307" y="6711.1016">reduce</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="344" y="6711.1016">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="298" cy="6720.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="307" y="6724.0566">reduceRight(callbackfn: Function) : number</text><ellipse cx="298" cy="6733.377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="307" y="6737.0117">reduceRight(callbackfn: Function, initialValue: number) : number</text><ellipse cx="298" cy="6746.332" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="307" y="6749.9668">reduceRight</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="372" y="6749.9668">(callbackfn: Function, initialValue: U) : U</text><ellipse cx="298" cy="6759.2871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="307" y="6762.9219">reverse() : Float64Array</text><ellipse cx="298" cy="6772.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="307" y="6775.877">set(array: ArrayLike&lt;number&gt;, offset: number) : void</text><ellipse cx="298" cy="6785.1973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="307" y="6788.832">slice(start: number, end: number) : Float64Array</text><ellipse cx="298" cy="6798.1523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="307" y="6801.7871">some(predicate: Function, thisArg: any) : boolean</text><ellipse cx="298" cy="6811.1074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="307" y="6814.7422">sort(compareFn: Function) : Float64Array</text><ellipse cx="298" cy="6824.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="307" y="6827.6973">subarray(begin: number, end: number) : Float64Array</text><ellipse cx="298" cy="6837.0176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="307" y="6840.6523">toString() : string</text><ellipse cx="298" cy="6849.9727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="307" y="6853.6074">valueOf() : Float64Array</text><ellipse cx="298" cy="6862.9277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="307" y="6866.5625">values() : IterableIterator&lt;number&gt;</text><ellipse cx="298" cy="6875.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="307" y="6879.5176">[iterator]() : IterableIterator&lt;number&gt;</text><!--MD5=[3c7fc19dcda7c7e7ce6e14140da97bf8]
reverse link RelativeIndexable<T> to Uint8Array--><path codeLine="48" d="M109.87,3471.11 C116.71,3115.38 164.18,848.07 269,564 C275.46,546.49 283.38,529.18 292.34,512.25 " fill="none" id="RelativeIndexable&lt;T&gt;-backto-Uint8Array" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="116.87,3471.46,109.49,3491.32,102.87,3471.19,116.87,3471.46" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[dd8bd87c9a3d75c3f105f4bb1306b04a]
reverse link RelativeIndexable<T> to Array<T>--><path codeLine="95" d="M108.98,3471.22 C109.32,3183.84 118.3,1655.54 269,1217 C280.53,1183.45 296.43,1150.07 314.46,1118.19 " fill="none" id="RelativeIndexable&lt;T&gt;-backto-Array&lt;T&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="115.98,3471.45,108.96,3491.45,101.98,3471.45,115.98,3471.45" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[f22eaffd759a8f8f904faa98ad3863f0]
reverse link RelativeIndexable<T> to Uint8ClampedArray--><path codeLine="136" d="M109.86,3471.29 C114.82,3228.67 144.22,2111.19 269,1792 C271.17,1786.45 273.48,1780.92 275.92,1775.41 " fill="none" id="RelativeIndexable&lt;T&gt;-backto-Uint8ClampedArray" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="116.85,3471.55,109.46,3491.4,102.85,3471.27,116.85,3471.55" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[c768d5f82149c7004f81927b1dbcc4fc]
reverse link RelativeIndexable<T> to Uint16Array--><path codeLine="177" d="M112.31,3471.2 C126.21,3281.86 183.06,2572.84 269,2367 C274.86,2352.96 281.58,2339.01 288.94,2325.25 " fill="none" id="RelativeIndexable&lt;T&gt;-backto-Uint16Array" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="119.28,3471.98,110.85,3491.42,105.31,3470.97,119.28,3471.98" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[8a74df7ec9c59cdc4026266d98a7d614]
reverse link RelativeIndexable<T> to Uint32Array--><path codeLine="218" d="M115.76,3471.38 C131.68,3370.49 177.31,3126.17 269,2942 C275.08,2929.79 281.71,2917.58 288.76,2905.46 " fill="none" id="RelativeIndexable&lt;T&gt;-backto-Uint32Array" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="122.63,3472.74,112.69,3491.46,108.79,3470.63,122.63,3472.74" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[1f1c16c7102ac25dc64fe424ab021485]
reverse link RelativeIndexable<T> to Int8Array--><path codeLine="259" d="M160.31,3479.06 C195.96,3452.01 245.91,3414.1 296.11,3376 " fill="none" id="RelativeIndexable&lt;T&gt;-backto-Int8Array" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="164.19,3484.91,144.02,3491.42,155.72,3473.76,164.19,3484.91" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[2248e3a85b6bae92daa01c6af92b33a2]
reverse link RelativeIndexable<T> to Int16Array--><path codeLine="300" d="M160.33,3556.82 C195.2,3583.19 243.76,3619.91 292.85,3657.04 " fill="none" id="RelativeIndexable&lt;T&gt;-backto-Int16Array" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="156.09,3562.39,144.36,3544.74,164.54,3551.22,156.09,3562.39" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[1d33beaba0cb2c539dc8d71d9e159910]
reverse link RelativeIndexable<T> to Int32Array--><path codeLine="341" d="M115.87,3564.8 C131.95,3665.53 177.78,3908.6 269,4092 C276.28,4106.64 284.34,4121.27 292.96,4135.75 " fill="none" id="RelativeIndexable&lt;T&gt;-backto-Int32Array" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="108.91,3565.58,112.76,3544.74,122.74,3563.43,108.91,3565.58" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[ad256c47d5c2508b2be30c80ba8c7da7]
reverse link RelativeIndexable<T> to BigUint64Array--><path codeLine="380" d="M112.2,3564.76 C125.66,3753.98 181.06,4462.42 269,4667 C272.62,4675.42 276.57,4683.79 280.79,4692.1 " fill="none" id="RelativeIndexable&lt;T&gt;-backto-BigUint64Array" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="105.2,3565,110.79,3544.56,119.17,3564.02,105.2,3565" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[5d2fe8c1ae0b43ea460db2644ad285a8]
reverse link RelativeIndexable<T> to BigInt64Array--><path codeLine="419" d="M109.82,3565.13 C114.58,3806.38 142.94,4903.82 269,5216 C273.69,5227.61 279.03,5239.13 284.9,5250.49 " fill="none" id="RelativeIndexable&lt;T&gt;-backto-BigInt64Array" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="102.82,3564.93,109.44,3544.8,116.82,3564.66,102.82,3564.93" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[ce9599af7ee68504917081f967638747]
reverse link RelativeIndexable<T> to Float32Array--><path codeLine="460" d="M108.72,3564.7 C107.54,3848.34 109.14,5341.78 269,5765 C274.16,5778.67 280.2,5792.24 286.91,5805.6 " fill="none" id="RelativeIndexable&lt;T&gt;-backto-Float32Array" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="101.72,3564.67,108.81,3544.7,115.72,3564.73,101.72,3564.67" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[d136109f7d3c4f4cb27e0a8b8098d761]
reverse link RelativeIndexable<T> to Float64Array--><path codeLine="500" d="M109.98,3564.92 C117.41,3911.61 167.56,6069.7 269,6340 C274.12,6353.65 280.15,6367.17 286.89,6380.47 " fill="none" id="RelativeIndexable&lt;T&gt;-backto-Float64Array" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="102.97,3564.89,109.55,3544.75,116.97,3564.59,102.97,3564.89" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[2e64dd6997b67064460ebf892673e360]
@startuml
skinparam BackgroundColor transparent
left to right direction
hide empty methods
hide empty fields
interface "RelativeIndexable<T>" {
    +at(index: number) : undefined | T
}
interface "Uint8Array" {
    +buffer : ArrayBufferLike
    +byteLength : number
    +byteOffset : number
    +BYTES_PER_ELEMENT : number
    +length : number
    +[toStringTag] : "Uint8Array"
    +at(index: number) : undefined | number
    +copyWithin(target: number, start: number, end: number) : Uint8Array
    +entries() : IterableIterator<[number, number]>
    +every(predicate: Function, thisArg: any) : boolean
    +fill(value: number, start: number, end: number) : Uint8Array
    +filter(predicate: Function, thisArg: any) : Uint8Array
    +find(predicate: Function, thisArg: any) : undefined | number
    +findIndex(predicate: Function, thisArg: any) : number
    +forEach(callbackfn: Function, thisArg: any) : void
    +includes(searchElement: number, fromIndex: number) : boolean
    +indexOf(searchElement: number, fromIndex: number) : number
    +join(separator: string) : string
    +keys() : IterableIterator<number>
    +lastIndexOf(searchElement: number, fromIndex: number) : number
    +map(callbackfn: Function, thisArg: any) : Uint8Array
    +reduce(callbackfn: Function) : number
    +reduce(callbackfn: Function, initialValue: number) : number
    +reduce<U>(callbackfn: Function, initialValue: U) : U
    +reduceRight(callbackfn: Function) : number
    +reduceRight(callbackfn: Function, initialValue: number) : number
    +reduceRight<U>(callbackfn: Function, initialValue: U) : U
    +reverse() : Uint8Array
    +set(array: ArrayLike<number>, offset: number) : void
    +slice(start: number, end: number) : Uint8Array
    +some(predicate: Function, thisArg: any) : boolean
    +sort(compareFn: Function) : Uint8Array
    +subarray(begin: number, end: number) : Uint8Array
    +toLocaleString() : string
    +toString() : string
    +valueOf() : Uint8Array
    +values() : IterableIterator<number>
    +[iterator]() : IterableIterator<number>
}
"RelativeIndexable<T>" <|- - "Uint8Array"
interface "Array<T>" {
    +length : number
    +at(index: number) : undefined | T
    +concat(items: ConcatArray<T>[]) : T[]
    +concat(items: (T | ConcatArray<T>)[]) : T[]
    +copyWithin(target: number, start: number, end: number) : T[]
    +entries() : IterableIterator<[number, T]>
    +every<S>(predicate: Function, thisArg: any) : this is S[]
    +every(predicate: Function, thisArg: any) : boolean
    +fill(value: T, start: number, end: number) : T[]
    +filter<S>(predicate: Function, thisArg: any) : S[]
    +filter(predicate: Function, thisArg: any) : T[]
    +find<S>(predicate: Function, thisArg: any) : undefined | S
    +find(predicate: Function, thisArg: any) : undefined | T
    +findIndex(predicate: Function, thisArg: any) : number
    +flat<A, D>(depth: D) : FlatArray<A, D>[]
    +flatMap<U, This>(callback: Function, thisArg: This) : U[]
    +forEach(callbackfn: Function, thisArg: any) : void
    +includes(searchElement: T, fromIndex: number) : boolean
    +indexOf(searchElement: T, fromIndex: number) : number
    +join(separator: string) : string
    +keys() : IterableIterator<number>
    +lastIndexOf(searchElement: T, fromIndex: number) : number
    +map<U>(callbackfn: Function, thisArg: any) : U[]
    +pop() : undefined | T
    +push(items: T[]) : number
    +reduce(callbackfn: Function) : T
    +reduce(callbackfn: Function, initialValue: T) : T
    +reduce<U>(callbackfn: Function, initialValue: U) : U
    +reduceRight(callbackfn: Function) : T
    +reduceRight(callbackfn: Function, initialValue: T) : T
    +reduceRight<U>(callbackfn: Function, initialValue: U) : U
    +reverse() : T[]
    +shift() : undefined | T
    +slice(start: number, end: number) : T[]
    +some(predicate: Function, thisArg: any) : boolean
    +sort(compareFn: Function) : T[]
    +splice(start: number, deleteCount: number) : T[]
    +splice(start: number, deleteCount: number, items: T[]) : T[]
    +toLocaleString() : string
    +toString() : string
    +unshift(items: T[]) : number
    +values() : IterableIterator<T>
    +[iterator]() : IterableIterator<T>
    +[unscopables]() : Object
}
"RelativeIndexable<T>" <|- - "Array<T>"
interface "Uint8ClampedArray" {
    +buffer : ArrayBufferLike
    +byteLength : number
    +byteOffset : number
    +BYTES_PER_ELEMENT : number
    +length : number
    +[toStringTag] : "Uint8ClampedArray"
    +at(index: number) : undefined | number
    +copyWithin(target: number, start: number, end: number) : Uint8ClampedArray
    +entries() : IterableIterator<[number, number]>
    +every(predicate: Function, thisArg: any) : boolean
    +fill(value: number, start: number, end: number) : Uint8ClampedArray
    +filter(predicate: Function, thisArg: any) : Uint8ClampedArray
    +find(predicate: Function, thisArg: any) : undefined | number
    +findIndex(predicate: Function, thisArg: any) : number
    +forEach(callbackfn: Function, thisArg: any) : void
    +includes(searchElement: number, fromIndex: number) : boolean
    +indexOf(searchElement: number, fromIndex: number) : number
    +join(separator: string) : string
    +keys() : IterableIterator<number>
    +lastIndexOf(searchElement: number, fromIndex: number) : number
    +map(callbackfn: Function, thisArg: any) : Uint8ClampedArray
    +reduce(callbackfn: Function) : number
    +reduce(callbackfn: Function, initialValue: number) : number
    +reduce<U>(callbackfn: Function, initialValue: U) : U
    +reduceRight(callbackfn: Function) : number
    +reduceRight(callbackfn: Function, initialValue: number) : number
    +reduceRight<U>(callbackfn: Function, initialValue: U) : U
    +reverse() : Uint8ClampedArray
    +set(array: ArrayLike<number>, offset: number) : void
    +slice(start: number, end: number) : Uint8ClampedArray
    +some(predicate: Function, thisArg: any) : boolean
    +sort(compareFn: Function) : Uint8ClampedArray
    +subarray(begin: number, end: number) : Uint8ClampedArray
    +toLocaleString() : string
    +toString() : string
    +valueOf() : Uint8ClampedArray
    +values() : IterableIterator<number>
    +[iterator]() : IterableIterator<number>
}
"RelativeIndexable<T>" <|- - "Uint8ClampedArray"
interface "Uint16Array" {
    +buffer : ArrayBufferLike
    +byteLength : number
    +byteOffset : number
    +BYTES_PER_ELEMENT : number
    +length : number
    +[toStringTag] : "Uint16Array"
    +at(index: number) : undefined | number
    +copyWithin(target: number, start: number, end: number) : Uint16Array
    +entries() : IterableIterator<[number, number]>
    +every(predicate: Function, thisArg: any) : boolean
    +fill(value: number, start: number, end: number) : Uint16Array
    +filter(predicate: Function, thisArg: any) : Uint16Array
    +find(predicate: Function, thisArg: any) : undefined | number
    +findIndex(predicate: Function, thisArg: any) : number
    +forEach(callbackfn: Function, thisArg: any) : void
    +includes(searchElement: number, fromIndex: number) : boolean
    +indexOf(searchElement: number, fromIndex: number) : number
    +join(separator: string) : string
    +keys() : IterableIterator<number>
    +lastIndexOf(searchElement: number, fromIndex: number) : number
    +map(callbackfn: Function, thisArg: any) : Uint16Array
    +reduce(callbackfn: Function) : number
    +reduce(callbackfn: Function, initialValue: number) : number
    +reduce<U>(callbackfn: Function, initialValue: U) : U
    +reduceRight(callbackfn: Function) : number
    +reduceRight(callbackfn: Function, initialValue: number) : number
    +reduceRight<U>(callbackfn: Function, initialValue: U) : U
    +reverse() : Uint16Array
    +set(array: ArrayLike<number>, offset: number) : void
    +slice(start: number, end: number) : Uint16Array
    +some(predicate: Function, thisArg: any) : boolean
    +sort(compareFn: Function) : Uint16Array
    +subarray(begin: number, end: number) : Uint16Array
    +toLocaleString() : string
    +toString() : string
    +valueOf() : Uint16Array
    +values() : IterableIterator<number>
    +[iterator]() : IterableIterator<number>
}
"RelativeIndexable<T>" <|- - "Uint16Array"
interface "Uint32Array" {
    +buffer : ArrayBufferLike
    +byteLength : number
    +byteOffset : number
    +BYTES_PER_ELEMENT : number
    +length : number
    +[toStringTag] : "Uint32Array"
    +at(index: number) : undefined | number
    +copyWithin(target: number, start: number, end: number) : Uint32Array
    +entries() : IterableIterator<[number, number]>
    +every(predicate: Function, thisArg: any) : boolean
    +fill(value: number, start: number, end: number) : Uint32Array
    +filter(predicate: Function, thisArg: any) : Uint32Array
    +find(predicate: Function, thisArg: any) : undefined | number
    +findIndex(predicate: Function, thisArg: any) : number
    +forEach(callbackfn: Function, thisArg: any) : void
    +includes(searchElement: number, fromIndex: number) : boolean
    +indexOf(searchElement: number, fromIndex: number) : number
    +join(separator: string) : string
    +keys() : IterableIterator<number>
    +lastIndexOf(searchElement: number, fromIndex: number) : number
    +map(callbackfn: Function, thisArg: any) : Uint32Array
    +reduce(callbackfn: Function) : number
    +reduce(callbackfn: Function, initialValue: number) : number
    +reduce<U>(callbackfn: Function, initialValue: U) : U
    +reduceRight(callbackfn: Function) : number
    +reduceRight(callbackfn: Function, initialValue: number) : number
    +reduceRight<U>(callbackfn: Function, initialValue: U) : U
    +reverse() : Uint32Array
    +set(array: ArrayLike<number>, offset: number) : void
    +slice(start: number, end: number) : Uint32Array
    +some(predicate: Function, thisArg: any) : boolean
    +sort(compareFn: Function) : Uint32Array
    +subarray(begin: number, end: number) : Uint32Array
    +toLocaleString() : string
    +toString() : string
    +valueOf() : Uint32Array
    +values() : IterableIterator<number>
    +[iterator]() : IterableIterator<number>
}
"RelativeIndexable<T>" <|- - "Uint32Array"
interface "Int8Array" {
    +buffer : ArrayBufferLike
    +byteLength : number
    +byteOffset : number
    +BYTES_PER_ELEMENT : number
    +length : number
    +[toStringTag] : "Int8Array"
    +at(index: number) : undefined | number
    +copyWithin(target: number, start: number, end: number) : Int8Array
    +entries() : IterableIterator<[number, number]>
    +every(predicate: Function, thisArg: any) : boolean
    +fill(value: number, start: number, end: number) : Int8Array
    +filter(predicate: Function, thisArg: any) : Int8Array
    +find(predicate: Function, thisArg: any) : undefined | number
    +findIndex(predicate: Function, thisArg: any) : number
    +forEach(callbackfn: Function, thisArg: any) : void
    +includes(searchElement: number, fromIndex: number) : boolean
    +indexOf(searchElement: number, fromIndex: number) : number
    +join(separator: string) : string
    +keys() : IterableIterator<number>
    +lastIndexOf(searchElement: number, fromIndex: number) : number
    +map(callbackfn: Function, thisArg: any) : Int8Array
    +reduce(callbackfn: Function) : number
    +reduce(callbackfn: Function, initialValue: number) : number
    +reduce<U>(callbackfn: Function, initialValue: U) : U
    +reduceRight(callbackfn: Function) : number
    +reduceRight(callbackfn: Function, initialValue: number) : number
    +reduceRight<U>(callbackfn: Function, initialValue: U) : U
    +reverse() : Int8Array
    +set(array: ArrayLike<number>, offset: number) : void
    +slice(start: number, end: number) : Int8Array
    +some(predicate: Function, thisArg: any) : boolean
    +sort(compareFn: Function) : Int8Array
    +subarray(begin: number, end: number) : Int8Array
    +toLocaleString() : string
    +toString() : string
    +valueOf() : Int8Array
    +values() : IterableIterator<number>
    +[iterator]() : IterableIterator<number>
}
"RelativeIndexable<T>" <|- - "Int8Array"
interface "Int16Array" {
    +buffer : ArrayBufferLike
    +byteLength : number
    +byteOffset : number
    +BYTES_PER_ELEMENT : number
    +length : number
    +[toStringTag] : "Int16Array"
    +at(index: number) : undefined | number
    +copyWithin(target: number, start: number, end: number) : Int16Array
    +entries() : IterableIterator<[number, number]>
    +every(predicate: Function, thisArg: any) : boolean
    +fill(value: number, start: number, end: number) : Int16Array
    +filter(predicate: Function, thisArg: any) : Int16Array
    +find(predicate: Function, thisArg: any) : undefined | number
    +findIndex(predicate: Function, thisArg: any) : number
    +forEach(callbackfn: Function, thisArg: any) : void
    +includes(searchElement: number, fromIndex: number) : boolean
    +indexOf(searchElement: number, fromIndex: number) : number
    +join(separator: string) : string
    +keys() : IterableIterator<number>
    +lastIndexOf(searchElement: number, fromIndex: number) : number
    +map(callbackfn: Function, thisArg: any) : Int16Array
    +reduce(callbackfn: Function) : number
    +reduce(callbackfn: Function, initialValue: number) : number
    +reduce<U>(callbackfn: Function, initialValue: U) : U
    +reduceRight(callbackfn: Function) : number
    +reduceRight(callbackfn: Function, initialValue: number) : number
    +reduceRight<U>(callbackfn: Function, initialValue: U) : U
    +reverse() : Int16Array
    +set(array: ArrayLike<number>, offset: number) : void
    +slice(start: number, end: number) : Int16Array
    +some(predicate: Function, thisArg: any) : boolean
    +sort(compareFn: Function) : Int16Array
    +subarray(begin: number, end: number) : Int16Array
    +toLocaleString() : string
    +toString() : string
    +valueOf() : Int16Array
    +values() : IterableIterator<number>
    +[iterator]() : IterableIterator<number>
}
"RelativeIndexable<T>" <|- - "Int16Array"
interface "Int32Array" {
    +buffer : ArrayBufferLike
    +byteLength : number
    +byteOffset : number
    +BYTES_PER_ELEMENT : number
    +length : number
    +[toStringTag] : "Int32Array"
    +at(index: number) : undefined | number
    +copyWithin(target: number, start: number, end: number) : Int32Array
    +entries() : IterableIterator<[number, number]>
    +every(predicate: Function, thisArg: any) : boolean
    +fill(value: number, start: number, end: number) : Int32Array
    +filter(predicate: Function, thisArg: any) : Int32Array
    +find(predicate: Function, thisArg: any) : undefined | number
    +findIndex(predicate: Function, thisArg: any) : number
    +forEach(callbackfn: Function, thisArg: any) : void
    +includes(searchElement: number, fromIndex: number) : boolean
    +indexOf(searchElement: number, fromIndex: number) : number
    +join(separator: string) : string
    +keys() : IterableIterator<number>
    +lastIndexOf(searchElement: number, fromIndex: number) : number
    +map(callbackfn: Function, thisArg: any) : Int32Array
    +reduce(callbackfn: Function) : number
    +reduce(callbackfn: Function, initialValue: number) : number
    +reduce<U>(callbackfn: Function, initialValue: U) : U
    +reduceRight(callbackfn: Function) : number
    +reduceRight(callbackfn: Function, initialValue: number) : number
    +reduceRight<U>(callbackfn: Function, initialValue: U) : U
    +reverse() : Int32Array
    +set(array: ArrayLike<number>, offset: number) : void
    +slice(start: number, end: number) : Int32Array
    +some(predicate: Function, thisArg: any) : boolean
    +sort(compareFn: Function) : Int32Array
    +subarray(begin: number, end: number) : Int32Array
    +toLocaleString() : string
    +toString() : string
    +valueOf() : Int32Array
    +values() : IterableIterator<number>
    +[iterator]() : IterableIterator<number>
}
"RelativeIndexable<T>" <|- - "Int32Array"
interface "BigUint64Array" {
    +buffer : ArrayBufferLike
    +byteLength : number
    +byteOffset : number
    +BYTES_PER_ELEMENT : number
    +length : number
    +[toStringTag] : "BigUint64Array"
    +at(index: number) : undefined | bigint
    +copyWithin(target: number, start: number, end: number) : BigUint64Array
    +entries() : IterableIterator<[number, bigint]>
    +every(predicate: Function, thisArg: any) : boolean
    +fill(value: bigint, start: number, end: number) : BigUint64Array
    +filter(predicate: Function, thisArg: any) : BigUint64Array
    +find(predicate: Function, thisArg: any) : undefined | bigint
    +findIndex(predicate: Function, thisArg: any) : number
    +forEach(callbackfn: Function, thisArg: any) : void
    +includes(searchElement: bigint, fromIndex: number) : boolean
    +indexOf(searchElement: bigint, fromIndex: number) : number
    +join(separator: string) : string
    +keys() : IterableIterator<number>
    +lastIndexOf(searchElement: bigint, fromIndex: number) : number
    +map(callbackfn: Function, thisArg: any) : BigUint64Array
    +reduce(callbackfn: Function) : bigint
    +reduce<U>(callbackfn: Function, initialValue: U) : U
    +reduceRight(callbackfn: Function) : bigint
    +reduceRight<U>(callbackfn: Function, initialValue: U) : U
    +reverse() : BigUint64Array
    +set(array: ArrayLike<bigint>, offset: number) : void
    +slice(start: number, end: number) : BigUint64Array
    +some(predicate: Function, thisArg: any) : boolean
    +sort(compareFn: Function) : BigUint64Array
    +subarray(begin: number, end: number) : BigUint64Array
    +toLocaleString() : string
    +toString() : string
    +valueOf() : BigUint64Array
    +values() : IterableIterator<bigint>
    +[iterator]() : IterableIterator<bigint>
}
"RelativeIndexable<T>" <|- - "BigUint64Array"
interface "BigInt64Array" {
    +buffer : ArrayBufferLike
    +byteLength : number
    +byteOffset : number
    +BYTES_PER_ELEMENT : number
    +length : number
    +[toStringTag] : "BigInt64Array"
    +at(index: number) : undefined | bigint
    +copyWithin(target: number, start: number, end: number) : BigInt64Array
    +entries() : IterableIterator<[number, bigint]>
    +every(predicate: Function, thisArg: any) : boolean
    +fill(value: bigint, start: number, end: number) : BigInt64Array
    +filter(predicate: Function, thisArg: any) : BigInt64Array
    +find(predicate: Function, thisArg: any) : undefined | bigint
    +findIndex(predicate: Function, thisArg: any) : number
    +forEach(callbackfn: Function, thisArg: any) : void
    +includes(searchElement: bigint, fromIndex: number) : boolean
    +indexOf(searchElement: bigint, fromIndex: number) : number
    +join(separator: string) : string
    +keys() : IterableIterator<number>
    +lastIndexOf(searchElement: bigint, fromIndex: number) : number
    +map(callbackfn: Function, thisArg: any) : BigInt64Array
    +reduce(callbackfn: Function) : bigint
    +reduce<U>(callbackfn: Function, initialValue: U) : U
    +reduceRight(callbackfn: Function) : bigint
    +reduceRight<U>(callbackfn: Function, initialValue: U) : U
    +reverse() : BigInt64Array
    +set(array: ArrayLike<bigint>, offset: number) : void
    +slice(start: number, end: number) : BigInt64Array
    +some(predicate: Function, thisArg: any) : boolean
    +sort(compareFn: Function) : BigInt64Array
    +subarray(begin: number, end: number) : BigInt64Array
    +toLocaleString() : string
    +toString() : string
    +valueOf() : BigInt64Array
    +values() : IterableIterator<bigint>
    +[iterator]() : IterableIterator<bigint>
}
"RelativeIndexable<T>" <|- - "BigInt64Array"
interface "Float32Array" {
    +buffer : ArrayBufferLike
    +byteLength : number
    +byteOffset : number
    +BYTES_PER_ELEMENT : number
    +length : number
    +[toStringTag] : "Float32Array"
    +at(index: number) : undefined | number
    +copyWithin(target: number, start: number, end: number) : Float32Array
    +entries() : IterableIterator<[number, number]>
    +every(predicate: Function, thisArg: any) : boolean
    +fill(value: number, start: number, end: number) : Float32Array
    +filter(predicate: Function, thisArg: any) : Float32Array
    +find(predicate: Function, thisArg: any) : undefined | number
    +findIndex(predicate: Function, thisArg: any) : number
    +forEach(callbackfn: Function, thisArg: any) : void
    +includes(searchElement: number, fromIndex: number) : boolean
    +indexOf(searchElement: number, fromIndex: number) : number
    +join(separator: string) : string
    +keys() : IterableIterator<number>
    +lastIndexOf(searchElement: number, fromIndex: number) : number
    +map(callbackfn: Function, thisArg: any) : Float32Array
    +reduce(callbackfn: Function) : number
    +reduce(callbackfn: Function, initialValue: number) : number
    +reduce<U>(callbackfn: Function, initialValue: U) : U
    +reduceRight(callbackfn: Function) : number
    +reduceRight(callbackfn: Function, initialValue: number) : number
    +reduceRight<U>(callbackfn: Function, initialValue: U) : U
    +reverse() : Float32Array
    +set(array: ArrayLike<number>, offset: number) : void
    +slice(start: number, end: number) : Float32Array
    +some(predicate: Function, thisArg: any) : boolean
    +sort(compareFn: Function) : Float32Array
    +subarray(begin: number, end: number) : Float32Array
    +toLocaleString() : string
    +toString() : string
    +valueOf() : Float32Array
    +values() : IterableIterator<number>
    +[iterator]() : IterableIterator<number>
}
"RelativeIndexable<T>" <|- - "Float32Array"
interface "Float64Array" {
    +buffer : ArrayBufferLike
    +byteLength : number
    +byteOffset : number
    +BYTES_PER_ELEMENT : number
    +length : number
    +[toStringTag] : "Float64Array"
    +at(index: number) : undefined | number
    +copyWithin(target: number, start: number, end: number) : Float64Array
    +entries() : IterableIterator<[number, number]>
    +every(predicate: Function, thisArg: any) : boolean
    +fill(value: number, start: number, end: number) : Float64Array
    +filter(predicate: Function, thisArg: any) : Float64Array
    +find(predicate: Function, thisArg: any) : undefined | number
    +findIndex(predicate: Function, thisArg: any) : number
    +forEach(callbackfn: Function, thisArg: any) : void
    +includes(searchElement: number, fromIndex: number) : boolean
    +indexOf(searchElement: number, fromIndex: number) : number
    +join(separator: string) : string
    +keys() : IterableIterator<number>
    +lastIndexOf(searchElement: number, fromIndex: number) : number
    +map(callbackfn: Function, thisArg: any) : Float64Array
    +reduce(callbackfn: Function) : number
    +reduce(callbackfn: Function, initialValue: number) : number
    +reduce<U>(callbackfn: Function, initialValue: U) : U
    +reduceRight(callbackfn: Function) : number
    +reduceRight(callbackfn: Function, initialValue: number) : number
    +reduceRight<U>(callbackfn: Function, initialValue: U) : U
    +reverse() : Float64Array
    +set(array: ArrayLike<number>, offset: number) : void
    +slice(start: number, end: number) : Float64Array
    +some(predicate: Function, thisArg: any) : boolean
    +sort(compareFn: Function) : Float64Array
    +subarray(begin: number, end: number) : Float64Array
    +toString() : string
    +valueOf() : Float64Array
    +values() : IterableIterator<number>
    +[iterator]() : IterableIterator<number>
}
"RelativeIndexable<T>" <|- - "Float64Array"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>