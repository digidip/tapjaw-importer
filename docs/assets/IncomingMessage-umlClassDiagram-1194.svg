<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="3000px" preserveAspectRatio="none" style="width:658px;height:3000px;background:#00000000;" version="1.1" viewBox="0 0 658 3000" width="658px" zoomAndPan="magnify"><defs><filter height="300%" id="f558ehzsw2c9w" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[c976e0eb2d2b974c6a969bae55fd2ccf]
class IncomingMessage--><rect codeLine="4" fill="#FEFECE" filter="url(#f558ehzsw2c9w)" height="1563.7441" id="IncomingMessage" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="1423"/><ellipse cx="270.75" cy="1439" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M273.2231,1445.1431 Q272.6421,1445.4419 272.0029,1445.5913 Q271.3638,1445.7407 270.6582,1445.7407 Q268.1514,1445.7407 266.8315,1444.0889 Q265.5117,1442.437 265.5117,1439.3159 Q265.5117,1436.1865 266.8315,1434.5347 Q268.1514,1432.8828 270.6582,1432.8828 Q271.3638,1432.8828 272.0112,1433.0322 Q272.6587,1433.1816 273.2231,1433.4805 L273.2231,1436.2031 Q272.5923,1435.6221 271.9988,1435.3523 Q271.4053,1435.0825 270.7744,1435.0825 Q269.4297,1435.0825 268.7449,1436.1492 Q268.0601,1437.2158 268.0601,1439.3159 Q268.0601,1441.4077 268.7449,1442.4744 Q269.4297,1443.541 270.7744,1443.541 Q271.4053,1443.541 271.9988,1443.2712 Q272.5923,1443.0015 273.2231,1442.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="101" x="291.25" y="1443.5352">IncomingMessage</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="1455" y2="1455"/><ellipse cx="18" cy="1466" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="1469.6348">aborted : boolean</text><ellipse cx="18" cy="1478.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="1482.5898">captureRejections : boolean</text><ellipse cx="18" cy="1491.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="1495.5449">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="1504.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="27" y="1508.5">complete : boolean</text><ellipse cx="18" cy="1517.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="27" y="1521.4551">connection : Socket</text><ellipse cx="18" cy="1530.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="1534.4102">defaultMaxListeners : number</text><ellipse cx="18" cy="1543.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="1547.3652">destroyed : boolean</text><ellipse cx="18" cy="1556.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="1560.3203">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="1569.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="1573.2754">headers : IncomingHttpHeaders</text><ellipse cx="18" cy="1582.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="27" y="1586.2305">httpVersion : string</text><ellipse cx="18" cy="1595.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="144" x="27" y="1599.1855">httpVersionMajor : number</text><ellipse cx="18" cy="1608.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="145" x="27" y="1612.1406">httpVersionMinor : number</text><ellipse cx="18" cy="1621.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="27" y="1625.0957">method : string</text><ellipse cx="18" cy="1634.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="27" y="1638.0508">rawHeaders : string[]</text><ellipse cx="18" cy="1647.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="27" y="1651.0059">rawTrailers : string[]</text><ellipse cx="18" cy="1660.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="1663.9609">readable : boolean</text><ellipse cx="18" cy="1673.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="1676.916">readableAborted : boolean</text><ellipse cx="18" cy="1686.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="1689.8711">readableDidRead : boolean</text><ellipse cx="18" cy="1699.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="27" y="1702.8262">readableEncoding : null | BufferEncoding</text><ellipse cx="18" cy="1712.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="27" y="1715.7813">readableEnded : boolean</text><ellipse cx="18" cy="1725.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="1728.7363">readableFlowing : null | boolean</text><ellipse cx="18" cy="1738.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="27" y="1741.6914">readableHighWaterMark : number</text><ellipse cx="18" cy="1751.0117" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="1754.6465">readableLength : number</text><ellipse cx="18" cy="1763.9668" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="27" y="1767.6016">readableObjectMode : boolean</text><ellipse cx="18" cy="1776.9219" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="27" y="1780.5566">socket : Socket</text><ellipse cx="18" cy="1789.877" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="27" y="1793.5117">statusCode : number</text><ellipse cx="18" cy="1802.832" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="27" y="1806.4668">statusMessage : string</text><ellipse cx="18" cy="1815.7871" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="27" y="1819.4219">trailers : Dict&lt;string&gt;</text><ellipse cx="18" cy="1828.7422" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="56" x="27" y="1832.377">url : string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="1838.6973" y2="1838.6973"/><ellipse cx="18" cy="1849.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="1853.332">addListener(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="1862.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="27" y="1866.2871">addListener(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="1875.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="27" y="1879.2422">addListener(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="1888.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="1892.1973">addListener(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="1901.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="350" x="27" y="1905.1523">addListener(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="1914.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="364" x="27" y="1918.1074">addListener(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="1927.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="27" y="1931.0625">addListener(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="1940.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="27" y="1944.0176">addListener(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="1953.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="27" y="1956.9727">destroy(error: Error) : IncomingMessage</text><ellipse cx="18" cy="1966.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="1969.9277">emit(event: "close") : boolean</text><ellipse cx="18" cy="1979.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="27" y="1982.8828">emit(event: "data", chunk: any) : boolean</text><ellipse cx="18" cy="1992.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="1995.8379">emit(event: "end") : boolean</text><ellipse cx="18" cy="2005.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="2008.793">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="2018.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="2021.748">emit(event: "pause") : boolean</text><ellipse cx="18" cy="2031.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="27" y="2034.7031">emit(event: "readable") : boolean</text><ellipse cx="18" cy="2044.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="27" y="2047.6582">emit(event: "resume") : boolean</text><ellipse cx="18" cy="2056.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="2060.6133">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="2069.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="2073.5684">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="2082.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="478" x="27" y="2086.5234">from(iterable: Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;, options: ReadableOptions) : Readable</text><ellipse cx="18" cy="2095.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="2099.4785">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="2108.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="2112.4336">getMaxListeners() : number</text><ellipse cx="18" cy="2121.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="27" y="2125.3887">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="18" cy="2134.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="2138.3438">isPaused() : boolean</text><ellipse cx="18" cy="2147.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="2151.2988">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="2160.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="2164.2539">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="2173.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="2177.209">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="2186.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="27" y="2190.1641">off(eventName: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2199.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="27" y="2203.1191">on(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2212.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="2216.0742">on(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2225.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="2229.0293">on(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2238.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="27" y="2241.9844">on(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2251.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="27" y="2254.9395">on(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2264.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="27" y="2267.8945">on(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2277.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="27" y="2280.8496">on(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2290.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="342" x="27" y="2293.8047">on(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2303.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="2306.7598">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="2316.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="27" y="2319.7148">once(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2329.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="304" x="27" y="2332.6699">once(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2341.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="27" y="2345.625">once(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2354.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="27" y="2358.5801">once(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2367.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="2371.5352">once(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2380.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="27" y="2384.4902">once(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2393.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="27" y="2397.4453">once(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2406.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="354" x="27" y="2410.4004">once(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2419.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="2423.3555">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="2432.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="2436.3105">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="2445.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="145" x="27" y="2449.2656">pause() : IncomingMessage</text><ellipse cx="18" cy="2458.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="2462.2207">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="2471.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="371" x="27" y="2475.1758">prependListener(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2484.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="2488.1309">prependListener(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2497.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="27" y="2501.0859">prependListener(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2510.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="371" x="27" y="2514.041">prependListener(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2523.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="375" x="27" y="2526.9961">prependListener(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2536.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="389" x="27" y="2539.9512">prependListener(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2549.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="383" x="27" y="2552.9063">prependListener(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2562.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="416" x="27" y="2565.8613">prependListener(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2575.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="399" x="27" y="2578.8164">prependOnceListener(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2588.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="394" x="27" y="2591.7715">prependOnceListener(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2601.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="27" y="2604.7266">prependOnceListener(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2614.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="399" x="27" y="2617.6816">prependOnceListener(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2627.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="403" x="27" y="2630.6367">prependOnceListener(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2639.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="27" y="2643.5918">prependOnceListener(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2652.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="411" x="27" y="2656.5469">prependOnceListener(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2665.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="444" x="27" y="2669.502">prependOnceListener(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2678.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="2682.457">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="18" cy="2691.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="2695.4121">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="2704.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="2708.3672">read(size: number) : any</text><ellipse cx="18" cy="2717.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="332" x="27" y="2721.3223">removeAllListeners(event: string | symbol) : IncomingMessage</text><ellipse cx="18" cy="2730.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="2734.2773">removeListener(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2743.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="27" y="2747.2324">removeListener(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2756.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="27" y="2760.1875">removeListener(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2769.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="2773.1426">removeListener(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2782.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="370" x="27" y="2786.0977">removeListener(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2795.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="384" x="27" y="2799.0527">removeListener(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2808.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="378" x="27" y="2812.0078">removeListener(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2821.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="411" x="27" y="2824.9629">removeListener(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="2834.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="27" y="2837.918">resume() : IncomingMessage</text><ellipse cx="18" cy="2847.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="27" y="2850.873">setEncoding(encoding: BufferEncoding) : IncomingMessage</text><ellipse cx="18" cy="2860.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="27" y="2863.8281">setMaxListeners(n: number) : IncomingMessage</text><ellipse cx="18" cy="2873.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="27" y="2876.7832">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="18" cy="2886.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="27" y="2889.7383">setTimeout(msecs: number, callback: Function) : IncomingMessage</text><ellipse cx="18" cy="2899.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="27" y="2902.6934">unpipe(destination: WritableStream) : IncomingMessage</text><ellipse cx="18" cy="2912.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="27" y="2915.6484">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="18" cy="2924.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="27" y="2928.6035">wrap(stream: ReadableStream) : IncomingMessage</text><ellipse cx="18" cy="2937.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="2941.5586">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="2950.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="2954.5137">_construct(callback: Function) : void</text><ellipse cx="18" cy="2963.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="2967.4688">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="2976.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="2980.4238">_read(size: number) : void</text><!--MD5=[c367c524f13260ba207946109d621584]
class Readable--><rect codeLine="123" fill="#FEFECE" filter="url(#f558ehzsw2c9w)" height="1356.4629" id="Readable" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="7"/><ellipse cx="293.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M296.2231,29.1431 Q295.6421,29.4419 295.0029,29.5913 Q294.3638,29.7407 293.6582,29.7407 Q291.1514,29.7407 289.8315,28.0889 Q288.5117,26.437 288.5117,23.3159 Q288.5117,20.1865 289.8315,18.5347 Q291.1514,16.8828 293.6582,16.8828 Q294.3638,16.8828 295.0112,17.0322 Q295.6587,17.1816 296.2231,17.4805 L296.2231,20.2031 Q295.5923,19.6221 294.9988,19.3523 Q294.4053,19.0825 293.7744,19.0825 Q292.4297,19.0825 291.7449,20.1492 Q291.0601,21.2158 291.0601,23.3159 Q291.0601,25.4077 291.7449,26.4744 Q292.4297,27.541 293.7744,27.541 Q294.4053,27.541 294.9988,27.2712 Q295.5923,27.0015 296.2231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="55" x="314.25" y="27.5352">Readable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="39" y2="39"/><ellipse cx="18" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="53.6348">captureRejections : boolean</text><ellipse cx="18" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="66.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="75.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="79.5449">defaultMaxListeners : number</text><ellipse cx="18" cy="88.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="92.5">destroyed : boolean</text><ellipse cx="18" cy="101.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="105.4551">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="114.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="118.4102">readable : boolean</text><ellipse cx="18" cy="127.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="131.3652">readableAborted : boolean</text><ellipse cx="18" cy="140.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="144.3203">readableDidRead : boolean</text><ellipse cx="18" cy="153.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="27" y="157.2754">readableEncoding : null | BufferEncoding</text><ellipse cx="18" cy="166.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="27" y="170.2305">readableEnded : boolean</text><ellipse cx="18" cy="179.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="183.1855">readableFlowing : null | boolean</text><ellipse cx="18" cy="192.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="27" y="196.1406">readableHighWaterMark : number</text><ellipse cx="18" cy="205.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="209.0957">readableLength : number</text><ellipse cx="18" cy="218.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="27" y="222.0508">readableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="228.3711" y2="228.3711"/><ellipse cx="18" cy="239.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="243.0059">addListener(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="252.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="27" y="255.9609">addListener(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="265.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="27" y="268.916">addListener(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="278.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="281.8711">addListener(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="291.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="27" y="294.8262">addListener(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="304.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="27" y="307.7813">addListener(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="317.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="320.7363">addListener(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="333.6914">addListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="168" x="27" y="346.6465">destroy(error: Error) : Readable</text><ellipse cx="18" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="359.6016">emit(event: "close") : boolean</text><ellipse cx="18" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="27" y="372.5566">emit(event: "data", chunk: any) : boolean</text><ellipse cx="18" cy="381.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="385.5117">emit(event: "end") : boolean</text><ellipse cx="18" cy="394.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="398.4668">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="407.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="411.4219">emit(event: "pause") : boolean</text><ellipse cx="18" cy="420.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="27" y="424.377">emit(event: "readable") : boolean</text><ellipse cx="18" cy="433.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="27" y="437.332">emit(event: "resume") : boolean</text><ellipse cx="18" cy="446.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="450.2871">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="459.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="463.2422">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="472.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="478" x="27" y="476.1973">from(iterable: Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;, options: ReadableOptions) : Readable</text><ellipse cx="18" cy="485.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="489.1523">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="498.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="502.1074">getMaxListeners() : number</text><ellipse cx="18" cy="511.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="27" y="515.0625">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="18" cy="524.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="528.0176">isPaused() : boolean</text><ellipse cx="18" cy="537.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="540.9727">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="550.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="553.9277">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="563.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="566.8828">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="576.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="579.8379">off(eventName: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="589.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="27" y="592.793">on(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="602.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="27" y="605.748">on(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="615.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="27" y="618.7031">on(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="628.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="27" y="631.6582">on(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="640.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="27" y="644.6133">on(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="653.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="27" y="657.5684">on(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="666.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="27" y="670.5234">on(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="679.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="27" y="683.4785">on(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="692.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="696.4336">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="705.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="27" y="709.3887">once(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="718.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="27" y="722.3438">once(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="731.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="27" y="735.2988">once(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="744.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="27" y="748.2539">once(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="757.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="27" y="761.209">once(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="770.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="27" y="774.1641">once(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="783.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="27" y="787.1191">once(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="796.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="27" y="800.0742">once(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="809.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="813.0293">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="822.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="825.9844">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="835.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="27" y="838.9395">pause() : Readable</text><ellipse cx="18" cy="848.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="851.8945">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="861.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="27" y="864.8496">prependListener(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="874.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="877.8047">prependListener(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="887.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="27" y="890.7598">prependListener(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="900.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="27" y="903.7148">prependListener(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="913.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="27" y="916.6699">prependListener(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="925.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="27" y="929.625">prependListener(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="938.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="27" y="942.5801">prependListener(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="951.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="27" y="955.5352">prependListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="964.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="27" y="968.4902">prependOnceListener(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="977.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="981.4453">prependOnceListener(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="990.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="994.4004">prependOnceListener(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="1003.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="27" y="1007.3555">prependOnceListener(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="1016.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="1020.3105">prependOnceListener(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="1029.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="27" y="1033.2656">prependOnceListener(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="1042.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="27" y="1046.2207">prependOnceListener(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="1055.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="27" y="1059.1758">prependOnceListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="1068.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="1072.1309">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="18" cy="1081.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="1085.0859">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="1094.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="1098.041">read(size: number) : any</text><ellipse cx="18" cy="1107.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="27" y="1110.9961">removeAllListeners(event: string | symbol) : Readable</text><ellipse cx="18" cy="1120.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="1123.9512">removeListener(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="1133.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="1136.9063">removeListener(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="1146.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="1149.8613">removeListener(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="1159.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="1162.8164">removeListener(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="1172.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="27" y="1175.7715">removeListener(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="1185.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="27" y="1188.7266">removeListener(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="1198.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="27" y="1201.6816">removeListener(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="1211.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="27" y="1214.6367">removeListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="1223.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="27" y="1227.5918">resume() : Readable</text><ellipse cx="18" cy="1236.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="27" y="1240.5469">setEncoding(encoding: BufferEncoding) : Readable</text><ellipse cx="18" cy="1249.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="27" y="1253.502">setMaxListeners(n: number) : Readable</text><ellipse cx="18" cy="1262.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="27" y="1266.457">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="18" cy="1275.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="27" y="1279.4121">unpipe(destination: WritableStream) : Readable</text><ellipse cx="18" cy="1288.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="27" y="1292.3672">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="18" cy="1301.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="27" y="1305.3223">wrap(stream: ReadableStream) : Readable</text><ellipse cx="18" cy="1314.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="1318.2773">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="1327.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="1331.2324">_construct(callback: Function) : void</text><ellipse cx="18" cy="1340.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="1344.1875">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="1353.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="1357.1426">_read(size: number) : void</text><!--MD5=[335f627f56cc5c5fdad50b5d9a1b5159]
reverse link Readable to IncomingMessage--><path codeLine="226" d="M325.5,1383.18 C325.5,1396.4 325.5,1409.65 325.5,1422.9 " fill="none" id="Readable-backto-IncomingMessage" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="318.5,1383.15,325.5,1363.15,332.5,1383.15,318.5,1383.15" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[bd36cb95b9095552896d5058f3a66f7c]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "IncomingMessage" {
    +aborted : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    +complete : boolean
    +connection : Socket
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +headers : IncomingHttpHeaders
    +httpVersion : string
    +httpVersionMajor : number
    +httpVersionMinor : number
    +method : string
    +rawHeaders : string[]
    +rawTrailers : string[]
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +socket : Socket
    +statusCode : number
    +statusMessage : string
    +trailers : Dict<string>
    +url : string
    +addListener(event: "close", listener: Function) : IncomingMessage
    +addListener(event: "data", listener: Function) : IncomingMessage
    +addListener(event: "end", listener: Function) : IncomingMessage
    +addListener(event: "error", listener: Function) : IncomingMessage
    +addListener(event: "pause", listener: Function) : IncomingMessage
    +addListener(event: "readable", listener: Function) : IncomingMessage
    +addListener(event: "resume", listener: Function) : IncomingMessage
    +addListener(event: string | symbol, listener: Function) : IncomingMessage
    +destroy(error: Error) : IncomingMessage
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +from(iterable: Iterable<any> | AsyncIterable<any>, options: ReadableOptions) : Readable
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : IncomingMessage
    +on(event: "close", listener: Function) : IncomingMessage
    +on(event: "data", listener: Function) : IncomingMessage
    +on(event: "end", listener: Function) : IncomingMessage
    +on(event: "error", listener: Function) : IncomingMessage
    +on(event: "pause", listener: Function) : IncomingMessage
    +on(event: "readable", listener: Function) : IncomingMessage
    +on(event: "resume", listener: Function) : IncomingMessage
    +on(event: string | symbol, listener: Function) : IncomingMessage
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : IncomingMessage
    +once(event: "data", listener: Function) : IncomingMessage
    +once(event: "end", listener: Function) : IncomingMessage
    +once(event: "error", listener: Function) : IncomingMessage
    +once(event: "pause", listener: Function) : IncomingMessage
    +once(event: "readable", listener: Function) : IncomingMessage
    +once(event: "resume", listener: Function) : IncomingMessage
    +once(event: string | symbol, listener: Function) : IncomingMessage
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : IncomingMessage
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : IncomingMessage
    +prependListener(event: "data", listener: Function) : IncomingMessage
    +prependListener(event: "end", listener: Function) : IncomingMessage
    +prependListener(event: "error", listener: Function) : IncomingMessage
    +prependListener(event: "pause", listener: Function) : IncomingMessage
    +prependListener(event: "readable", listener: Function) : IncomingMessage
    +prependListener(event: "resume", listener: Function) : IncomingMessage
    +prependListener(event: string | symbol, listener: Function) : IncomingMessage
    +prependOnceListener(event: "close", listener: Function) : IncomingMessage
    +prependOnceListener(event: "data", listener: Function) : IncomingMessage
    +prependOnceListener(event: "end", listener: Function) : IncomingMessage
    +prependOnceListener(event: "error", listener: Function) : IncomingMessage
    +prependOnceListener(event: "pause", listener: Function) : IncomingMessage
    +prependOnceListener(event: "readable", listener: Function) : IncomingMessage
    +prependOnceListener(event: "resume", listener: Function) : IncomingMessage
    +prependOnceListener(event: string | symbol, listener: Function) : IncomingMessage
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : IncomingMessage
    +removeListener(event: "close", listener: Function) : IncomingMessage
    +removeListener(event: "data", listener: Function) : IncomingMessage
    +removeListener(event: "end", listener: Function) : IncomingMessage
    +removeListener(event: "error", listener: Function) : IncomingMessage
    +removeListener(event: "pause", listener: Function) : IncomingMessage
    +removeListener(event: "readable", listener: Function) : IncomingMessage
    +removeListener(event: "resume", listener: Function) : IncomingMessage
    +removeListener(event: string | symbol, listener: Function) : IncomingMessage
    +resume() : IncomingMessage
    +setEncoding(encoding: BufferEncoding) : IncomingMessage
    +setMaxListeners(n: number) : IncomingMessage
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setTimeout(msecs: number, callback: Function) : IncomingMessage
    +unpipe(destination: WritableStream) : IncomingMessage
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : IncomingMessage
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_read(size: number) : void
}
class "Readable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Readable
    +addListener(event: "data", listener: Function) : Readable
    +addListener(event: "end", listener: Function) : Readable
    +addListener(event: "error", listener: Function) : Readable
    +addListener(event: "pause", listener: Function) : Readable
    +addListener(event: "readable", listener: Function) : Readable
    +addListener(event: "resume", listener: Function) : Readable
    +addListener(event: string | symbol, listener: Function) : Readable
    +destroy(error: Error) : Readable
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +from(iterable: Iterable<any> | AsyncIterable<any>, options: ReadableOptions) : Readable
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Readable
    +on(event: "close", listener: Function) : Readable
    +on(event: "data", listener: Function) : Readable
    +on(event: "end", listener: Function) : Readable
    +on(event: "error", listener: Function) : Readable
    +on(event: "pause", listener: Function) : Readable
    +on(event: "readable", listener: Function) : Readable
    +on(event: "resume", listener: Function) : Readable
    +on(event: string | symbol, listener: Function) : Readable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Readable
    +once(event: "data", listener: Function) : Readable
    +once(event: "end", listener: Function) : Readable
    +once(event: "error", listener: Function) : Readable
    +once(event: "pause", listener: Function) : Readable
    +once(event: "readable", listener: Function) : Readable
    +once(event: "resume", listener: Function) : Readable
    +once(event: string | symbol, listener: Function) : Readable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Readable
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Readable
    +prependListener(event: "data", listener: Function) : Readable
    +prependListener(event: "end", listener: Function) : Readable
    +prependListener(event: "error", listener: Function) : Readable
    +prependListener(event: "pause", listener: Function) : Readable
    +prependListener(event: "readable", listener: Function) : Readable
    +prependListener(event: "resume", listener: Function) : Readable
    +prependListener(event: string | symbol, listener: Function) : Readable
    +prependOnceListener(event: "close", listener: Function) : Readable
    +prependOnceListener(event: "data", listener: Function) : Readable
    +prependOnceListener(event: "end", listener: Function) : Readable
    +prependOnceListener(event: "error", listener: Function) : Readable
    +prependOnceListener(event: "pause", listener: Function) : Readable
    +prependOnceListener(event: "readable", listener: Function) : Readable
    +prependOnceListener(event: "resume", listener: Function) : Readable
    +prependOnceListener(event: string | symbol, listener: Function) : Readable
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Readable
    +removeListener(event: "close", listener: Function) : Readable
    +removeListener(event: "data", listener: Function) : Readable
    +removeListener(event: "end", listener: Function) : Readable
    +removeListener(event: "error", listener: Function) : Readable
    +removeListener(event: "pause", listener: Function) : Readable
    +removeListener(event: "readable", listener: Function) : Readable
    +removeListener(event: "resume", listener: Function) : Readable
    +removeListener(event: string | symbol, listener: Function) : Readable
    +resume() : Readable
    +setEncoding(encoding: BufferEncoding) : Readable
    +setMaxListeners(n: number) : Readable
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +unpipe(destination: WritableStream) : Readable
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Readable
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_read(size: number) : void
}
"Readable" <|- - "IncomingMessage"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>