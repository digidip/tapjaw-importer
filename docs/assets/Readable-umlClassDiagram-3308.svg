<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="5039px" preserveAspectRatio="none" style="width:1637px;height:5039px;background:#00000000;" version="1.1" viewBox="0 0 1637 5039" width="1637px" zoomAndPan="magnify"><defs><filter height="300%" id="f1s2n4ds1731is" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[c367c524f13260ba207946109d621584]
class Readable--><rect codeLine="4" fill="#FEFECE" filter="url(#f1s2n4ds1731is)" height="1356.4629" id="Readable" style="stroke:#A80036;stroke-width:1.5;" width="637" x="761" y="452"/><ellipse cx="1047.75" cy="468" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1050.2231,474.1431 Q1049.6421,474.4419 1049.0029,474.5913 Q1048.3638,474.7407 1047.6582,474.7407 Q1045.1514,474.7407 1043.8315,473.0889 Q1042.5117,471.437 1042.5117,468.3159 Q1042.5117,465.1865 1043.8315,463.5347 Q1045.1514,461.8828 1047.6582,461.8828 Q1048.3638,461.8828 1049.0112,462.0322 Q1049.6587,462.1816 1050.2231,462.4805 L1050.2231,465.2031 Q1049.5923,464.6221 1048.9988,464.3523 Q1048.4053,464.0825 1047.7744,464.0825 Q1046.4297,464.0825 1045.7449,465.1492 Q1045.0601,466.2158 1045.0601,468.3159 Q1045.0601,470.4077 1045.7449,471.4744 Q1046.4297,472.541 1047.7744,472.541 Q1048.4053,472.541 1048.9988,472.2712 Q1049.5923,472.0015 1050.2231,471.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="55" x="1068.25" y="472.5352">Readable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="762" x2="1397" y1="484" y2="484"/><ellipse cx="772" cy="495" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="781" y="498.6348">captureRejections : boolean</text><ellipse cx="772" cy="507.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="781" y="511.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="772" cy="520.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="781" y="524.5449">defaultMaxListeners : number</text><ellipse cx="772" cy="533.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="781" y="537.5">destroyed : boolean</text><ellipse cx="772" cy="546.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="781" y="550.4551">errorMonitor : typeof errorMonitor</text><ellipse cx="772" cy="559.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="781" y="563.4102">readable : boolean</text><ellipse cx="772" cy="572.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="781" y="576.3652">readableAborted : boolean</text><ellipse cx="772" cy="585.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="781" y="589.3203">readableDidRead : boolean</text><ellipse cx="772" cy="598.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="781" y="602.2754">readableEncoding : null | BufferEncoding</text><ellipse cx="772" cy="611.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="781" y="615.2305">readableEnded : boolean</text><ellipse cx="772" cy="624.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="781" y="628.1855">readableFlowing : null | boolean</text><ellipse cx="772" cy="637.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="781" y="641.1406">readableHighWaterMark : number</text><ellipse cx="772" cy="650.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="781" y="654.0957">readableLength : number</text><ellipse cx="772" cy="663.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="781" y="667.0508">readableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="762" x2="1397" y1="673.3711" y2="673.3711"/><ellipse cx="772" cy="684.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="781" y="688.0059">addListener(event: "close", listener: Function) : Readable</text><ellipse cx="772" cy="697.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="781" y="700.9609">addListener(event: "data", listener: Function) : Readable</text><ellipse cx="772" cy="710.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="781" y="713.916">addListener(event: "end", listener: Function) : Readable</text><ellipse cx="772" cy="723.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="781" y="726.8711">addListener(event: "error", listener: Function) : Readable</text><ellipse cx="772" cy="736.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="781" y="739.8262">addListener(event: "pause", listener: Function) : Readable</text><ellipse cx="772" cy="749.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="781" y="752.7813">addListener(event: "readable", listener: Function) : Readable</text><ellipse cx="772" cy="762.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="781" y="765.7363">addListener(event: "resume", listener: Function) : Readable</text><ellipse cx="772" cy="775.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="781" y="778.6914">addListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="772" cy="788.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="168" x="781" y="791.6465">destroy(error: Error) : Readable</text><ellipse cx="772" cy="800.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="781" y="804.6016">emit(event: "close") : boolean</text><ellipse cx="772" cy="813.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="781" y="817.5566">emit(event: "data", chunk: any) : boolean</text><ellipse cx="772" cy="826.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="781" y="830.5117">emit(event: "end") : boolean</text><ellipse cx="772" cy="839.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="781" y="843.4668">emit(event: "error", err: Error) : boolean</text><ellipse cx="772" cy="852.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="781" y="856.4219">emit(event: "pause") : boolean</text><ellipse cx="772" cy="865.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="781" y="869.377">emit(event: "readable") : boolean</text><ellipse cx="772" cy="878.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="781" y="882.332">emit(event: "resume") : boolean</text><ellipse cx="772" cy="891.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="781" y="895.2871">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="772" cy="904.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="781" y="908.2422">eventNames() : (string | symbol)[]</text><ellipse cx="772" cy="917.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="478" x="781" y="921.1973">from(iterable: Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;, options: ReadableOptions) : Readable</text><ellipse cx="772" cy="930.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="781" y="934.1523">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="772" cy="943.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="781" y="947.1074">getMaxListeners() : number</text><ellipse cx="772" cy="956.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="781" y="960.0625">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="772" cy="969.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="781" y="973.0176">isPaused() : boolean</text><ellipse cx="772" cy="982.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="781" y="985.9727">listenerCount(eventName: string | symbol) : number</text><ellipse cx="772" cy="995.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="781" y="998.9277">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="772" cy="1008.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="781" y="1011.8828">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="772" cy="1021.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="781" y="1024.8379">off(eventName: string | symbol, listener: Function) : Readable</text><ellipse cx="772" cy="1034.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="781" y="1037.793">on(event: "close", listener: Function) : Readable</text><ellipse cx="772" cy="1047.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="781" y="1050.748">on(event: "data", listener: Function) : Readable</text><ellipse cx="772" cy="1060.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="781" y="1063.7031">on(event: "end", listener: Function) : Readable</text><ellipse cx="772" cy="1073.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="781" y="1076.6582">on(event: "error", listener: Function) : Readable</text><ellipse cx="772" cy="1085.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="781" y="1089.6133">on(event: "pause", listener: Function) : Readable</text><ellipse cx="772" cy="1098.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="781" y="1102.5684">on(event: "readable", listener: Function) : Readable</text><ellipse cx="772" cy="1111.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="781" y="1115.5234">on(event: "resume", listener: Function) : Readable</text><ellipse cx="772" cy="1124.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="781" y="1128.4785">on(event: string | symbol, listener: Function) : Readable</text><ellipse cx="772" cy="1137.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="781" y="1141.4336">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="772" cy="1150.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="781" y="1154.3887">once(event: "close", listener: Function) : Readable</text><ellipse cx="772" cy="1163.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="781" y="1167.3438">once(event: "data", listener: Function) : Readable</text><ellipse cx="772" cy="1176.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="781" y="1180.2988">once(event: "end", listener: Function) : Readable</text><ellipse cx="772" cy="1189.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="781" y="1193.2539">once(event: "error", listener: Function) : Readable</text><ellipse cx="772" cy="1202.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="781" y="1206.209">once(event: "pause", listener: Function) : Readable</text><ellipse cx="772" cy="1215.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="781" y="1219.1641">once(event: "readable", listener: Function) : Readable</text><ellipse cx="772" cy="1228.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="781" y="1232.1191">once(event: "resume", listener: Function) : Readable</text><ellipse cx="772" cy="1241.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="781" y="1245.0742">once(event: string | symbol, listener: Function) : Readable</text><ellipse cx="772" cy="1254.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="781" y="1258.0293">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="772" cy="1267.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="781" y="1270.9844">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="772" cy="1280.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="781" y="1283.9395">pause() : Readable</text><ellipse cx="772" cy="1293.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="781" y="1296.8945">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="772" cy="1306.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="781" y="1309.8496">prependListener(event: "close", listener: Function) : Readable</text><ellipse cx="772" cy="1319.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="781" y="1322.8047">prependListener(event: "data", listener: Function) : Readable</text><ellipse cx="772" cy="1332.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="781" y="1335.7598">prependListener(event: "end", listener: Function) : Readable</text><ellipse cx="772" cy="1345.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="781" y="1348.7148">prependListener(event: "error", listener: Function) : Readable</text><ellipse cx="772" cy="1358.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="781" y="1361.6699">prependListener(event: "pause", listener: Function) : Readable</text><ellipse cx="772" cy="1370.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="781" y="1374.625">prependListener(event: "readable", listener: Function) : Readable</text><ellipse cx="772" cy="1383.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="781" y="1387.5801">prependListener(event: "resume", listener: Function) : Readable</text><ellipse cx="772" cy="1396.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="781" y="1400.5352">prependListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="772" cy="1409.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="781" y="1413.4902">prependOnceListener(event: "close", listener: Function) : Readable</text><ellipse cx="772" cy="1422.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="781" y="1426.4453">prependOnceListener(event: "data", listener: Function) : Readable</text><ellipse cx="772" cy="1435.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="781" y="1439.4004">prependOnceListener(event: "end", listener: Function) : Readable</text><ellipse cx="772" cy="1448.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="781" y="1452.3555">prependOnceListener(event: "error", listener: Function) : Readable</text><ellipse cx="772" cy="1461.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="781" y="1465.3105">prependOnceListener(event: "pause", listener: Function) : Readable</text><ellipse cx="772" cy="1474.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="781" y="1478.2656">prependOnceListener(event: "readable", listener: Function) : Readable</text><ellipse cx="772" cy="1487.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="781" y="1491.2207">prependOnceListener(event: "resume", listener: Function) : Readable</text><ellipse cx="772" cy="1500.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="781" y="1504.1758">prependOnceListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="772" cy="1513.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="781" y="1517.1309">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="772" cy="1526.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="781" y="1530.0859">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="772" cy="1539.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="781" y="1543.041">read(size: number) : any</text><ellipse cx="772" cy="1552.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="781" y="1555.9961">removeAllListeners(event: string | symbol) : Readable</text><ellipse cx="772" cy="1565.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="781" y="1568.9512">removeListener(event: "close", listener: Function) : Readable</text><ellipse cx="772" cy="1578.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="781" y="1581.9063">removeListener(event: "data", listener: Function) : Readable</text><ellipse cx="772" cy="1591.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="781" y="1594.8613">removeListener(event: "end", listener: Function) : Readable</text><ellipse cx="772" cy="1604.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="781" y="1607.8164">removeListener(event: "error", listener: Function) : Readable</text><ellipse cx="772" cy="1617.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="781" y="1620.7715">removeListener(event: "pause", listener: Function) : Readable</text><ellipse cx="772" cy="1630.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="781" y="1633.7266">removeListener(event: "readable", listener: Function) : Readable</text><ellipse cx="772" cy="1643.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="781" y="1646.6816">removeListener(event: "resume", listener: Function) : Readable</text><ellipse cx="772" cy="1656.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="781" y="1659.6367">removeListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="772" cy="1668.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="781" y="1672.5918">resume() : Readable</text><ellipse cx="772" cy="1681.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="781" y="1685.5469">setEncoding(encoding: BufferEncoding) : Readable</text><ellipse cx="772" cy="1694.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="781" y="1698.502">setMaxListeners(n: number) : Readable</text><ellipse cx="772" cy="1707.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="781" y="1711.457">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="772" cy="1720.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="781" y="1724.4121">unpipe(destination: WritableStream) : Readable</text><ellipse cx="772" cy="1733.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="781" y="1737.3672">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="772" cy="1746.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="781" y="1750.3223">wrap(stream: ReadableStream) : Readable</text><ellipse cx="772" cy="1759.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="781" y="1763.2773">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="772" cy="1772.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="781" y="1776.2324">_construct(callback: Function) : void</text><ellipse cx="772" cy="1785.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="781" y="1789.1875">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="772" cy="1798.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="781" y="1802.1426">_read(size: number) : void</text><!--MD5=[d71ee11ede0e83c966e8ef97d9465fe6]
class Stream--><rect codeLine="107" fill="#FEFECE" filter="url(#f1s2n4ds1731is)" height="384.832" id="Stream" style="stroke:#A80036;stroke-width:1.5;" width="637" x="462" y="7"/><ellipse cx="756.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M758.7231,29.1431 Q758.1421,29.4419 757.5029,29.5913 Q756.8638,29.7407 756.1582,29.7407 Q753.6514,29.7407 752.3315,28.0889 Q751.0117,26.437 751.0117,23.3159 Q751.0117,20.1865 752.3315,18.5347 Q753.6514,16.8828 756.1582,16.8828 Q756.8638,16.8828 757.5112,17.0322 Q758.1587,17.1816 758.7231,17.4805 L758.7231,20.2031 Q758.0923,19.6221 757.4988,19.3523 Q756.9053,19.0825 756.2744,19.0825 Q754.9297,19.0825 754.2449,20.1492 Q753.5601,21.2158 753.5601,23.3159 Q753.5601,25.4077 754.2449,26.4744 Q754.9297,27.541 756.2744,27.541 Q756.9053,27.541 757.4988,27.2712 Q758.0923,27.0015 758.7231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="40" x="776.75" y="27.5352">Stream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="463" x2="1098" y1="39" y2="39"/><ellipse cx="473" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="482" y="53.6348">captureRejections : boolean</text><ellipse cx="473" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="482" y="66.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="473" cy="75.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="482" y="79.5449">defaultMaxListeners : number</text><ellipse cx="473" cy="88.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="482" y="92.5">errorMonitor : typeof errorMonitor</text><line style="stroke:#A80036;stroke-width:1.5;" x1="463" x2="1098" y1="98.8203" y2="98.8203"/><ellipse cx="473" cy="109.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="482" y="113.4551">addListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="473" cy="122.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="482" y="126.4102">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="473" cy="135.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="482" y="139.3652">eventNames() : (string | symbol)[]</text><ellipse cx="473" cy="148.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="482" y="152.3203">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="473" cy="161.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="482" y="165.2754">getMaxListeners() : number</text><ellipse cx="473" cy="174.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="482" y="178.2305">listenerCount(eventName: string | symbol) : number</text><ellipse cx="473" cy="187.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="482" y="191.1855">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="473" cy="200.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="482" y="204.1406">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="473" cy="213.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="314" x="482" y="217.0957">off(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="473" cy="226.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="482" y="230.0508">on(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="473" cy="239.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="482" y="243.0059">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="473" cy="252.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="482" y="255.9609">once(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="473" cy="265.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="482" y="268.916">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="473" cy="278.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="482" y="281.8711">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="473" cy="291.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="482" y="294.8262">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="473" cy="304.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="387" x="482" y="307.7813">prependListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="473" cy="317.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="482" y="320.7363">prependOnceListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="473" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="482" y="333.6914">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="473" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="482" y="346.6465">removeAllListeners(event: string | symbol) : Stream</text><ellipse cx="473" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="382" x="482" y="359.6016">removeListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="473" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="482" y="372.5566">setMaxListeners(n: number) : Stream</text><ellipse cx="473" cy="381.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="482" y="385.5117">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><!--MD5=[2ae9bde532a65868123a40364e87803a]
class ReadableStream--><rect codeLine="136" fill="#FEFECE" filter="url(#f1s2n4ds1731is)" height="384.832" id="ReadableStream" style="stroke:#A80036;stroke-width:1.5;" width="489" x="1134" y="7"/><ellipse cx="1326.75" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1323.1777,19.2651 L1323.1777,17.1069 L1330.5571,17.1069 L1330.5571,19.2651 L1328.0918,19.2651 L1328.0918,27.3418 L1330.5571,27.3418 L1330.5571,29.5 L1323.1777,29.5 L1323.1777,27.3418 L1325.6431,27.3418 L1325.6431,19.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="95" x="1347.25" y="27.5352">ReadableStream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1135" x2="1622" y1="39" y2="39"/><ellipse cx="1145" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="1154" y="53.6348">readable : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1135" x2="1622" y1="59.9551" y2="59.9551"/><ellipse cx="1145" cy="70.9551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="410" x="1154" y="74.5898">addListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="1145" cy="83.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="1154" y="87.5449">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="1145" cy="96.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="1154" y="100.5">eventNames() : (string | symbol)[]</text><ellipse cx="1145" cy="109.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="1154" y="113.4551">getMaxListeners() : number</text><ellipse cx="1145" cy="122.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="1154" y="126.4102">isPaused() : boolean</text><ellipse cx="1145" cy="135.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="1154" y="139.3652">listenerCount(eventName: string | symbol) : number</text><ellipse cx="1145" cy="148.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="1154" y="152.3203">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="1145" cy="161.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="1154" y="165.2754">off(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="1145" cy="174.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="1154" y="178.2305">on(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="1145" cy="187.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="1154" y="191.1855">once(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="1145" cy="200.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="1154" y="204.1406">pause() : ReadableStream</text><ellipse cx="1145" cy="213.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="1154" y="217.0957">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="1145" cy="226.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="435" x="1154" y="230.0508">prependListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="1145" cy="239.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="463" x="1154" y="243.0059">prependOnceListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="1145" cy="252.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="1154" y="255.9609">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="1145" cy="265.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="1154" y="268.916">read(size: number) : string | Buffer</text><ellipse cx="1145" cy="278.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="1154" y="281.8711">removeAllListeners(event: string | symbol) : ReadableStream</text><ellipse cx="1145" cy="291.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="430" x="1154" y="294.8262">removeListener(eventName: string | symbol, listener: Function) : ReadableStream</text><ellipse cx="1145" cy="304.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="1154" y="307.7813">resume() : ReadableStream</text><ellipse cx="1145" cy="317.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="1154" y="320.7363">setEncoding(encoding: BufferEncoding) : ReadableStream</text><ellipse cx="1145" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="1154" y="333.6914">setMaxListeners(n: number) : ReadableStream</text><ellipse cx="1145" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="1154" y="346.6465">unpipe(destination: WritableStream) : ReadableStream</text><ellipse cx="1145" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="1154" y="359.6016">unshift(chunk: string | Uint8Array, encoding: BufferEncoding) : void</text><ellipse cx="1145" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="1154" y="372.5566">wrap(oldStream: ReadableStream) : ReadableStream</text><ellipse cx="1145" cy="381.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="1154" y="385.5117">[asyncIterator]() : AsyncIterableIterator&lt;string | Buffer&gt;</text><!--MD5=[c976e0eb2d2b974c6a969bae55fd2ccf]
class IncomingMessage--><rect codeLine="165" fill="#FEFECE" filter="url(#f1s2n4ds1731is)" height="1563.7441" id="IncomingMessage" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="2664.5"/><ellipse cx="270.75" cy="2680.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M273.2231,2686.6431 Q272.6421,2686.9419 272.0029,2687.0913 Q271.3638,2687.2407 270.6582,2687.2407 Q268.1514,2687.2407 266.8315,2685.5889 Q265.5117,2683.937 265.5117,2680.8159 Q265.5117,2677.6865 266.8315,2676.0347 Q268.1514,2674.3828 270.6582,2674.3828 Q271.3638,2674.3828 272.0112,2674.5322 Q272.6587,2674.6816 273.2231,2674.9805 L273.2231,2677.7031 Q272.5923,2677.1221 271.9988,2676.8523 Q271.4053,2676.5825 270.7744,2676.5825 Q269.4297,2676.5825 268.7449,2677.6492 Q268.0601,2678.7158 268.0601,2680.8159 Q268.0601,2682.9077 268.7449,2683.9744 Q269.4297,2685.041 270.7744,2685.041 Q271.4053,2685.041 271.9988,2684.7712 Q272.5923,2684.5015 273.2231,2683.9204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="101" x="291.25" y="2685.0352">IncomingMessage</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="2696.5" y2="2696.5"/><ellipse cx="18" cy="2707.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="2711.1348">aborted : boolean</text><ellipse cx="18" cy="2720.4551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="2724.0898">captureRejections : boolean</text><ellipse cx="18" cy="2733.4102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="2737.0449">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="2746.3652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="27" y="2750">complete : boolean</text><ellipse cx="18" cy="2759.3203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="27" y="2762.9551">connection : Socket</text><ellipse cx="18" cy="2772.2754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="2775.9102">defaultMaxListeners : number</text><ellipse cx="18" cy="2785.2305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="2788.8652">destroyed : boolean</text><ellipse cx="18" cy="2798.1855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="2801.8203">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="2811.1406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="2814.7754">headers : IncomingHttpHeaders</text><ellipse cx="18" cy="2824.0957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="27" y="2827.7305">httpVersion : string</text><ellipse cx="18" cy="2837.0508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="144" x="27" y="2840.6855">httpVersionMajor : number</text><ellipse cx="18" cy="2850.0059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="145" x="27" y="2853.6406">httpVersionMinor : number</text><ellipse cx="18" cy="2862.9609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="27" y="2866.5957">method : string</text><ellipse cx="18" cy="2875.916" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="27" y="2879.5508">rawHeaders : string[]</text><ellipse cx="18" cy="2888.8711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="27" y="2892.5059">rawTrailers : string[]</text><ellipse cx="18" cy="2901.8262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="2905.4609">readable : boolean</text><ellipse cx="18" cy="2914.7813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="2918.416">readableAborted : boolean</text><ellipse cx="18" cy="2927.7363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="2931.3711">readableDidRead : boolean</text><ellipse cx="18" cy="2940.6914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="27" y="2944.3262">readableEncoding : null | BufferEncoding</text><ellipse cx="18" cy="2953.6465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="27" y="2957.2813">readableEnded : boolean</text><ellipse cx="18" cy="2966.6016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="2970.2363">readableFlowing : null | boolean</text><ellipse cx="18" cy="2979.5566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="27" y="2983.1914">readableHighWaterMark : number</text><ellipse cx="18" cy="2992.5117" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="2996.1465">readableLength : number</text><ellipse cx="18" cy="3005.4668" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="27" y="3009.1016">readableObjectMode : boolean</text><ellipse cx="18" cy="3018.4219" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="27" y="3022.0566">socket : Socket</text><ellipse cx="18" cy="3031.377" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="27" y="3035.0117">statusCode : number</text><ellipse cx="18" cy="3044.332" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="27" y="3047.9668">statusMessage : string</text><ellipse cx="18" cy="3057.2871" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="27" y="3060.9219">trailers : Dict&lt;string&gt;</text><ellipse cx="18" cy="3070.2422" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="56" x="27" y="3073.877">url : string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="3080.1973" y2="3080.1973"/><ellipse cx="18" cy="3091.1973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="3094.832">addListener(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3104.1523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="27" y="3107.7871">addListener(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3117.1074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="27" y="3120.7422">addListener(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3130.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="3133.6973">addListener(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3143.0176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="350" x="27" y="3146.6523">addListener(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3155.9727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="364" x="27" y="3159.6074">addListener(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3168.9277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="27" y="3172.5625">addListener(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3181.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="27" y="3185.5176">addListener(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3194.8379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="27" y="3198.4727">destroy(error: Error) : IncomingMessage</text><ellipse cx="18" cy="3207.793" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="3211.4277">emit(event: "close") : boolean</text><ellipse cx="18" cy="3220.748" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="27" y="3224.3828">emit(event: "data", chunk: any) : boolean</text><ellipse cx="18" cy="3233.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="3237.3379">emit(event: "end") : boolean</text><ellipse cx="18" cy="3246.6582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="3250.293">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="3259.6133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="3263.248">emit(event: "pause") : boolean</text><ellipse cx="18" cy="3272.5684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="27" y="3276.2031">emit(event: "readable") : boolean</text><ellipse cx="18" cy="3285.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="27" y="3289.1582">emit(event: "resume") : boolean</text><ellipse cx="18" cy="3298.4785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="3302.1133">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="3311.4336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="3315.0684">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="3324.3887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="478" x="27" y="3328.0234">from(iterable: Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;, options: ReadableOptions) : Readable</text><ellipse cx="18" cy="3337.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="3340.9785">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="3350.2988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="3353.9336">getMaxListeners() : number</text><ellipse cx="18" cy="3363.2539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="27" y="3366.8887">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="18" cy="3376.209" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="3379.8438">isPaused() : boolean</text><ellipse cx="18" cy="3389.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="3392.7988">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="3402.1191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="3405.7539">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="3415.0742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="3418.709">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="3428.0293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="27" y="3431.6641">off(eventName: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3440.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="27" y="3444.6191">on(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3453.9395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="3457.5742">on(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3466.8945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="3470.5293">on(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3479.8496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="27" y="3483.4844">on(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3492.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="27" y="3496.4395">on(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3505.7598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="27" y="3509.3945">on(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3518.7148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="27" y="3522.3496">on(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3531.6699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="342" x="27" y="3535.3047">on(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3544.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="3548.2598">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="3557.5801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="27" y="3561.2148">once(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3570.5352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="304" x="27" y="3574.1699">once(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3583.4902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="27" y="3587.125">once(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3596.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="27" y="3600.0801">once(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3609.4004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="3613.0352">once(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3622.3555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="27" y="3625.9902">once(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3635.3105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="27" y="3638.9453">once(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3648.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="354" x="27" y="3651.9004">once(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3661.2207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="3664.8555">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="3674.1758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="3677.8105">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="3687.1309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="145" x="27" y="3690.7656">pause() : IncomingMessage</text><ellipse cx="18" cy="3700.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="3703.7207">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="3713.041" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="371" x="27" y="3716.6758">prependListener(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3725.9961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="3729.6309">prependListener(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3738.9512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="27" y="3742.5859">prependListener(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3751.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="371" x="27" y="3755.541">prependListener(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3764.8613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="375" x="27" y="3768.4961">prependListener(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3777.8164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="389" x="27" y="3781.4512">prependListener(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3790.7715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="383" x="27" y="3794.4063">prependListener(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3803.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="416" x="27" y="3807.3613">prependListener(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3816.6816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="399" x="27" y="3820.3164">prependOnceListener(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3829.6367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="394" x="27" y="3833.2715">prependOnceListener(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3842.5918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="27" y="3846.2266">prependOnceListener(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3855.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="399" x="27" y="3859.1816">prependOnceListener(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3868.502" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="403" x="27" y="3872.1367">prependOnceListener(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3881.457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="27" y="3885.0918">prependOnceListener(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3894.4121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="411" x="27" y="3898.0469">prependOnceListener(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3907.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="444" x="27" y="3911.002">prependOnceListener(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3920.3223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="3923.957">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="18" cy="3933.2773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="3936.9121">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="3946.2324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="3949.8672">read(size: number) : any</text><ellipse cx="18" cy="3959.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="332" x="27" y="3962.8223">removeAllListeners(event: string | symbol) : IncomingMessage</text><ellipse cx="18" cy="3972.1426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="3975.7773">removeListener(event: "close", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3985.0977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="27" y="3988.7324">removeListener(event: "data", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="3998.0527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="27" y="4001.6875">removeListener(event: "end", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="4011.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="4014.6426">removeListener(event: "error", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="4023.9629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="370" x="27" y="4027.5977">removeListener(event: "pause", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="4036.918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="384" x="27" y="4040.5527">removeListener(event: "readable", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="4049.873" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="378" x="27" y="4053.5078">removeListener(event: "resume", listener: Function) : IncomingMessage</text><ellipse cx="18" cy="4062.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="411" x="27" y="4066.4629">removeListener(event: string | symbol, listener: Function) : IncomingMessage</text><ellipse cx="18" cy="4075.7832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="27" y="4079.418">resume() : IncomingMessage</text><ellipse cx="18" cy="4088.7383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="27" y="4092.373">setEncoding(encoding: BufferEncoding) : IncomingMessage</text><ellipse cx="18" cy="4101.6934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="27" y="4105.3281">setMaxListeners(n: number) : IncomingMessage</text><ellipse cx="18" cy="4114.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="27" y="4118.2832">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="18" cy="4127.6035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="27" y="4131.2383">setTimeout(msecs: number, callback: Function) : IncomingMessage</text><ellipse cx="18" cy="4140.5586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="27" y="4144.1934">unpipe(destination: WritableStream) : IncomingMessage</text><ellipse cx="18" cy="4153.5137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="27" y="4157.1484">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="18" cy="4166.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="27" y="4170.1035">wrap(stream: ReadableStream) : IncomingMessage</text><ellipse cx="18" cy="4179.4238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="4183.0586">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="4192.3789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="4196.0137">_construct(callback: Function) : void</text><ellipse cx="18" cy="4205.334" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="4208.9688">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="4218.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="4221.9238">_read(size: number) : void</text><!--MD5=[dbb0aac09fdd9457193737fcd885dcc9]
class Duplex--><rect codeLine="408" fill="#FEFECE" filter="url(#f1s2n4ds1731is)" height="3157.2188" id="Duplex" style="stroke:#A80036;stroke-width:1.5;" width="800" x="679.5" y="1868"/><ellipse cx="1054.75" cy="1884" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1057.2231,1890.1431 Q1056.6421,1890.4419 1056.0029,1890.5913 Q1055.3638,1890.7407 1054.6582,1890.7407 Q1052.1514,1890.7407 1050.8315,1889.0889 Q1049.5117,1887.437 1049.5117,1884.3159 Q1049.5117,1881.1865 1050.8315,1879.5347 Q1052.1514,1877.8828 1054.6582,1877.8828 Q1055.3638,1877.8828 1056.0112,1878.0322 Q1056.6587,1878.1816 1057.2231,1878.4805 L1057.2231,1881.2031 Q1056.5923,1880.6221 1055.9988,1880.3523 Q1055.4053,1880.0825 1054.7744,1880.0825 Q1053.4297,1880.0825 1052.7449,1881.1492 Q1052.0601,1882.2158 1052.0601,1884.3159 Q1052.0601,1886.4077 1052.7449,1887.4744 Q1053.4297,1888.541 1054.7744,1888.541 Q1055.4053,1888.541 1055.9988,1888.2712 Q1056.5923,1888.0015 1057.2231,1887.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="41" x="1075.25" y="1888.5352">Duplex</text><line style="stroke:#A80036;stroke-width:1.5;" x1="680.5" x2="1478.5" y1="1900" y2="1900"/><ellipse cx="690.5" cy="1911" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="699.5" y="1914.6348">allowHalfOpen : boolean</text><ellipse cx="690.5" cy="1923.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="699.5" y="1927.5898">captureRejections : boolean</text><ellipse cx="690.5" cy="1936.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="699.5" y="1940.5449">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="690.5" cy="1949.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="699.5" y="1953.5">defaultMaxListeners : number</text><ellipse cx="690.5" cy="1962.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="699.5" y="1966.4551">destroyed : boolean</text><ellipse cx="690.5" cy="1975.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="699.5" y="1979.4102">errorMonitor : typeof errorMonitor</text><ellipse cx="690.5" cy="1988.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="699.5" y="1992.3652">readable : boolean</text><ellipse cx="690.5" cy="2001.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699.5" y="2005.3203">readableAborted : boolean</text><ellipse cx="690.5" cy="2014.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699.5" y="2018.2754">readableDidRead : boolean</text><ellipse cx="690.5" cy="2027.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="699.5" y="2031.2305">readableEncoding : null | BufferEncoding</text><ellipse cx="690.5" cy="2040.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="699.5" y="2044.1855">readableEnded : boolean</text><ellipse cx="690.5" cy="2053.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="699.5" y="2057.1406">readableFlowing : null | boolean</text><ellipse cx="690.5" cy="2066.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="699.5" y="2070.0957">readableHighWaterMark : number</text><ellipse cx="690.5" cy="2079.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="699.5" y="2083.0508">readableLength : number</text><ellipse cx="690.5" cy="2092.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="699.5" y="2096.0059">readableObjectMode : boolean</text><ellipse cx="690.5" cy="2105.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="699.5" y="2108.9609">writable : boolean</text><ellipse cx="690.5" cy="2118.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="699.5" y="2121.916">writableCorked : number</text><ellipse cx="690.5" cy="2131.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="699.5" y="2134.8711">writableEnded : boolean</text><ellipse cx="690.5" cy="2144.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699.5" y="2147.8262">writableFinished : boolean</text><ellipse cx="690.5" cy="2157.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="699.5" y="2160.7813">writableHighWaterMark : number</text><ellipse cx="690.5" cy="2170.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="699.5" y="2173.7363">writableLength : number</text><ellipse cx="690.5" cy="2183.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="2186.6914">writableObjectMode : boolean</text><ellipse cx="690.5" cy="2196.0117" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="699.5" y="2199.6465">allowHalfOpen : boolean</text><ellipse cx="690.5" cy="2208.9668" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="699.5" y="2212.6016">captureRejections : boolean</text><ellipse cx="690.5" cy="2221.9219" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="699.5" y="2225.5566">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="690.5" cy="2234.877" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="699.5" y="2238.5117">defaultMaxListeners : number</text><ellipse cx="690.5" cy="2247.832" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="699.5" y="2251.4668">destroyed : boolean</text><ellipse cx="690.5" cy="2260.7871" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="699.5" y="2264.4219">errorMonitor : typeof errorMonitor</text><ellipse cx="690.5" cy="2273.7422" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="699.5" y="2277.377">readable : boolean</text><ellipse cx="690.5" cy="2286.6973" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699.5" y="2290.332">readableAborted : boolean</text><ellipse cx="690.5" cy="2299.6523" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="699.5" y="2303.2871">readableDidRead : boolean</text><ellipse cx="690.5" cy="2312.6074" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="699.5" y="2316.2422">readableEncoding : null | BufferEncoding</text><ellipse cx="690.5" cy="2325.5625" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="699.5" y="2329.1973">readableEnded : boolean</text><ellipse cx="690.5" cy="2338.5176" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="699.5" y="2342.1523">readableFlowing : null | boolean</text><ellipse cx="690.5" cy="2351.4727" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="699.5" y="2355.1074">readableHighWaterMark : number</text><ellipse cx="690.5" cy="2364.4277" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="699.5" y="2368.0625">readableLength : number</text><ellipse cx="690.5" cy="2377.3828" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="699.5" y="2381.0176">readableObjectMode : boolean</text><ellipse cx="690.5" cy="2390.3379" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="699.5" y="2393.9727">writable : boolean</text><ellipse cx="690.5" cy="2403.293" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="699.5" y="2406.9277">writableCorked : number</text><ellipse cx="690.5" cy="2416.248" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="699.5" y="2419.8828">writableEnded : boolean</text><ellipse cx="690.5" cy="2429.2031" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699.5" y="2432.8379">writableFinished : boolean</text><ellipse cx="690.5" cy="2442.1582" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="699.5" y="2445.793">writableHighWaterMark : number</text><ellipse cx="690.5" cy="2455.1133" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="699.5" y="2458.748">writableLength : number</text><ellipse cx="690.5" cy="2468.0684" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="2471.7031">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="680.5" x2="1478.5" y1="2478.0234" y2="2478.0234"/><ellipse cx="690.5" cy="2489.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699.5" y="2492.6582">addListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2501.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="699.5" y="2505.6133">addListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2514.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="699.5" y="2518.5684">addListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2527.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699.5" y="2531.5234">addListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2540.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="699.5" y="2544.4785">addListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2553.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="699.5" y="2557.4336">addListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2566.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="699.5" y="2570.3887">addListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2579.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="699.5" y="2583.3438">addListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="2592.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="699.5" y="2596.2988">cork() : void</text><ellipse cx="690.5" cy="2605.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="2609.2539">destroy(error: Error) : Duplex</text><ellipse cx="690.5" cy="2618.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="699.5" y="2622.209">emit(event: "close") : boolean</text><ellipse cx="690.5" cy="2631.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="699.5" y="2635.1641">emit(event: "data", chunk: any) : boolean</text><ellipse cx="690.5" cy="2644.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="699.5" y="2648.1191">emit(event: "end") : boolean</text><ellipse cx="690.5" cy="2657.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="699.5" y="2661.0742">emit(event: "error", err: Error) : boolean</text><ellipse cx="690.5" cy="2670.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="2674.0293">emit(event: "pause") : boolean</text><ellipse cx="690.5" cy="2683.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="699.5" y="2686.9844">emit(event: "readable") : boolean</text><ellipse cx="690.5" cy="2696.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="699.5" y="2699.9395">emit(event: "resume") : boolean</text><ellipse cx="690.5" cy="2709.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="699.5" y="2712.8945">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="690.5" cy="2722.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="699.5" y="2725.8496">end(cb: Function) : Duplex</text><ellipse cx="690.5" cy="2735.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="699.5" y="2738.8047">end(chunk: any, cb: Function) : Duplex</text><ellipse cx="690.5" cy="2748.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="699.5" y="2751.7598">end(chunk: any, encoding: BufferEncoding, cb: Function) : Duplex</text><ellipse cx="690.5" cy="2761.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="699.5" y="2764.7148">eventNames() : (string | symbol)[]</text><ellipse cx="690.5" cy="2774.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="699.5" y="2777.6699">from(src: string | Object | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt; | Promise&lt;any&gt; | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex</text><ellipse cx="690.5" cy="2786.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="699.5" y="2790.625">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="690.5" cy="2799.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="699.5" y="2803.5801">getMaxListeners() : number</text><ellipse cx="690.5" cy="2812.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="699.5" y="2816.5352">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="690.5" cy="2825.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="699.5" y="2829.4902">isPaused() : boolean</text><ellipse cx="690.5" cy="2838.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="699.5" y="2842.4453">listenerCount(eventName: string | symbol) : number</text><ellipse cx="690.5" cy="2851.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="699.5" y="2855.4004">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="690.5" cy="2864.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="699.5" y="2868.3555">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="2877.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="699.5" y="2881.3105">off(eventName: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="2890.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="2894.2656">on(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2903.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="699.5" y="2907.2207">on(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2916.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="699.5" y="2920.1758">on(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2929.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="2933.1309">on(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2942.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="699.5" y="2946.0859">on(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2955.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="699.5" y="2959.041">on(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2968.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="2971.9961">on(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="2981.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="699.5" y="2984.9512">on(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="2994.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="699.5" y="2997.9063">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690.5" cy="3007.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="3010.8613">once(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3020.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699.5" y="3023.8164">once(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3033.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="699.5" y="3036.7715">once(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3046.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="3049.7266">once(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3059.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="699.5" y="3062.6816">once(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3072.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="699.5" y="3075.6367">once(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3084.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="699.5" y="3088.5918">once(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3097.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="699.5" y="3101.5469">once(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3110.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="699.5" y="3114.502">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690.5" cy="3123.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="699.5" y="3127.457">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690.5" cy="3136.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="699.5" y="3140.4121">pause() : Duplex</text><ellipse cx="690.5" cy="3149.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="699.5" y="3153.3672">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="690.5" cy="3162.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699.5" y="3166.3223">prependListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3175.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="3179.2773">prependListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3188.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="699.5" y="3192.2324">prependListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3201.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699.5" y="3205.1875">prependListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3214.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="699.5" y="3218.1426">prependListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3227.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="699.5" y="3231.0977">prependListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3240.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="699.5" y="3244.0527">prependListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3253.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="699.5" y="3257.0078">prependListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3266.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699.5" y="3269.9629">prependOnceListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3279.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="699.5" y="3282.918">prependOnceListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3292.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="699.5" y="3295.873">prependOnceListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3305.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699.5" y="3308.8281">prependOnceListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3318.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="699.5" y="3321.7832">prependOnceListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3331.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="699.5" y="3334.7383">prependOnceListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3344.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="699.5" y="3347.6934">prependOnceListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3357.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="699.5" y="3360.6484">prependOnceListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3369.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="699.5" y="3373.6035">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="690.5" cy="3382.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="699.5" y="3386.5586">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="3395.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="699.5" y="3399.5137">read(size: number) : any</text><ellipse cx="690.5" cy="3408.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="699.5" y="3412.4688">removeAllListeners(event: string | symbol) : Duplex</text><ellipse cx="690.5" cy="3421.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="3425.4238">removeListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3434.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="699.5" y="3438.3789">removeListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3447.6992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="699.5" y="3451.334">removeListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3460.6543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="3464.2891">removeListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3473.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="699.5" y="3477.2441">removeListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3486.5645" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="699.5" y="3490.1992">removeListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3499.5195" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="699.5" y="3503.1543">removeListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3512.4746" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="699.5" y="3516.1094">removeListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3525.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="699.5" y="3529.0645">resume() : Duplex</text><ellipse cx="690.5" cy="3538.3848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="699.5" y="3542.0195">setDefaultEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="690.5" cy="3551.3398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="699.5" y="3554.9746">setEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="690.5" cy="3564.2949" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="699.5" y="3567.9297">setMaxListeners(n: number) : Duplex</text><ellipse cx="690.5" cy="3577.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="699.5" y="3580.8848">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="690.5" cy="3590.2051" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="699.5" y="3593.8398">uncork() : void</text><ellipse cx="690.5" cy="3603.1602" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="699.5" y="3606.7949">unpipe(destination: WritableStream) : Duplex</text><ellipse cx="690.5" cy="3616.1152" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="699.5" y="3619.75">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="690.5" cy="3629.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="699.5" y="3632.7051">wrap(stream: ReadableStream) : Duplex</text><ellipse cx="690.5" cy="3642.0254" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="699.5" y="3645.6602">write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="690.5" cy="3654.9805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="699.5" y="3658.6152">write(chunk: any, cb: Function) : boolean</text><ellipse cx="690.5" cy="3667.9355" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699.5" y="3671.5703">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690.5" cy="3680.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="699.5" y="3684.5254">_construct(callback: Function) : void</text><ellipse cx="690.5" cy="3693.8457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="699.5" y="3697.4805">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="690.5" cy="3706.8008" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="699.5" y="3710.4355">_final(callback: Function) : void</text><ellipse cx="690.5" cy="3719.7559" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699.5" y="3723.3906">_read(size: number) : void</text><ellipse cx="690.5" cy="3732.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="699.5" y="3736.3457">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="690.5" cy="3745.666" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="699.5" y="3749.3008">_writev(chunks: Object[], callback: Function) : void</text><ellipse cx="690.5" cy="3758.6211" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699.5" y="3762.2559">addListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3771.5762" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="699.5" y="3775.2109">addListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3784.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="699.5" y="3788.166">addListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3797.4863" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699.5" y="3801.1211">addListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3810.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="699.5" y="3814.0762">addListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3823.3965" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="699.5" y="3827.0313">addListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3836.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="699.5" y="3839.9863">addListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="3849.3066" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="699.5" y="3852.9414">addListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="3862.2617" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="699.5" y="3865.8965">cork() : void</text><ellipse cx="690.5" cy="3875.2168" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="3878.8516">destroy(error: Error) : Duplex</text><ellipse cx="690.5" cy="3888.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="699.5" y="3891.8066">emit(event: "close") : boolean</text><ellipse cx="690.5" cy="3901.127" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="699.5" y="3904.7617">emit(event: "data", chunk: any) : boolean</text><ellipse cx="690.5" cy="3914.082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="699.5" y="3917.7168">emit(event: "end") : boolean</text><ellipse cx="690.5" cy="3927.0371" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="699.5" y="3930.6719">emit(event: "error", err: Error) : boolean</text><ellipse cx="690.5" cy="3939.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699.5" y="3943.627">emit(event: "pause") : boolean</text><ellipse cx="690.5" cy="3952.9473" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="699.5" y="3956.582">emit(event: "readable") : boolean</text><ellipse cx="690.5" cy="3965.9023" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="699.5" y="3969.5371">emit(event: "resume") : boolean</text><ellipse cx="690.5" cy="3978.8574" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="699.5" y="3982.4922">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="690.5" cy="3991.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="699.5" y="3995.4473">end(cb: Function) : Duplex</text><ellipse cx="690.5" cy="4004.7676" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="699.5" y="4008.4023">end(chunk: any, cb: Function) : Duplex</text><ellipse cx="690.5" cy="4017.7227" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="699.5" y="4021.3574">end(chunk: any, encoding: BufferEncoding, cb: Function) : Duplex</text><ellipse cx="690.5" cy="4030.6777" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="699.5" y="4034.3125">eventNames() : (string | symbol)[]</text><ellipse cx="690.5" cy="4043.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="774" x="699.5" y="4047.2676">from(src: string | Object | Stream | Iterable&lt;any&gt; | AsyncIterable&lt;any&gt; | Promise&lt;any&gt; | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex</text><ellipse cx="690.5" cy="4056.5879" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="699.5" y="4060.2227">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="690.5" cy="4069.543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="699.5" y="4073.1777">getMaxListeners() : number</text><ellipse cx="690.5" cy="4082.498" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="699.5" y="4086.1328">isDisturbed(stream: ReadableStream | Readable) : boolean</text><ellipse cx="690.5" cy="4095.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="699.5" y="4099.0879">isPaused() : boolean</text><ellipse cx="690.5" cy="4108.4082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="699.5" y="4112.043">listenerCount(eventName: string | symbol) : number</text><ellipse cx="690.5" cy="4121.3633" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="699.5" y="4124.998">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="690.5" cy="4134.3184" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="699.5" y="4137.9531">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="4147.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="699.5" y="4150.9082">off(eventName: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4160.2285" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="4163.8633">on(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4173.1836" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="699.5" y="4176.8184">on(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4186.1387" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="699.5" y="4189.7734">on(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4199.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="4202.7285">on(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4212.0488" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="699.5" y="4215.6836">on(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4225.0039" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="699.5" y="4228.6387">on(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4237.959" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="4241.5938">on(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4250.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="699.5" y="4254.5488">on(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4263.8691" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="699.5" y="4267.5039">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690.5" cy="4276.8242" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="4280.459">once(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4289.7793" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699.5" y="4293.4141">once(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4302.7344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="699.5" y="4306.3691">once(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4315.6895" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699.5" y="4319.3242">once(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4328.6445" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="699.5" y="4332.2793">once(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4341.5996" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="699.5" y="4345.2344">once(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4354.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="699.5" y="4358.1895">once(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4367.5098" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="699.5" y="4371.1445">once(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4380.4648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="699.5" y="4384.0996">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690.5" cy="4393.4199" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="699.5" y="4397.0547">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690.5" cy="4406.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="699.5" y="4410.0098">pause() : Duplex</text><ellipse cx="690.5" cy="4419.3301" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="699.5" y="4422.9648">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="690.5" cy="4432.2852" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699.5" y="4435.9199">prependListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4445.2402" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="4448.875">prependListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4458.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="699.5" y="4461.8301">prependListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4471.1504" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699.5" y="4474.7852">prependListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4484.1055" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="699.5" y="4487.7402">prependListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4497.0605" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="699.5" y="4500.6953">prependListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4510.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="699.5" y="4513.6504">prependListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4522.9707" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="699.5" y="4526.6055">prependListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4535.9258" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699.5" y="4539.5605">prependOnceListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4548.8809" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="699.5" y="4552.5156">prependOnceListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4561.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="699.5" y="4565.4707">prependOnceListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4574.791" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699.5" y="4578.4258">prependOnceListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4587.7461" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="699.5" y="4591.3809">prependOnceListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4600.7012" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="699.5" y="4604.3359">prependOnceListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4613.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="699.5" y="4617.291">prependOnceListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4626.6113" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="699.5" y="4630.2461">prependOnceListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4639.5664" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="699.5" y="4643.2012">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="690.5" cy="4652.5215" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="699.5" y="4656.1563">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="4665.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="699.5" y="4669.1113">read(size: number) : any</text><ellipse cx="690.5" cy="4678.4316" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="699.5" y="4682.0664">removeAllListeners(event: string | symbol) : Duplex</text><ellipse cx="690.5" cy="4691.3867" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="4695.0215">removeListener(event: "close", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4704.3418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="699.5" y="4707.9766">removeListener(event: "data", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4717.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="699.5" y="4720.9316">removeListener(event: "end", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4730.252" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699.5" y="4733.8867">removeListener(event: "error", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4743.207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="699.5" y="4746.8418">removeListener(event: "pause", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4756.1621" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="699.5" y="4759.7969">removeListener(event: "readable", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4769.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="699.5" y="4772.752">removeListener(event: "resume", listener: Function) : Duplex</text><ellipse cx="690.5" cy="4782.0723" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="699.5" y="4785.707">removeListener(event: string | symbol, listener: Function) : Duplex</text><ellipse cx="690.5" cy="4795.0273" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="699.5" y="4798.6621">resume() : Duplex</text><ellipse cx="690.5" cy="4807.9824" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="699.5" y="4811.6172">setDefaultEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="690.5" cy="4820.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="699.5" y="4824.5723">setEncoding(encoding: BufferEncoding) : Duplex</text><ellipse cx="690.5" cy="4833.8926" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="699.5" y="4837.5273">setMaxListeners(n: number) : Duplex</text><ellipse cx="690.5" cy="4846.8477" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="699.5" y="4850.4824">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="690.5" cy="4859.8027" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="699.5" y="4863.4375">uncork() : void</text><ellipse cx="690.5" cy="4872.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="699.5" y="4876.3926">unpipe(destination: WritableStream) : Duplex</text><ellipse cx="690.5" cy="4885.7129" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="699.5" y="4889.3477">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="690.5" cy="4898.668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="699.5" y="4902.3027">wrap(stream: ReadableStream) : Duplex</text><ellipse cx="690.5" cy="4911.623" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="360" x="699.5" y="4915.2578">write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean</text><ellipse cx="690.5" cy="4924.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="699.5" y="4928.2129">write(chunk: any, cb: Function) : boolean</text><ellipse cx="690.5" cy="4937.5332" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699.5" y="4941.168">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690.5" cy="4950.4883" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="699.5" y="4954.123">_construct(callback: Function) : void</text><ellipse cx="690.5" cy="4963.4434" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="699.5" y="4967.0781">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="690.5" cy="4976.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="699.5" y="4980.0332">_final(callback: Function) : void</text><ellipse cx="690.5" cy="4989.3535" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699.5" y="4992.9883">_read(size: number) : void</text><ellipse cx="690.5" cy="5002.3086" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="699.5" y="5005.9434">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="690.5" cy="5015.2637" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="699.5" y="5018.8984">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[94cb1445837fb446aa5f5819d9971c55]
reverse link Stream to Readable--><path codeLine="135" d="M848.44,411.48 C852.63,424.49 856.94,437.88 861.36,451.59 " fill="none" id="Stream-backto-Readable" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="841.65,413.22,842.18,392.04,854.97,408.93,841.65,413.22" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[4ddf0d38953a435f3cf6ce8f62a2e10b]
reverse link ReadableStream to Readable--><path codeLine="164" d="M1310.56,411.48 C1306.37,424.49 1302.06,437.88 1297.64,451.59 " fill="none" id="ReadableStream-backto-Readable" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="1304.03,408.93,1316.82,392.04,1317.35,413.22,1304.03,408.93" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[335f627f56cc5c5fdad50b5d9a1b5159]
reverse link Readable to IncomingMessage--><path codeLine="284" d="M751.88,1664.94 C718.26,1731.88 687.11,1800.54 661.5,1868 C565.73,2120.21 494.46,2406.01 442.81,2664.4 " fill="none" id="Readable-backto-IncomingMessage" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="745.66,1661.72,760.95,1647.04,758.15,1668.04,745.66,1661.72" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[53a1472f2276db14e765f88ac3fda3da]
reverse link Readable to Duplex--><path codeLine="407" d="M1067.69,1828.6 C1067.63,1841.61 1067.58,1854.72 1067.53,1867.91 " fill="none" id="Readable-backto-Duplex" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1060.69,1828.2,1067.78,1808.23,1074.69,1828.26,1060.69,1828.2" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[53a1472f2276db14e765f88ac3fda3da]
reverse link Readable to Duplex--><path codeLine="530" d="M1092.01,1828.6 C1092.06,1841.61 1092.12,1854.72 1092.18,1867.91 " fill="none" id="Readable-backto-Duplex-1" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1085,1828.26,1091.91,1808.23,1099,1828.2,1085,1828.26" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[dd11b48d5518798009a389919894c03e]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "Readable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Readable
    +addListener(event: "data", listener: Function) : Readable
    +addListener(event: "end", listener: Function) : Readable
    +addListener(event: "error", listener: Function) : Readable
    +addListener(event: "pause", listener: Function) : Readable
    +addListener(event: "readable", listener: Function) : Readable
    +addListener(event: "resume", listener: Function) : Readable
    +addListener(event: string | symbol, listener: Function) : Readable
    +destroy(error: Error) : Readable
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +from(iterable: Iterable<any> | AsyncIterable<any>, options: ReadableOptions) : Readable
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Readable
    +on(event: "close", listener: Function) : Readable
    +on(event: "data", listener: Function) : Readable
    +on(event: "end", listener: Function) : Readable
    +on(event: "error", listener: Function) : Readable
    +on(event: "pause", listener: Function) : Readable
    +on(event: "readable", listener: Function) : Readable
    +on(event: "resume", listener: Function) : Readable
    +on(event: string | symbol, listener: Function) : Readable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Readable
    +once(event: "data", listener: Function) : Readable
    +once(event: "end", listener: Function) : Readable
    +once(event: "error", listener: Function) : Readable
    +once(event: "pause", listener: Function) : Readable
    +once(event: "readable", listener: Function) : Readable
    +once(event: "resume", listener: Function) : Readable
    +once(event: string | symbol, listener: Function) : Readable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Readable
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Readable
    +prependListener(event: "data", listener: Function) : Readable
    +prependListener(event: "end", listener: Function) : Readable
    +prependListener(event: "error", listener: Function) : Readable
    +prependListener(event: "pause", listener: Function) : Readable
    +prependListener(event: "readable", listener: Function) : Readable
    +prependListener(event: "resume", listener: Function) : Readable
    +prependListener(event: string | symbol, listener: Function) : Readable
    +prependOnceListener(event: "close", listener: Function) : Readable
    +prependOnceListener(event: "data", listener: Function) : Readable
    +prependOnceListener(event: "end", listener: Function) : Readable
    +prependOnceListener(event: "error", listener: Function) : Readable
    +prependOnceListener(event: "pause", listener: Function) : Readable
    +prependOnceListener(event: "readable", listener: Function) : Readable
    +prependOnceListener(event: "resume", listener: Function) : Readable
    +prependOnceListener(event: string | symbol, listener: Function) : Readable
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Readable
    +removeListener(event: "close", listener: Function) : Readable
    +removeListener(event: "data", listener: Function) : Readable
    +removeListener(event: "end", listener: Function) : Readable
    +removeListener(event: "error", listener: Function) : Readable
    +removeListener(event: "pause", listener: Function) : Readable
    +removeListener(event: "readable", listener: Function) : Readable
    +removeListener(event: "resume", listener: Function) : Readable
    +removeListener(event: string | symbol, listener: Function) : Readable
    +resume() : Readable
    +setEncoding(encoding: BufferEncoding) : Readable
    +setMaxListeners(n: number) : Readable
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +unpipe(destination: WritableStream) : Readable
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Readable
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_read(size: number) : void
}
class "Stream" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +addListener(eventName: string | symbol, listener: Function) : Stream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Stream
    +on(eventName: string | symbol, listener: Function) : Stream
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(eventName: string | symbol, listener: Function) : Stream
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : Stream
    +prependOnceListener(eventName: string | symbol, listener: Function) : Stream
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Stream
    +removeListener(eventName: string | symbol, listener: Function) : Stream
    +setMaxListeners(n: number) : Stream
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
}
"Stream" <|- - "Readable"
interface "ReadableStream" {
    +readable : boolean
    +addListener(eventName: string | symbol, listener: Function) : ReadableStream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    +getMaxListeners() : number
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : ReadableStream
    +on(eventName: string | symbol, listener: Function) : ReadableStream
    +once(eventName: string | symbol, listener: Function) : ReadableStream
    +pause() : ReadableStream
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : ReadableStream
    +prependOnceListener(eventName: string | symbol, listener: Function) : ReadableStream
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : string | Buffer
    +removeAllListeners(event: string | symbol) : ReadableStream
    +removeListener(eventName: string | symbol, listener: Function) : ReadableStream
    +resume() : ReadableStream
    +setEncoding(encoding: BufferEncoding) : ReadableStream
    +setMaxListeners(n: number) : ReadableStream
    +unpipe(destination: WritableStream) : ReadableStream
    +unshift(chunk: string | Uint8Array, encoding: BufferEncoding) : void
    +wrap(oldStream: ReadableStream) : ReadableStream
    +[asyncIterator]() : AsyncIterableIterator<string | Buffer>
}
"ReadableStream" <|.. "Readable"
class "IncomingMessage" {
    +aborted : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    +complete : boolean
    +connection : Socket
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +headers : IncomingHttpHeaders
    +httpVersion : string
    +httpVersionMajor : number
    +httpVersionMinor : number
    +method : string
    +rawHeaders : string[]
    +rawTrailers : string[]
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +socket : Socket
    +statusCode : number
    +statusMessage : string
    +trailers : Dict<string>
    +url : string
    +addListener(event: "close", listener: Function) : IncomingMessage
    +addListener(event: "data", listener: Function) : IncomingMessage
    +addListener(event: "end", listener: Function) : IncomingMessage
    +addListener(event: "error", listener: Function) : IncomingMessage
    +addListener(event: "pause", listener: Function) : IncomingMessage
    +addListener(event: "readable", listener: Function) : IncomingMessage
    +addListener(event: "resume", listener: Function) : IncomingMessage
    +addListener(event: string | symbol, listener: Function) : IncomingMessage
    +destroy(error: Error) : IncomingMessage
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +from(iterable: Iterable<any> | AsyncIterable<any>, options: ReadableOptions) : Readable
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : IncomingMessage
    +on(event: "close", listener: Function) : IncomingMessage
    +on(event: "data", listener: Function) : IncomingMessage
    +on(event: "end", listener: Function) : IncomingMessage
    +on(event: "error", listener: Function) : IncomingMessage
    +on(event: "pause", listener: Function) : IncomingMessage
    +on(event: "readable", listener: Function) : IncomingMessage
    +on(event: "resume", listener: Function) : IncomingMessage
    +on(event: string | symbol, listener: Function) : IncomingMessage
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : IncomingMessage
    +once(event: "data", listener: Function) : IncomingMessage
    +once(event: "end", listener: Function) : IncomingMessage
    +once(event: "error", listener: Function) : IncomingMessage
    +once(event: "pause", listener: Function) : IncomingMessage
    +once(event: "readable", listener: Function) : IncomingMessage
    +once(event: "resume", listener: Function) : IncomingMessage
    +once(event: string | symbol, listener: Function) : IncomingMessage
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : IncomingMessage
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : IncomingMessage
    +prependListener(event: "data", listener: Function) : IncomingMessage
    +prependListener(event: "end", listener: Function) : IncomingMessage
    +prependListener(event: "error", listener: Function) : IncomingMessage
    +prependListener(event: "pause", listener: Function) : IncomingMessage
    +prependListener(event: "readable", listener: Function) : IncomingMessage
    +prependListener(event: "resume", listener: Function) : IncomingMessage
    +prependListener(event: string | symbol, listener: Function) : IncomingMessage
    +prependOnceListener(event: "close", listener: Function) : IncomingMessage
    +prependOnceListener(event: "data", listener: Function) : IncomingMessage
    +prependOnceListener(event: "end", listener: Function) : IncomingMessage
    +prependOnceListener(event: "error", listener: Function) : IncomingMessage
    +prependOnceListener(event: "pause", listener: Function) : IncomingMessage
    +prependOnceListener(event: "readable", listener: Function) : IncomingMessage
    +prependOnceListener(event: "resume", listener: Function) : IncomingMessage
    +prependOnceListener(event: string | symbol, listener: Function) : IncomingMessage
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : IncomingMessage
    +removeListener(event: "close", listener: Function) : IncomingMessage
    +removeListener(event: "data", listener: Function) : IncomingMessage
    +removeListener(event: "end", listener: Function) : IncomingMessage
    +removeListener(event: "error", listener: Function) : IncomingMessage
    +removeListener(event: "pause", listener: Function) : IncomingMessage
    +removeListener(event: "readable", listener: Function) : IncomingMessage
    +removeListener(event: "resume", listener: Function) : IncomingMessage
    +removeListener(event: string | symbol, listener: Function) : IncomingMessage
    +resume() : IncomingMessage
    +setEncoding(encoding: BufferEncoding) : IncomingMessage
    +setMaxListeners(n: number) : IncomingMessage
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setTimeout(msecs: number, callback: Function) : IncomingMessage
    +unpipe(destination: WritableStream) : IncomingMessage
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : IncomingMessage
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_read(size: number) : void
}
"Readable" <|- - "IncomingMessage"
class "Duplex" {
    +allowHalfOpen : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Duplex
    +addListener(event: "data", listener: Function) : Duplex
    +addListener(event: "end", listener: Function) : Duplex
    +addListener(event: "error", listener: Function) : Duplex
    +addListener(event: "pause", listener: Function) : Duplex
    +addListener(event: "readable", listener: Function) : Duplex
    +addListener(event: "resume", listener: Function) : Duplex
    +addListener(event: string | symbol, listener: Function) : Duplex
    +cork() : void
    +destroy(error: Error) : Duplex
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : Duplex
    +end(chunk: any, cb: Function) : Duplex
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : Duplex
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | Stream | Iterable<any> | AsyncIterable<any> | Promise<any> | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Duplex
    +on(event: "close", listener: Function) : Duplex
    +on(event: "data", listener: Function) : Duplex
    +on(event: "end", listener: Function) : Duplex
    +on(event: "error", listener: Function) : Duplex
    +on(event: "pause", listener: Function) : Duplex
    +on(event: "readable", listener: Function) : Duplex
    +on(event: "resume", listener: Function) : Duplex
    +on(event: string | symbol, listener: Function) : Duplex
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Duplex
    +once(event: "data", listener: Function) : Duplex
    +once(event: "end", listener: Function) : Duplex
    +once(event: "error", listener: Function) : Duplex
    +once(event: "pause", listener: Function) : Duplex
    +once(event: "readable", listener: Function) : Duplex
    +once(event: "resume", listener: Function) : Duplex
    +once(event: string | symbol, listener: Function) : Duplex
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Duplex
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Duplex
    +prependListener(event: "data", listener: Function) : Duplex
    +prependListener(event: "end", listener: Function) : Duplex
    +prependListener(event: "error", listener: Function) : Duplex
    +prependListener(event: "pause", listener: Function) : Duplex
    +prependListener(event: "readable", listener: Function) : Duplex
    +prependListener(event: "resume", listener: Function) : Duplex
    +prependListener(event: string | symbol, listener: Function) : Duplex
    +prependOnceListener(event: "close", listener: Function) : Duplex
    +prependOnceListener(event: "data", listener: Function) : Duplex
    +prependOnceListener(event: "end", listener: Function) : Duplex
    +prependOnceListener(event: "error", listener: Function) : Duplex
    +prependOnceListener(event: "pause", listener: Function) : Duplex
    +prependOnceListener(event: "readable", listener: Function) : Duplex
    +prependOnceListener(event: "resume", listener: Function) : Duplex
    +prependOnceListener(event: string | symbol, listener: Function) : Duplex
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Duplex
    +removeListener(event: "close", listener: Function) : Duplex
    +removeListener(event: "data", listener: Function) : Duplex
    +removeListener(event: "end", listener: Function) : Duplex
    +removeListener(event: "error", listener: Function) : Duplex
    +removeListener(event: "pause", listener: Function) : Duplex
    +removeListener(event: "readable", listener: Function) : Duplex
    +removeListener(event: "resume", listener: Function) : Duplex
    +removeListener(event: string | symbol, listener: Function) : Duplex
    +resume() : Duplex
    +setDefaultEncoding(encoding: BufferEncoding) : Duplex
    +setEncoding(encoding: BufferEncoding) : Duplex
    +setMaxListeners(n: number) : Duplex
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +uncork() : void
    +unpipe(destination: WritableStream) : Duplex
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Duplex
    +write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean
    +write(chunk: any, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_read(size: number) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Readable" <|- - "Duplex"
class "Duplex" {
    +allowHalfOpen : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Duplex
    +addListener(event: "data", listener: Function) : Duplex
    +addListener(event: "end", listener: Function) : Duplex
    +addListener(event: "error", listener: Function) : Duplex
    +addListener(event: "pause", listener: Function) : Duplex
    +addListener(event: "readable", listener: Function) : Duplex
    +addListener(event: "resume", listener: Function) : Duplex
    +addListener(event: string | symbol, listener: Function) : Duplex
    +cork() : void
    +destroy(error: Error) : Duplex
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : Duplex
    +end(chunk: any, cb: Function) : Duplex
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : Duplex
    +eventNames() : (string | symbol)[]
    {static} +from(src: string | Object | Stream | Iterable<any> | AsyncIterable<any> | Promise<any> | Blob | ArrayBuffer | AsyncGeneratorFunction) : Duplex
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: ReadableStream | Readable) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Duplex
    +on(event: "close", listener: Function) : Duplex
    +on(event: "data", listener: Function) : Duplex
    +on(event: "end", listener: Function) : Duplex
    +on(event: "error", listener: Function) : Duplex
    +on(event: "pause", listener: Function) : Duplex
    +on(event: "readable", listener: Function) : Duplex
    +on(event: "resume", listener: Function) : Duplex
    +on(event: string | symbol, listener: Function) : Duplex
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Duplex
    +once(event: "data", listener: Function) : Duplex
    +once(event: "end", listener: Function) : Duplex
    +once(event: "error", listener: Function) : Duplex
    +once(event: "pause", listener: Function) : Duplex
    +once(event: "readable", listener: Function) : Duplex
    +once(event: "resume", listener: Function) : Duplex
    +once(event: string | symbol, listener: Function) : Duplex
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Duplex
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Duplex
    +prependListener(event: "data", listener: Function) : Duplex
    +prependListener(event: "end", listener: Function) : Duplex
    +prependListener(event: "error", listener: Function) : Duplex
    +prependListener(event: "pause", listener: Function) : Duplex
    +prependListener(event: "readable", listener: Function) : Duplex
    +prependListener(event: "resume", listener: Function) : Duplex
    +prependListener(event: string | symbol, listener: Function) : Duplex
    +prependOnceListener(event: "close", listener: Function) : Duplex
    +prependOnceListener(event: "data", listener: Function) : Duplex
    +prependOnceListener(event: "end", listener: Function) : Duplex
    +prependOnceListener(event: "error", listener: Function) : Duplex
    +prependOnceListener(event: "pause", listener: Function) : Duplex
    +prependOnceListener(event: "readable", listener: Function) : Duplex
    +prependOnceListener(event: "resume", listener: Function) : Duplex
    +prependOnceListener(event: string | symbol, listener: Function) : Duplex
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Duplex
    +removeListener(event: "close", listener: Function) : Duplex
    +removeListener(event: "data", listener: Function) : Duplex
    +removeListener(event: "end", listener: Function) : Duplex
    +removeListener(event: "error", listener: Function) : Duplex
    +removeListener(event: "pause", listener: Function) : Duplex
    +removeListener(event: "readable", listener: Function) : Duplex
    +removeListener(event: "resume", listener: Function) : Duplex
    +removeListener(event: string | symbol, listener: Function) : Duplex
    +resume() : Duplex
    +setDefaultEncoding(encoding: BufferEncoding) : Duplex
    +setEncoding(encoding: BufferEncoding) : Duplex
    +setMaxListeners(n: number) : Duplex
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +uncork() : void
    +unpipe(destination: WritableStream) : Duplex
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Duplex
    +write(chunk: any, encoding: BufferEncoding, cb: Function) : boolean
    +write(chunk: any, cb: Function) : boolean
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_read(size: number) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Readable" <|- - "Duplex"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>