<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="3575px" preserveAspectRatio="none" style="width:1330px;height:3575px;background:#00000000;" version="1.1" viewBox="0 0 1330 3575" width="1330px" zoomAndPan="magnify"><defs><filter height="300%" id="ftbb1b6fte9bx" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[d71ee11ede0e83c966e8ef97d9465fe6]
class Stream--><rect codeLine="4" fill="#FEFECE" filter="url(#ftbb1b6fte9bx)" height="384.832" id="Stream" style="stroke:#A80036;stroke-width:1.5;" width="637" x="343" y="452"/><ellipse cx="637.25" cy="468" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M639.7231,474.1431 Q639.1421,474.4419 638.5029,474.5913 Q637.8638,474.7407 637.1582,474.7407 Q634.6514,474.7407 633.3315,473.0889 Q632.0117,471.437 632.0117,468.3159 Q632.0117,465.1865 633.3315,463.5347 Q634.6514,461.8828 637.1582,461.8828 Q637.8638,461.8828 638.5112,462.0322 Q639.1587,462.1816 639.7231,462.4805 L639.7231,465.2031 Q639.0923,464.6221 638.4988,464.3523 Q637.9053,464.0825 637.2744,464.0825 Q635.9297,464.0825 635.2449,465.1492 Q634.5601,466.2158 634.5601,468.3159 Q634.5601,470.4077 635.2449,471.4744 Q635.9297,472.541 637.2744,472.541 Q637.9053,472.541 638.4988,472.2712 Q639.0923,472.0015 639.7231,471.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="40" x="657.75" y="472.5352">Stream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="344" x2="979" y1="484" y2="484"/><ellipse cx="354" cy="495" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="363" y="498.6348">captureRejections : boolean</text><ellipse cx="354" cy="507.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="363" y="511.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="354" cy="520.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="363" y="524.5449">defaultMaxListeners : number</text><ellipse cx="354" cy="533.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="363" y="537.5">errorMonitor : typeof errorMonitor</text><line style="stroke:#A80036;stroke-width:1.5;" x1="344" x2="979" y1="543.8203" y2="543.8203"/><ellipse cx="354" cy="554.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="363" y="558.4551">addListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="354" cy="567.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="363" y="571.4102">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="354" cy="580.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="363" y="584.3652">eventNames() : (string | symbol)[]</text><ellipse cx="354" cy="593.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="363" y="597.3203">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="354" cy="606.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="363" y="610.2754">getMaxListeners() : number</text><ellipse cx="354" cy="619.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="363" y="623.2305">listenerCount(eventName: string | symbol) : number</text><ellipse cx="354" cy="632.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="363" y="636.1855">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="354" cy="645.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="363" y="649.1406">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="354" cy="658.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="314" x="363" y="662.0957">off(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="354" cy="671.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="363" y="675.0508">on(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="354" cy="684.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="363" y="688.0059">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="354" cy="697.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="363" y="700.9609">once(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="354" cy="710.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="363" y="713.916">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="354" cy="723.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="363" y="726.8711">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="354" cy="736.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="363" y="739.8262">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="354" cy="749.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="387" x="363" y="752.7813">prependListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="354" cy="762.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="363" y="765.7363">prependOnceListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="354" cy="775.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="363" y="778.6914">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="354" cy="788.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="363" y="791.6465">removeAllListeners(event: string | symbol) : Stream</text><ellipse cx="354" cy="800.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="382" x="363" y="804.6016">removeListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="354" cy="813.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="363" y="817.5566">setMaxListeners(n: number) : Stream</text><ellipse cx="354" cy="826.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="363" y="830.5117">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><!--MD5=[bf3e9baaddb7bbb8eafc257981afc540]
class internal--><rect codeLine="32" fill="#FEFECE" filter="url(#ftbb1b6fte9bx)" height="384.832" id="internal" style="stroke:#A80036;stroke-width:1.5;" width="637" x="343" y="7"/><ellipse cx="635.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M638.2231,29.1431 Q637.6421,29.4419 637.0029,29.5913 Q636.3638,29.7407 635.6582,29.7407 Q633.1514,29.7407 631.8315,28.0889 Q630.5117,26.437 630.5117,23.3159 Q630.5117,20.1865 631.8315,18.5347 Q633.1514,16.8828 635.6582,16.8828 Q636.3638,16.8828 637.0112,17.0322 Q637.6587,17.1816 638.2231,17.4805 L638.2231,20.2031 Q637.5923,19.6221 636.9988,19.3523 Q636.4053,19.0825 635.7744,19.0825 Q634.4297,19.0825 633.7449,20.1492 Q633.0601,21.2158 633.0601,23.3159 Q633.0601,25.4077 633.7449,26.4744 Q634.4297,27.541 635.7744,27.541 Q636.4053,27.541 636.9988,27.2712 Q637.5923,27.0015 638.2231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="43" x="656.25" y="27.5352">internal</text><line style="stroke:#A80036;stroke-width:1.5;" x1="344" x2="979" y1="39" y2="39"/><ellipse cx="354" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="363" y="53.6348">captureRejections : boolean</text><ellipse cx="354" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="363" y="66.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="354" cy="75.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="363" y="79.5449">defaultMaxListeners : number</text><ellipse cx="354" cy="88.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="363" y="92.5">errorMonitor : typeof errorMonitor</text><line style="stroke:#A80036;stroke-width:1.5;" x1="344" x2="979" y1="98.8203" y2="98.8203"/><ellipse cx="354" cy="109.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="363" y="113.4551">addListener(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="354" cy="122.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="363" y="126.4102">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="354" cy="135.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="363" y="139.3652">eventNames() : (string | symbol)[]</text><ellipse cx="354" cy="148.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="363" y="152.3203">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="354" cy="161.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="363" y="165.2754">getMaxListeners() : number</text><ellipse cx="354" cy="174.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="363" y="178.2305">listenerCount(eventName: string | symbol) : number</text><ellipse cx="354" cy="187.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="363" y="191.1855">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="354" cy="200.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="363" y="204.1406">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="354" cy="213.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="363" y="217.0957">off(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="354" cy="226.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="363" y="230.0508">on(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="354" cy="239.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="363" y="243.0059">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="354" cy="252.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="363" y="255.9609">once(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="354" cy="265.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="363" y="268.916">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="354" cy="278.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="363" y="281.8711">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="354" cy="291.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="363" y="294.8262">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="354" cy="304.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="363" y="307.7813">prependListener(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="354" cy="317.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="419" x="363" y="320.7363">prependOnceListener(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="354" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="363" y="333.6914">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="354" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="363" y="346.6465">removeAllListeners(event: string | symbol) : internal</text><ellipse cx="354" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="363" y="359.6016">removeListener(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="354" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="363" y="372.5566">setMaxListeners(n: number) : internal</text><ellipse cx="354" cy="381.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="363" y="385.5117">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><!--MD5=[c367c524f13260ba207946109d621584]
class Readable--><rect codeLine="258" fill="#FEFECE" filter="url(#ftbb1b6fte9bx)" height="2664.9258" id="Readable" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="897"/><ellipse cx="293.75" cy="913" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M296.2231,919.1431 Q295.6421,919.4419 295.0029,919.5913 Q294.3638,919.7407 293.6582,919.7407 Q291.1514,919.7407 289.8315,918.0889 Q288.5117,916.437 288.5117,913.3159 Q288.5117,910.1865 289.8315,908.5347 Q291.1514,906.8828 293.6582,906.8828 Q294.3638,906.8828 295.0112,907.0322 Q295.6587,907.1816 296.2231,907.4805 L296.2231,910.2031 Q295.5923,909.6221 294.9988,909.3523 Q294.4053,909.0825 293.7744,909.0825 Q292.4297,909.0825 291.7449,910.1492 Q291.0601,911.2158 291.0601,913.3159 Q291.0601,915.4077 291.7449,916.4744 Q292.4297,917.541 293.7744,917.541 Q294.4053,917.541 294.9988,917.2712 Q295.5923,917.0015 296.2231,916.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="55" x="314.25" y="917.5352">Readable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="929" y2="929"/><ellipse cx="18" cy="940" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="943.6348">captureRejections : boolean</text><ellipse cx="18" cy="952.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="956.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="965.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="969.5449">defaultMaxListeners : number</text><ellipse cx="18" cy="978.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="982.5">destroyed : boolean</text><ellipse cx="18" cy="991.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="995.4551">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="1004.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="1008.4102">readable : boolean</text><ellipse cx="18" cy="1017.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="1021.3652">readableAborted : boolean</text><ellipse cx="18" cy="1030.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="1034.3203">readableDidRead : boolean</text><ellipse cx="18" cy="1043.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="27" y="1047.2754">readableEncoding : null | BufferEncoding</text><ellipse cx="18" cy="1056.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="27" y="1060.2305">readableEnded : boolean</text><ellipse cx="18" cy="1069.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="1073.1855">readableFlowing : null | boolean</text><ellipse cx="18" cy="1082.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="27" y="1086.1406">readableHighWaterMark : number</text><ellipse cx="18" cy="1095.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="1099.0957">readableLength : number</text><ellipse cx="18" cy="1108.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="27" y="1112.0508">readableObjectMode : boolean</text><ellipse cx="18" cy="1121.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="1125.0059">captureRejections : boolean</text><ellipse cx="18" cy="1134.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="1137.9609">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="1147.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="1150.916">defaultMaxListeners : number</text><ellipse cx="18" cy="1160.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="1163.8711">destroyed : boolean</text><ellipse cx="18" cy="1173.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="1176.8262">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="1186.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="27" y="1189.7813">readable : boolean</text><ellipse cx="18" cy="1199.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="1202.7363">readableAborted : boolean</text><ellipse cx="18" cy="1212.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="1215.6914">readableDidRead : boolean</text><ellipse cx="18" cy="1225.0117" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="27" y="1228.6465">readableEncoding : null | BufferEncoding</text><ellipse cx="18" cy="1237.9668" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="27" y="1241.6016">readableEnded : boolean</text><ellipse cx="18" cy="1250.9219" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="1254.5566">readableFlowing : null | boolean</text><ellipse cx="18" cy="1263.877" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="27" y="1267.5117">readableHighWaterMark : number</text><ellipse cx="18" cy="1276.832" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="1280.4668">readableLength : number</text><ellipse cx="18" cy="1289.7871" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="27" y="1293.4219">readableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="1299.7422" y2="1299.7422"/><ellipse cx="18" cy="1310.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="1314.377">addListener(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="1323.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="27" y="1327.332">addListener(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="1336.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="27" y="1340.2871">addListener(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="1349.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="1353.2422">addListener(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="1362.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="27" y="1366.1973">addListener(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="1375.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="27" y="1379.1523">addListener(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="1388.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="1392.1074">addListener(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="1401.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="1405.0625">addListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="1414.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="168" x="27" y="1418.0176">destroy(error: Error) : Readable</text><ellipse cx="18" cy="1427.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="1430.9727">emit(event: "close") : boolean</text><ellipse cx="18" cy="1440.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="27" y="1443.9277">emit(event: "data", chunk: any) : boolean</text><ellipse cx="18" cy="1453.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="1456.8828">emit(event: "end") : boolean</text><ellipse cx="18" cy="1466.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="1469.8379">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="1479.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="1482.793">emit(event: "pause") : boolean</text><ellipse cx="18" cy="1492.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="27" y="1495.748">emit(event: "readable") : boolean</text><ellipse cx="18" cy="1505.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="27" y="1508.7031">emit(event: "resume") : boolean</text><ellipse cx="18" cy="1518.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="1521.6582">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="1530.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="1534.6133">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="1543.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="478" x="27" y="1547.5684">from(iterable: Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;, options: ReadableOptions) : Readable</text><ellipse cx="18" cy="1556.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="1560.5234">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="1569.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="1573.4785">getMaxListeners() : number</text><ellipse cx="18" cy="1582.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="27" y="1586.4336">isDisturbed(stream: Readable | ReadableStream) : boolean</text><ellipse cx="18" cy="1595.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="1599.3887">isPaused() : boolean</text><ellipse cx="18" cy="1608.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="1612.3438">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="1621.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="1625.2988">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="1634.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="1638.2539">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="1647.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="1651.209">off(eventName: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="1660.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="27" y="1664.1641">on(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="1673.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="27" y="1677.1191">on(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="1686.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="27" y="1690.0742">on(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="1699.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="27" y="1703.0293">on(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="1712.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="27" y="1715.9844">on(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="1725.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="27" y="1728.9395">on(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="1738.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="27" y="1741.8945">on(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="1751.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="27" y="1754.8496">on(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="1764.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="1767.8047">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="1777.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="27" y="1780.7598">once(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="1790.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="27" y="1793.7148">once(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="1803.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="27" y="1806.6699">once(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="1815.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="27" y="1819.625">once(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="1828.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="27" y="1832.5801">once(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="1841.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="27" y="1845.5352">once(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="1854.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="27" y="1858.4902">once(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="1867.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="27" y="1871.4453">once(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="1880.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="1884.4004">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="1893.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="1897.3555">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="1906.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="27" y="1910.3105">pause() : Readable</text><ellipse cx="18" cy="1919.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="1923.2656">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="1932.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="27" y="1936.2207">prependListener(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="1945.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="1949.1758">prependListener(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="1958.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="27" y="1962.1309">prependListener(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="1971.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="27" y="1975.0859">prependListener(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="1984.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="27" y="1988.041">prependListener(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="1997.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="27" y="2000.9961">prependListener(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="2010.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="27" y="2013.9512">prependListener(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="2023.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="27" y="2026.9063">prependListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="2036.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="27" y="2039.8613">prependOnceListener(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="2049.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="2052.8164">prependOnceListener(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="2062.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="2065.7715">prependOnceListener(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="2075.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="27" y="2078.7266">prependOnceListener(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="2088.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="2091.6816">prependOnceListener(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="2101.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="27" y="2104.6367">prependOnceListener(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="2113.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="27" y="2117.5918">prependOnceListener(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="2126.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="27" y="2130.5469">prependOnceListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="2139.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="2143.502">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="18" cy="2152.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="2156.457">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="2165.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="2169.4121">read(size: number) : any</text><ellipse cx="18" cy="2178.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="27" y="2182.3672">removeAllListeners(event: string | symbol) : Readable</text><ellipse cx="18" cy="2191.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="2195.3223">removeListener(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="2204.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="2208.2773">removeListener(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="2217.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="2221.2324">removeListener(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="2230.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="2234.1875">removeListener(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="2243.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="27" y="2247.1426">removeListener(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="2256.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="27" y="2260.0977">removeListener(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="2269.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="27" y="2273.0527">removeListener(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="2282.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="27" y="2286.0078">removeListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="2295.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="27" y="2298.9629">resume() : Readable</text><ellipse cx="18" cy="2308.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="27" y="2311.918">setEncoding(encoding: BufferEncoding) : Readable</text><ellipse cx="18" cy="2321.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="27" y="2324.873">setMaxListeners(n: number) : Readable</text><ellipse cx="18" cy="2334.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="27" y="2337.8281">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="18" cy="2347.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="27" y="2350.7832">unpipe(destination: WritableStream) : Readable</text><ellipse cx="18" cy="2360.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="27" y="2363.7383">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="18" cy="2373.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="27" y="2376.6934">wrap(stream: ReadableStream) : Readable</text><ellipse cx="18" cy="2386.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="2389.6484">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="2398.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="2402.6035">_construct(callback: Function) : void</text><ellipse cx="18" cy="2411.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="2415.5586">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="2424.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="2428.5137">_read(size: number) : void</text><ellipse cx="18" cy="2437.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="2441.4688">addListener(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="2450.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="27" y="2454.4238">addListener(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="2463.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="27" y="2467.3789">addListener(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="2476.6992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="2480.334">addListener(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="2489.6543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="27" y="2493.2891">addListener(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="2502.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="27" y="2506.2441">addListener(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="2515.5645" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="2519.1992">addListener(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="2528.5195" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="2532.1543">addListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="2541.4746" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="168" x="27" y="2545.1094">destroy(error: Error) : Readable</text><ellipse cx="18" cy="2554.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="2558.0645">emit(event: "close") : boolean</text><ellipse cx="18" cy="2567.3848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="27" y="2571.0195">emit(event: "data", chunk: any) : boolean</text><ellipse cx="18" cy="2580.3398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="2583.9746">emit(event: "end") : boolean</text><ellipse cx="18" cy="2593.2949" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="2596.9297">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="2606.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="2609.8848">emit(event: "pause") : boolean</text><ellipse cx="18" cy="2619.2051" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="27" y="2622.8398">emit(event: "readable") : boolean</text><ellipse cx="18" cy="2632.1602" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="27" y="2635.7949">emit(event: "resume") : boolean</text><ellipse cx="18" cy="2645.1152" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="2648.75">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="2658.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="2661.7051">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="2671.0254" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="478" x="27" y="2674.6602">from(iterable: Iterable&lt;any&gt; | AsyncIterable&lt;any&gt;, options: ReadableOptions) : Readable</text><ellipse cx="18" cy="2683.9805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="2687.6152">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="2696.9355" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="2700.5703">getMaxListeners() : number</text><ellipse cx="18" cy="2709.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="308" x="27" y="2713.5254">isDisturbed(stream: Readable | ReadableStream) : boolean</text><ellipse cx="18" cy="2722.8457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="2726.4805">isPaused() : boolean</text><ellipse cx="18" cy="2735.8008" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="2739.4355">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="2748.7559" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="2752.3906">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="2761.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="2765.3457">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="2774.666" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="2778.3008">off(eventName: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="2787.6211" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="27" y="2791.2559">on(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="2800.5762" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="27" y="2804.2109">on(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="2813.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="27" y="2817.166">on(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="2826.4863" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="27" y="2830.1211">on(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="2839.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="27" y="2843.0762">on(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="2852.3965" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="27" y="2856.0313">on(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="2865.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="27" y="2868.9863">on(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="2878.3066" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="27" y="2881.9414">on(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="2891.2617" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="2894.8965">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="2904.2168" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="27" y="2907.8516">once(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="2917.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="27" y="2920.8066">once(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="2930.127" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="27" y="2933.7617">once(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="2943.082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="27" y="2946.7168">once(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="2956.0371" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="27" y="2959.6719">once(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="2968.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="27" y="2972.627">once(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="2981.9473" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="27" y="2985.582">once(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="2994.9023" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="27" y="2998.5371">once(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="3007.8574" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="3011.4922">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="3020.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="3024.4473">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="3033.7676" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="27" y="3037.4023">pause() : Readable</text><ellipse cx="18" cy="3046.7227" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="3050.3574">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="3059.6777" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="27" y="3063.3125">prependListener(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="3072.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="3076.2676">prependListener(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="3085.5879" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="27" y="3089.2227">prependListener(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="3098.543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="27" y="3102.1777">prependListener(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="3111.498" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="27" y="3115.1328">prependListener(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="3124.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="27" y="3128.0879">prependListener(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="3137.4082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="27" y="3141.043">prependListener(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="3150.3633" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="27" y="3153.998">prependListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="3163.3184" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="27" y="3166.9531">prependOnceListener(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="3176.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="3179.9082">prependOnceListener(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="3189.2285" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="3192.8633">prependOnceListener(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="3202.1836" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="27" y="3205.8184">prependOnceListener(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="3215.1387" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="3218.7734">prependOnceListener(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="3228.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="27" y="3231.7285">prependOnceListener(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="3241.0488" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="27" y="3244.6836">prependOnceListener(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="3254.0039" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="27" y="3257.6387">prependOnceListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="3266.959" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="3270.5938">push(chunk: any, encoding: BufferEncoding) : boolean</text><ellipse cx="18" cy="3279.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="3283.5488">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="3292.8691" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="3296.5039">read(size: number) : any</text><ellipse cx="18" cy="3305.8242" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="27" y="3309.459">removeAllListeners(event: string | symbol) : Readable</text><ellipse cx="18" cy="3318.7793" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="3322.4141">removeListener(event: "close", listener: Function) : Readable</text><ellipse cx="18" cy="3331.7344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="3335.3691">removeListener(event: "data", listener: Function) : Readable</text><ellipse cx="18" cy="3344.6895" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="3348.3242">removeListener(event: "end", listener: Function) : Readable</text><ellipse cx="18" cy="3357.6445" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="3361.2793">removeListener(event: "error", listener: Function) : Readable</text><ellipse cx="18" cy="3370.5996" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="27" y="3374.2344">removeListener(event: "pause", listener: Function) : Readable</text><ellipse cx="18" cy="3383.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="336" x="27" y="3387.1895">removeListener(event: "readable", listener: Function) : Readable</text><ellipse cx="18" cy="3396.5098" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="330" x="27" y="3400.1445">removeListener(event: "resume", listener: Function) : Readable</text><ellipse cx="18" cy="3409.4648" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="27" y="3413.0996">removeListener(event: string | symbol, listener: Function) : Readable</text><ellipse cx="18" cy="3422.4199" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="27" y="3426.0547">resume() : Readable</text><ellipse cx="18" cy="3435.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="27" y="3439.0098">setEncoding(encoding: BufferEncoding) : Readable</text><ellipse cx="18" cy="3448.3301" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="27" y="3451.9648">setMaxListeners(n: number) : Readable</text><ellipse cx="18" cy="3461.2852" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="27" y="3464.9199">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="18" cy="3474.2402" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="27" y="3477.875">unpipe(destination: WritableStream) : Readable</text><ellipse cx="18" cy="3487.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="27" y="3490.8301">unshift(chunk: any, encoding: BufferEncoding) : void</text><ellipse cx="18" cy="3500.1504" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="27" y="3503.7852">wrap(stream: ReadableStream) : Readable</text><ellipse cx="18" cy="3513.1055" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="3516.7402">[asyncIterator]() : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="3526.0605" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="3529.6953">_construct(callback: Function) : void</text><ellipse cx="18" cy="3539.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="3542.6504">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="3551.9707" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="3555.6055">_read(size: number) : void</text><!--MD5=[93f77cf1cd71031e7728e23fe162cbe1]
class Writable--><rect codeLine="362" fill="#FEFECE" filter="url(#ftbb1b6fte9bx)" height="2379.9141" id="Writable" style="stroke:#A80036;stroke-width:1.5;" width="637" x="679" y="1039.5"/><ellipse cx="969.75" cy="1055.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M972.2231,1061.6431 Q971.6421,1061.9419 971.0029,1062.0913 Q970.3638,1062.2407 969.6582,1062.2407 Q967.1514,1062.2407 965.8315,1060.5889 Q964.5117,1058.937 964.5117,1055.8159 Q964.5117,1052.6865 965.8315,1051.0347 Q967.1514,1049.3828 969.6582,1049.3828 Q970.3638,1049.3828 971.0112,1049.5322 Q971.6587,1049.6816 972.2231,1049.9805 L972.2231,1052.7031 Q971.5923,1052.1221 970.9988,1051.8523 Q970.4053,1051.5825 969.7744,1051.5825 Q968.4297,1051.5825 967.7449,1052.6492 Q967.0601,1053.7158 967.0601,1055.8159 Q967.0601,1057.9077 967.7449,1058.9744 Q968.4297,1060.041 969.7744,1060.041 Q970.4053,1060.041 970.9988,1059.7712 Q971.5923,1059.5015 972.2231,1058.9204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="47" x="990.25" y="1060.0352">Writable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="680" x2="1315" y1="1071.5" y2="1071.5"/><ellipse cx="690" cy="1082.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="699" y="1086.1348">captureRejections : boolean</text><ellipse cx="690" cy="1095.4551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="699" y="1099.0898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="690" cy="1108.4102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="699" y="1112.0449">defaultMaxListeners : number</text><ellipse cx="690" cy="1121.3652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="699" y="1125">destroyed : boolean</text><ellipse cx="690" cy="1134.3203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="699" y="1137.9551">errorMonitor : typeof errorMonitor</text><ellipse cx="690" cy="1147.2754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="699" y="1150.9102">writable : boolean</text><ellipse cx="690" cy="1160.2305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="699" y="1163.8652">writableCorked : number</text><ellipse cx="690" cy="1173.1855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="699" y="1176.8203">writableEnded : boolean</text><ellipse cx="690" cy="1186.1406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699" y="1189.7754">writableFinished : boolean</text><ellipse cx="690" cy="1199.0957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="699" y="1202.7305">writableHighWaterMark : number</text><ellipse cx="690" cy="1212.0508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="699" y="1215.6855">writableLength : number</text><ellipse cx="690" cy="1225.0059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699" y="1228.6406">writableObjectMode : boolean</text><ellipse cx="690" cy="1237.9609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="699" y="1241.5957">captureRejections : boolean</text><ellipse cx="690" cy="1250.916" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="699" y="1254.5508">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="690" cy="1263.8711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="699" y="1267.5059">defaultMaxListeners : number</text><ellipse cx="690" cy="1276.8262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="699" y="1280.4609">destroyed : boolean</text><ellipse cx="690" cy="1289.7813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="699" y="1293.416">errorMonitor : typeof errorMonitor</text><ellipse cx="690" cy="1302.7363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="699" y="1306.3711">writable : boolean</text><ellipse cx="690" cy="1315.6914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="699" y="1319.3262">writableCorked : number</text><ellipse cx="690" cy="1328.6465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="699" y="1332.2813">writableEnded : boolean</text><ellipse cx="690" cy="1341.6016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="699" y="1345.2363">writableFinished : boolean</text><ellipse cx="690" cy="1354.5566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="699" y="1358.1914">writableHighWaterMark : number</text><ellipse cx="690" cy="1367.5117" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="699" y="1371.1465">writableLength : number</text><ellipse cx="690" cy="1380.4668" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="699" y="1384.1016">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="680" x2="1315" y1="1390.4219" y2="1390.4219"/><ellipse cx="690" cy="1401.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="699" y="1405.0566">addListener(event: "close", listener: Function) : Writable</text><ellipse cx="690" cy="1414.377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="699" y="1418.0117">addListener(event: "drain", listener: Function) : Writable</text><ellipse cx="690" cy="1427.332" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="699" y="1430.9668">addListener(event: "error", listener: Function) : Writable</text><ellipse cx="690" cy="1440.2871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="295" x="699" y="1443.9219">addListener(event: "finish", listener: Function) : Writable</text><ellipse cx="690" cy="1453.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699" y="1456.877">addListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="690" cy="1466.1973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="699" y="1469.832">addListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="690" cy="1479.1523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="699" y="1482.7871">addListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="690" cy="1492.1074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="699" y="1495.7422">cork() : void</text><ellipse cx="690" cy="1505.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="699" y="1508.6973">destroy(error: Error) : Writable</text><ellipse cx="690" cy="1518.0176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="699" y="1521.6523">emit(event: "close") : boolean</text><ellipse cx="690" cy="1530.9727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="699" y="1534.6074">emit(event: "drain") : boolean</text><ellipse cx="690" cy="1543.9277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="699" y="1547.5625">emit(event: "error", err: Error) : boolean</text><ellipse cx="690" cy="1556.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="699" y="1560.5176">emit(event: "finish") : boolean</text><ellipse cx="690" cy="1569.8379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="699" y="1573.4727">emit(event: "pipe", src: Readable) : boolean</text><ellipse cx="690" cy="1582.793" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="699" y="1586.4277">emit(event: "unpipe", src: Readable) : boolean</text><ellipse cx="690" cy="1595.748" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="699" y="1599.3828">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="690" cy="1608.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="699" y="1612.3379">end(cb: Function) : Writable</text><ellipse cx="690" cy="1621.6582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="699" y="1625.293">end(chunk: any, cb: Function) : Writable</text><ellipse cx="690" cy="1634.6133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="354" x="699" y="1638.248">end(chunk: any, encoding: BufferEncoding, cb: Function) : Writable</text><ellipse cx="690" cy="1647.5684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="699" y="1651.2031">eventNames() : (string | symbol)[]</text><ellipse cx="690" cy="1660.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="699" y="1664.1582">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="690" cy="1673.4785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="699" y="1677.1133">getMaxListeners() : number</text><ellipse cx="690" cy="1686.4336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="699" y="1690.0684">listenerCount(eventName: string | symbol) : number</text><ellipse cx="690" cy="1699.3887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="699" y="1703.0234">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="690" cy="1712.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="699" y="1715.9785">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="690" cy="1725.2988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="699" y="1728.9336">off(eventName: string | symbol, listener: Function) : Writable</text><ellipse cx="690" cy="1738.2539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="699" y="1741.8887">on(event: "close", listener: Function) : Writable</text><ellipse cx="690" cy="1751.209" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="699" y="1754.8438">on(event: "drain", listener: Function) : Writable</text><ellipse cx="690" cy="1764.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="699" y="1767.7988">on(event: "error", listener: Function) : Writable</text><ellipse cx="690" cy="1777.1191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699" y="1780.7539">on(event: "finish", listener: Function) : Writable</text><ellipse cx="690" cy="1790.0742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699" y="1793.709">on(event: "pipe", listener: Function) : Writable</text><ellipse cx="690" cy="1803.0293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="699" y="1806.6641">on(event: "unpipe", listener: Function) : Writable</text><ellipse cx="690" cy="1815.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="699" y="1819.6191">on(event: string | symbol, listener: Function) : Writable</text><ellipse cx="690" cy="1828.9395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="699" y="1832.5742">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690" cy="1841.8945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="699" y="1845.5293">once(event: "close", listener: Function) : Writable</text><ellipse cx="690" cy="1854.8496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="699" y="1858.4844">once(event: "drain", listener: Function) : Writable</text><ellipse cx="690" cy="1867.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="699" y="1871.4395">once(event: "error", listener: Function) : Writable</text><ellipse cx="690" cy="1880.7598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="699" y="1884.3945">once(event: "finish", listener: Function) : Writable</text><ellipse cx="690" cy="1893.7148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699" y="1897.3496">once(event: "pipe", listener: Function) : Writable</text><ellipse cx="690" cy="1906.6699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="699" y="1910.3047">once(event: "unpipe", listener: Function) : Writable</text><ellipse cx="690" cy="1919.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="699" y="1923.2598">once(event: string | symbol, listener: Function) : Writable</text><ellipse cx="690" cy="1932.5801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="699" y="1936.2148">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690" cy="1945.5352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="699" y="1949.1699">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690" cy="1958.4902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="699" y="1962.125">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="690" cy="1971.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="699" y="1975.0801">prependListener(event: "close", listener: Function) : Writable</text><ellipse cx="690" cy="1984.4004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="699" y="1988.0352">prependListener(event: "drain", listener: Function) : Writable</text><ellipse cx="690" cy="1997.3555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="699" y="2000.9902">prependListener(event: "error", listener: Function) : Writable</text><ellipse cx="690" cy="2010.3105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="699" y="2013.9453">prependListener(event: "finish", listener: Function) : Writable</text><ellipse cx="690" cy="2023.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699" y="2026.9004">prependListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="690" cy="2036.2207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="699" y="2039.8555">prependListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="690" cy="2049.1758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="699" y="2052.8105">prependListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="690" cy="2062.1309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="699" y="2065.7656">prependOnceListener(event: "close", listener: Function) : Writable</text><ellipse cx="690" cy="2075.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="699" y="2078.7207">prependOnceListener(event: "drain", listener: Function) : Writable</text><ellipse cx="690" cy="2088.041" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="699" y="2091.6758">prependOnceListener(event: "error", listener: Function) : Writable</text><ellipse cx="690" cy="2100.9961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="348" x="699" y="2104.6309">prependOnceListener(event: "finish", listener: Function) : Writable</text><ellipse cx="690" cy="2113.9512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699" y="2117.5859">prependOnceListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="690" cy="2126.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="699" y="2130.541">prependOnceListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="690" cy="2139.8613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="699" y="2143.4961">prependOnceListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="690" cy="2152.8164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="699" y="2156.4512">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="690" cy="2165.7715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="699" y="2169.4063">removeAllListeners(event: string | symbol) : Writable</text><ellipse cx="690" cy="2178.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699" y="2182.3613">removeListener(event: "close", listener: Function) : Writable</text><ellipse cx="690" cy="2191.6816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699" y="2195.3164">removeListener(event: "drain", listener: Function) : Writable</text><ellipse cx="690" cy="2204.6367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699" y="2208.2715">removeListener(event: "error", listener: Function) : Writable</text><ellipse cx="690" cy="2217.5918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="699" y="2221.2266">removeListener(event: "finish", listener: Function) : Writable</text><ellipse cx="690" cy="2230.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699" y="2234.1816">removeListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="690" cy="2243.502" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="699" y="2247.1367">removeListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="690" cy="2256.457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="699" y="2260.0918">removeListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="690" cy="2269.4121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="699" y="2273.0469">setDefaultEncoding(encoding: BufferEncoding) : Writable</text><ellipse cx="690" cy="2282.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="699" y="2286.002">setMaxListeners(n: number) : Writable</text><ellipse cx="690" cy="2295.3223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="699" y="2298.957">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="690" cy="2308.2773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="699" y="2311.9121">uncork() : void</text><ellipse cx="690" cy="2321.2324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699" y="2324.8672">write(chunk: any, callback: Function) : boolean</text><ellipse cx="690" cy="2334.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="699" y="2337.8223">write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean</text><ellipse cx="690" cy="2347.1426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="699" y="2350.7773">_construct(callback: Function) : void</text><ellipse cx="690" cy="2360.0977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="699" y="2363.7324">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="690" cy="2373.0527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="699" y="2376.6875">_final(callback: Function) : void</text><ellipse cx="690" cy="2386.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="699" y="2389.6426">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="690" cy="2398.9629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="699" y="2402.5977">_writev(chunks: Object[], callback: Function) : void</text><ellipse cx="690" cy="2411.918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="699" y="2415.5527">addListener(event: "close", listener: Function) : Writable</text><ellipse cx="690" cy="2424.873" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="699" y="2428.5078">addListener(event: "drain", listener: Function) : Writable</text><ellipse cx="690" cy="2437.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="699" y="2441.4629">addListener(event: "error", listener: Function) : Writable</text><ellipse cx="690" cy="2450.7832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="295" x="699" y="2454.418">addListener(event: "finish", listener: Function) : Writable</text><ellipse cx="690" cy="2463.7383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="699" y="2467.373">addListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="690" cy="2476.6934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="699" y="2480.3281">addListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="690" cy="2489.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="699" y="2493.2832">addListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="690" cy="2502.6035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="699" y="2506.2383">cork() : void</text><ellipse cx="690" cy="2515.5586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="699" y="2519.1934">destroy(error: Error) : Writable</text><ellipse cx="690" cy="2528.5137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="699" y="2532.1484">emit(event: "close") : boolean</text><ellipse cx="690" cy="2541.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="699" y="2545.1035">emit(event: "drain") : boolean</text><ellipse cx="690" cy="2554.4238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="699" y="2558.0586">emit(event: "error", err: Error) : boolean</text><ellipse cx="690" cy="2567.3789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="699" y="2571.0137">emit(event: "finish") : boolean</text><ellipse cx="690" cy="2580.334" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="699" y="2583.9688">emit(event: "pipe", src: Readable) : boolean</text><ellipse cx="690" cy="2593.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="699" y="2596.9238">emit(event: "unpipe", src: Readable) : boolean</text><ellipse cx="690" cy="2606.2441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="699" y="2609.8789">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="690" cy="2619.1992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="699" y="2622.834">end(cb: Function) : Writable</text><ellipse cx="690" cy="2632.1543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="699" y="2635.7891">end(chunk: any, cb: Function) : Writable</text><ellipse cx="690" cy="2645.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="354" x="699" y="2648.7441">end(chunk: any, encoding: BufferEncoding, cb: Function) : Writable</text><ellipse cx="690" cy="2658.0645" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="699" y="2661.6992">eventNames() : (string | symbol)[]</text><ellipse cx="690" cy="2671.0195" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="699" y="2674.6543">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="690" cy="2683.9746" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="699" y="2687.6094">getMaxListeners() : number</text><ellipse cx="690" cy="2696.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="699" y="2700.5645">listenerCount(eventName: string | symbol) : number</text><ellipse cx="690" cy="2709.8848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="699" y="2713.5195">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="690" cy="2722.8398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="699" y="2726.4746">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="690" cy="2735.7949" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="699" y="2739.4297">off(eventName: string | symbol, listener: Function) : Writable</text><ellipse cx="690" cy="2748.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="699" y="2752.3848">on(event: "close", listener: Function) : Writable</text><ellipse cx="690" cy="2761.7051" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="699" y="2765.3398">on(event: "drain", listener: Function) : Writable</text><ellipse cx="690" cy="2774.6602" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="699" y="2778.2949">on(event: "error", listener: Function) : Writable</text><ellipse cx="690" cy="2787.6152" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699" y="2791.25">on(event: "finish", listener: Function) : Writable</text><ellipse cx="690" cy="2800.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699" y="2804.2051">on(event: "pipe", listener: Function) : Writable</text><ellipse cx="690" cy="2813.5254" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="699" y="2817.1602">on(event: "unpipe", listener: Function) : Writable</text><ellipse cx="690" cy="2826.4805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="699" y="2830.1152">on(event: string | symbol, listener: Function) : Writable</text><ellipse cx="690" cy="2839.4355" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="699" y="2843.0703">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="690" cy="2852.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="699" y="2856.0254">once(event: "close", listener: Function) : Writable</text><ellipse cx="690" cy="2865.3457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="699" y="2868.9805">once(event: "drain", listener: Function) : Writable</text><ellipse cx="690" cy="2878.3008" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="699" y="2881.9355">once(event: "error", listener: Function) : Writable</text><ellipse cx="690" cy="2891.2559" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="699" y="2894.8906">once(event: "finish", listener: Function) : Writable</text><ellipse cx="690" cy="2904.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="699" y="2907.8457">once(event: "pipe", listener: Function) : Writable</text><ellipse cx="690" cy="2917.166" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="699" y="2920.8008">once(event: "unpipe", listener: Function) : Writable</text><ellipse cx="690" cy="2930.1211" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="699" y="2933.7559">once(event: string | symbol, listener: Function) : Writable</text><ellipse cx="690" cy="2943.0762" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="699" y="2946.7109">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690" cy="2956.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="699" y="2959.666">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="690" cy="2968.9863" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="699" y="2972.6211">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="690" cy="2981.9414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="699" y="2985.5762">prependListener(event: "close", listener: Function) : Writable</text><ellipse cx="690" cy="2994.8965" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="699" y="2998.5313">prependListener(event: "drain", listener: Function) : Writable</text><ellipse cx="690" cy="3007.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="699" y="3011.4863">prependListener(event: "error", listener: Function) : Writable</text><ellipse cx="690" cy="3020.8066" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="699" y="3024.4414">prependListener(event: "finish", listener: Function) : Writable</text><ellipse cx="690" cy="3033.7617" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699" y="3037.3965">prependListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="690" cy="3046.7168" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="699" y="3050.3516">prependListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="690" cy="3059.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="699" y="3063.3066">prependListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="690" cy="3072.627" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="699" y="3076.2617">prependOnceListener(event: "close", listener: Function) : Writable</text><ellipse cx="690" cy="3085.582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="699" y="3089.2168">prependOnceListener(event: "drain", listener: Function) : Writable</text><ellipse cx="690" cy="3098.5371" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="699" y="3102.1719">prependOnceListener(event: "error", listener: Function) : Writable</text><ellipse cx="690" cy="3111.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="348" x="699" y="3115.127">prependOnceListener(event: "finish", listener: Function) : Writable</text><ellipse cx="690" cy="3124.4473" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="699" y="3128.082">prependOnceListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="690" cy="3137.4023" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="699" y="3141.0371">prependOnceListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="690" cy="3150.3574" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="699" y="3153.9922">prependOnceListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="690" cy="3163.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="699" y="3166.9473">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="690" cy="3176.2676" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="699" y="3179.9023">removeAllListeners(event: string | symbol) : Writable</text><ellipse cx="690" cy="3189.2227" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699" y="3192.8574">removeListener(event: "close", listener: Function) : Writable</text><ellipse cx="690" cy="3202.1777" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699" y="3205.8125">removeListener(event: "drain", listener: Function) : Writable</text><ellipse cx="690" cy="3215.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="699" y="3218.7676">removeListener(event: "error", listener: Function) : Writable</text><ellipse cx="690" cy="3228.0879" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="699" y="3231.7227">removeListener(event: "finish", listener: Function) : Writable</text><ellipse cx="690" cy="3241.043" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="699" y="3244.6777">removeListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="690" cy="3253.998" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="699" y="3257.6328">removeListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="690" cy="3266.9531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="699" y="3270.5879">removeListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="690" cy="3279.9082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="699" y="3283.543">setDefaultEncoding(encoding: BufferEncoding) : Writable</text><ellipse cx="690" cy="3292.8633" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="699" y="3296.498">setMaxListeners(n: number) : Writable</text><ellipse cx="690" cy="3305.8184" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="699" y="3309.4531">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="690" cy="3318.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="699" y="3322.4082">uncork() : void</text><ellipse cx="690" cy="3331.7285" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="699" y="3335.3633">write(chunk: any, callback: Function) : boolean</text><ellipse cx="690" cy="3344.6836" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="699" y="3348.3184">write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean</text><ellipse cx="690" cy="3357.6387" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="699" y="3361.2734">_construct(callback: Function) : void</text><ellipse cx="690" cy="3370.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="699" y="3374.2285">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="690" cy="3383.5488" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="699" y="3387.1836">_final(callback: Function) : void</text><ellipse cx="690" cy="3396.5039" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="699" y="3400.1387">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="690" cy="3409.459" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="699" y="3413.0938">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[d85e27ef9cf3e1d32e4e649c554601a0]
reverse link internal to Stream--><path codeLine="60" d="M661.5,412.69 C661.5,425.76 661.5,438.86 661.5,451.83 " fill="none" id="internal-backto-Stream" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="654.5,412.23,661.5,392.23,668.5,412.23,654.5,412.23" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[94cb1445837fb446aa5f5819d9971c55]
reverse link Stream to Readable--><path codeLine="164" d="M607.59,857.04 C604.65,869.88 601.63,883.17 598.53,896.87 " fill="none" id="Stream-backto-Readable" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="600.84,855.16,612.13,837.23,614.48,858.29,600.84,855.16" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[94cb1445837fb446aa5f5819d9971c55]
reverse link Stream to Readable--><path codeLine="361" d="M626.14,857.04 C623.64,869.88 621.03,883.17 618.33,896.87 " fill="none" id="Stream-backto-Readable-1" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="619.3,855.53,629.99,837.23,633.05,858.2,619.3,855.53" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[c5033a169493e9fc7c976c9808c34910]
reverse link Stream to Writable--><path codeLine="257" d="M697.39,857.07 C707.92,910.85 720.29,972.55 733.9,1039.35 " fill="none" id="Stream-backto-Writable" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="690.48,858.21,693.52,837.23,704.22,855.52,690.48,858.21" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[c5033a169493e9fc7c976c9808c34910]
reverse link Stream to Writable--><path codeLine="454" d="M715.95,857.07 C728.3,910.85 742.17,972.55 756.95,1039.35 " fill="none" id="Stream-backto-Writable-1" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="709.05,858.3,711.38,837.23,722.69,855.15,709.05,858.3" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[a0ab89096031551dc96325cf3bf99abb]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "Stream" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +addListener(eventName: string | symbol, listener: Function) : Stream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Stream
    +on(eventName: string | symbol, listener: Function) : Stream
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(eventName: string | symbol, listener: Function) : Stream
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : Stream
    +prependOnceListener(eventName: string | symbol, listener: Function) : Stream
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Stream
    +removeListener(eventName: string | symbol, listener: Function) : Stream
    +setMaxListeners(n: number) : Stream
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
}
class "internal" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +addListener(eventName: string | symbol, listener: Function) : internal
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : internal
    +on(eventName: string | symbol, listener: Function) : internal
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(eventName: string | symbol, listener: Function) : internal
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : internal
    +prependOnceListener(eventName: string | symbol, listener: Function) : internal
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : internal
    +removeListener(eventName: string | symbol, listener: Function) : internal
    +setMaxListeners(n: number) : internal
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
}
"internal" <|- - "Stream"
class "Readable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Readable
    +addListener(event: "data", listener: Function) : Readable
    +addListener(event: "end", listener: Function) : Readable
    +addListener(event: "error", listener: Function) : Readable
    +addListener(event: "pause", listener: Function) : Readable
    +addListener(event: "readable", listener: Function) : Readable
    +addListener(event: "resume", listener: Function) : Readable
    +addListener(event: string | symbol, listener: Function) : Readable
    +destroy(error: Error) : Readable
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +from(iterable: Iterable<any> | AsyncIterable<any>, options: ReadableOptions) : Readable
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: Readable | ReadableStream) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Readable
    +on(event: "close", listener: Function) : Readable
    +on(event: "data", listener: Function) : Readable
    +on(event: "end", listener: Function) : Readable
    +on(event: "error", listener: Function) : Readable
    +on(event: "pause", listener: Function) : Readable
    +on(event: "readable", listener: Function) : Readable
    +on(event: "resume", listener: Function) : Readable
    +on(event: string | symbol, listener: Function) : Readable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Readable
    +once(event: "data", listener: Function) : Readable
    +once(event: "end", listener: Function) : Readable
    +once(event: "error", listener: Function) : Readable
    +once(event: "pause", listener: Function) : Readable
    +once(event: "readable", listener: Function) : Readable
    +once(event: "resume", listener: Function) : Readable
    +once(event: string | symbol, listener: Function) : Readable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Readable
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Readable
    +prependListener(event: "data", listener: Function) : Readable
    +prependListener(event: "end", listener: Function) : Readable
    +prependListener(event: "error", listener: Function) : Readable
    +prependListener(event: "pause", listener: Function) : Readable
    +prependListener(event: "readable", listener: Function) : Readable
    +prependListener(event: "resume", listener: Function) : Readable
    +prependListener(event: string | symbol, listener: Function) : Readable
    +prependOnceListener(event: "close", listener: Function) : Readable
    +prependOnceListener(event: "data", listener: Function) : Readable
    +prependOnceListener(event: "end", listener: Function) : Readable
    +prependOnceListener(event: "error", listener: Function) : Readable
    +prependOnceListener(event: "pause", listener: Function) : Readable
    +prependOnceListener(event: "readable", listener: Function) : Readable
    +prependOnceListener(event: "resume", listener: Function) : Readable
    +prependOnceListener(event: string | symbol, listener: Function) : Readable
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Readable
    +removeListener(event: "close", listener: Function) : Readable
    +removeListener(event: "data", listener: Function) : Readable
    +removeListener(event: "end", listener: Function) : Readable
    +removeListener(event: "error", listener: Function) : Readable
    +removeListener(event: "pause", listener: Function) : Readable
    +removeListener(event: "readable", listener: Function) : Readable
    +removeListener(event: "resume", listener: Function) : Readable
    +removeListener(event: string | symbol, listener: Function) : Readable
    +resume() : Readable
    +setEncoding(encoding: BufferEncoding) : Readable
    +setMaxListeners(n: number) : Readable
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +unpipe(destination: WritableStream) : Readable
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Readable
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_read(size: number) : void
}
"Stream" <|- - "Readable"
class "Writable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Writable
    +addListener(event: "drain", listener: Function) : Writable
    +addListener(event: "error", listener: Function) : Writable
    +addListener(event: "finish", listener: Function) : Writable
    +addListener(event: "pipe", listener: Function) : Writable
    +addListener(event: "unpipe", listener: Function) : Writable
    +addListener(event: string | symbol, listener: Function) : Writable
    +cork() : void
    +destroy(error: Error) : Writable
    +emit(event: "close") : boolean
    +emit(event: "drain") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "finish") : boolean
    +emit(event: "pipe", src: Readable) : boolean
    +emit(event: "unpipe", src: Readable) : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : Writable
    +end(chunk: any, cb: Function) : Writable
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : Writable
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Writable
    +on(event: "close", listener: Function) : Writable
    +on(event: "drain", listener: Function) : Writable
    +on(event: "error", listener: Function) : Writable
    +on(event: "finish", listener: Function) : Writable
    +on(event: "pipe", listener: Function) : Writable
    +on(event: "unpipe", listener: Function) : Writable
    +on(event: string | symbol, listener: Function) : Writable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Writable
    +once(event: "drain", listener: Function) : Writable
    +once(event: "error", listener: Function) : Writable
    +once(event: "finish", listener: Function) : Writable
    +once(event: "pipe", listener: Function) : Writable
    +once(event: "unpipe", listener: Function) : Writable
    +once(event: string | symbol, listener: Function) : Writable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Writable
    +prependListener(event: "drain", listener: Function) : Writable
    +prependListener(event: "error", listener: Function) : Writable
    +prependListener(event: "finish", listener: Function) : Writable
    +prependListener(event: "pipe", listener: Function) : Writable
    +prependListener(event: "unpipe", listener: Function) : Writable
    +prependListener(event: string | symbol, listener: Function) : Writable
    +prependOnceListener(event: "close", listener: Function) : Writable
    +prependOnceListener(event: "drain", listener: Function) : Writable
    +prependOnceListener(event: "error", listener: Function) : Writable
    +prependOnceListener(event: "finish", listener: Function) : Writable
    +prependOnceListener(event: "pipe", listener: Function) : Writable
    +prependOnceListener(event: "unpipe", listener: Function) : Writable
    +prependOnceListener(event: string | symbol, listener: Function) : Writable
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Writable
    +removeListener(event: "close", listener: Function) : Writable
    +removeListener(event: "drain", listener: Function) : Writable
    +removeListener(event: "error", listener: Function) : Writable
    +removeListener(event: "finish", listener: Function) : Writable
    +removeListener(event: "pipe", listener: Function) : Writable
    +removeListener(event: "unpipe", listener: Function) : Writable
    +removeListener(event: string | symbol, listener: Function) : Writable
    +setDefaultEncoding(encoding: BufferEncoding) : Writable
    +setMaxListeners(n: number) : Writable
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +uncork() : void
    +write(chunk: any, callback: Function) : boolean
    +write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Stream" <|- - "Writable"
class "Readable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +readable : boolean
    +readableAborted : boolean
    +readableDidRead : boolean
    +readableEncoding : null | BufferEncoding
    +readableEnded : boolean
    +readableFlowing : null | boolean
    +readableHighWaterMark : number
    +readableLength : number
    +readableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Readable
    +addListener(event: "data", listener: Function) : Readable
    +addListener(event: "end", listener: Function) : Readable
    +addListener(event: "error", listener: Function) : Readable
    +addListener(event: "pause", listener: Function) : Readable
    +addListener(event: "readable", listener: Function) : Readable
    +addListener(event: "resume", listener: Function) : Readable
    +addListener(event: string | symbol, listener: Function) : Readable
    +destroy(error: Error) : Readable
    +emit(event: "close") : boolean
    +emit(event: "data", chunk: any) : boolean
    +emit(event: "end") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "pause") : boolean
    +emit(event: "readable") : boolean
    +emit(event: "resume") : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +from(iterable: Iterable<any> | AsyncIterable<any>, options: ReadableOptions) : Readable
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {static} +isDisturbed(stream: Readable | ReadableStream) : boolean
    +isPaused() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Readable
    +on(event: "close", listener: Function) : Readable
    +on(event: "data", listener: Function) : Readable
    +on(event: "end", listener: Function) : Readable
    +on(event: "error", listener: Function) : Readable
    +on(event: "pause", listener: Function) : Readable
    +on(event: "readable", listener: Function) : Readable
    +on(event: "resume", listener: Function) : Readable
    +on(event: string | symbol, listener: Function) : Readable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Readable
    +once(event: "data", listener: Function) : Readable
    +once(event: "end", listener: Function) : Readable
    +once(event: "error", listener: Function) : Readable
    +once(event: "pause", listener: Function) : Readable
    +once(event: "readable", listener: Function) : Readable
    +once(event: "resume", listener: Function) : Readable
    +once(event: string | symbol, listener: Function) : Readable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pause() : Readable
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Readable
    +prependListener(event: "data", listener: Function) : Readable
    +prependListener(event: "end", listener: Function) : Readable
    +prependListener(event: "error", listener: Function) : Readable
    +prependListener(event: "pause", listener: Function) : Readable
    +prependListener(event: "readable", listener: Function) : Readable
    +prependListener(event: "resume", listener: Function) : Readable
    +prependListener(event: string | symbol, listener: Function) : Readable
    +prependOnceListener(event: "close", listener: Function) : Readable
    +prependOnceListener(event: "data", listener: Function) : Readable
    +prependOnceListener(event: "end", listener: Function) : Readable
    +prependOnceListener(event: "error", listener: Function) : Readable
    +prependOnceListener(event: "pause", listener: Function) : Readable
    +prependOnceListener(event: "readable", listener: Function) : Readable
    +prependOnceListener(event: "resume", listener: Function) : Readable
    +prependOnceListener(event: string | symbol, listener: Function) : Readable
    +push(chunk: any, encoding: BufferEncoding) : boolean
    +rawListeners(eventName: string | symbol) : Function[]
    +read(size: number) : any
    +removeAllListeners(event: string | symbol) : Readable
    +removeListener(event: "close", listener: Function) : Readable
    +removeListener(event: "data", listener: Function) : Readable
    +removeListener(event: "end", listener: Function) : Readable
    +removeListener(event: "error", listener: Function) : Readable
    +removeListener(event: "pause", listener: Function) : Readable
    +removeListener(event: "readable", listener: Function) : Readable
    +removeListener(event: "resume", listener: Function) : Readable
    +removeListener(event: string | symbol, listener: Function) : Readable
    +resume() : Readable
    +setEncoding(encoding: BufferEncoding) : Readable
    +setMaxListeners(n: number) : Readable
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +unpipe(destination: WritableStream) : Readable
    +unshift(chunk: any, encoding: BufferEncoding) : void
    +wrap(stream: ReadableStream) : Readable
    +[asyncIterator]() : AsyncIterableIterator<any>
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_read(size: number) : void
}
"Stream" <|- - "Readable"
class "Writable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Writable
    +addListener(event: "drain", listener: Function) : Writable
    +addListener(event: "error", listener: Function) : Writable
    +addListener(event: "finish", listener: Function) : Writable
    +addListener(event: "pipe", listener: Function) : Writable
    +addListener(event: "unpipe", listener: Function) : Writable
    +addListener(event: string | symbol, listener: Function) : Writable
    +cork() : void
    +destroy(error: Error) : Writable
    +emit(event: "close") : boolean
    +emit(event: "drain") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "finish") : boolean
    +emit(event: "pipe", src: Readable) : boolean
    +emit(event: "unpipe", src: Readable) : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : Writable
    +end(chunk: any, cb: Function) : Writable
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : Writable
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Writable
    +on(event: "close", listener: Function) : Writable
    +on(event: "drain", listener: Function) : Writable
    +on(event: "error", listener: Function) : Writable
    +on(event: "finish", listener: Function) : Writable
    +on(event: "pipe", listener: Function) : Writable
    +on(event: "unpipe", listener: Function) : Writable
    +on(event: string | symbol, listener: Function) : Writable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Writable
    +once(event: "drain", listener: Function) : Writable
    +once(event: "error", listener: Function) : Writable
    +once(event: "finish", listener: Function) : Writable
    +once(event: "pipe", listener: Function) : Writable
    +once(event: "unpipe", listener: Function) : Writable
    +once(event: string | symbol, listener: Function) : Writable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Writable
    +prependListener(event: "drain", listener: Function) : Writable
    +prependListener(event: "error", listener: Function) : Writable
    +prependListener(event: "finish", listener: Function) : Writable
    +prependListener(event: "pipe", listener: Function) : Writable
    +prependListener(event: "unpipe", listener: Function) : Writable
    +prependListener(event: string | symbol, listener: Function) : Writable
    +prependOnceListener(event: "close", listener: Function) : Writable
    +prependOnceListener(event: "drain", listener: Function) : Writable
    +prependOnceListener(event: "error", listener: Function) : Writable
    +prependOnceListener(event: "finish", listener: Function) : Writable
    +prependOnceListener(event: "pipe", listener: Function) : Writable
    +prependOnceListener(event: "unpipe", listener: Function) : Writable
    +prependOnceListener(event: string | symbol, listener: Function) : Writable
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Writable
    +removeListener(event: "close", listener: Function) : Writable
    +removeListener(event: "drain", listener: Function) : Writable
    +removeListener(event: "error", listener: Function) : Writable
    +removeListener(event: "finish", listener: Function) : Writable
    +removeListener(event: "pipe", listener: Function) : Writable
    +removeListener(event: "unpipe", listener: Function) : Writable
    +removeListener(event: string | symbol, listener: Function) : Writable
    +setDefaultEncoding(encoding: BufferEncoding) : Writable
    +setMaxListeners(n: number) : Writable
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +uncork() : void
    +write(chunk: any, callback: Function) : boolean
    +write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"Stream" <|- - "Writable"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 17:46:50 CET 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>