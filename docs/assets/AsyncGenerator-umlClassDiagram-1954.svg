<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="251px" preserveAspectRatio="none" style="width:518px;height:251px;background:#00000000;" version="1.1" viewBox="0 0 518 251" width="518px" zoomAndPan="magnify"><defs><filter height="300%" id="fyb2t68aqpcvn" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[bd9efdd8664e4c20e17e6c3f9b64fcf1]
class AsyncGenerator<T, TReturn, TNext>--><rect codeLine="4" fill="#FEFECE" filter="url(#fyb2t68aqpcvn)" height="91.8203" id="AsyncGenerator&lt;T, TReturn, TNext&gt;" style="stroke:#A80036;stroke-width:1.5;" width="497" x="7" y="146"/><ellipse cx="143.25" cy="162" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M139.6777,158.2651 L139.6777,156.1069 L147.0571,156.1069 L147.0571,158.2651 L144.5918,158.2651 L144.5918,166.3418 L147.0571,166.3418 L147.0571,168.5 L139.6777,168.5 L139.6777,166.3418 L142.1431,166.3418 L142.1431,158.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="216" x="163.75" y="166.5352">AsyncGenerator&lt;T, TReturn, TNext&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="503" y1="178" y2="178"/><ellipse cx="18" cy="189" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="27" y="192.6348">next(args: [] | [TNext]) : Promise&lt;IteratorResult&lt;T, TReturn&gt;&gt;</text><ellipse cx="18" cy="201.9551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="471" x="27" y="205.5898">return(value: TReturn | PromiseLike&lt;TReturn&gt;) : Promise&lt;IteratorResult&lt;T, TReturn&gt;&gt;</text><ellipse cx="18" cy="214.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="27" y="218.5449">throw(e: any) : Promise&lt;IteratorResult&lt;T, TReturn&gt;&gt;</text><ellipse cx="18" cy="227.8652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="295" x="27" y="231.5">[asyncIterator]() : AsyncGenerator&lt;T, TReturn, TNext&gt;</text><!--MD5=[e1140fe12cd3473659238168805cefce]
class AsyncIterator<T, TReturn, TNext>--><rect codeLine="10" fill="#FEFECE" filter="url(#fyb2t68aqpcvn)" height="78.8652" id="AsyncIterator&lt;T, TReturn, TNext&gt;" style="stroke:#A80036;stroke-width:1.5;" width="497" x="7" y="7"/><ellipse cx="151.25" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M147.6777,19.2651 L147.6777,17.1069 L155.0571,17.1069 L155.0571,19.2651 L152.5918,19.2651 L152.5918,27.3418 L155.0571,27.3418 L155.0571,29.5 L147.6777,29.5 L147.6777,27.3418 L150.1431,27.3418 L150.1431,19.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="200" x="171.75" y="27.5352">AsyncIterator&lt;T, TReturn, TNext&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="503" y1="39" y2="39"/><ellipse cx="18" cy="50" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="27" y="53.6348">next(args: [] | [TNext]) : Promise&lt;IteratorResult&lt;T, TReturn&gt;&gt;</text><ellipse cx="18" cy="62.9551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="471" x="27" y="66.5898">return(value: TReturn | PromiseLike&lt;TReturn&gt;) : Promise&lt;IteratorResult&lt;T, TReturn&gt;&gt;</text><ellipse cx="18" cy="75.9102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="27" y="79.5449">throw(e: any) : Promise&lt;IteratorResult&lt;T, TReturn&gt;&gt;</text><!--MD5=[a6c560134e2ddd6a2a5d0047c897cd69]
reverse link AsyncIterator<T, TReturn, TNext> to AsyncGenerator<T, TReturn, TNext>--><path codeLine="15" d="M255.5,106.75 C255.5,119.79 255.5,133.4 255.5,145.78 " fill="none" id="AsyncIterator&lt;T, TReturn, TNext&gt;-backto-AsyncGenerator&lt;T, TReturn, TNext&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="248.5,106.33,255.5,86.33,262.5,106.33,248.5,106.33" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[3ff380ae013481a2b38300fbcd477f42]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
interface "AsyncGenerator<T, TReturn, TNext>" {
    +next(args: [] | [TNext]) : Promise<IteratorResult<T, TReturn>>
    +return(value: TReturn | PromiseLike<TReturn>) : Promise<IteratorResult<T, TReturn>>
    +throw(e: any) : Promise<IteratorResult<T, TReturn>>
    +[asyncIterator]() : AsyncGenerator<T, TReturn, TNext>
}
interface "AsyncIterator<T, TReturn, TNext>" {
    +next(args: [] | [TNext]) : Promise<IteratorResult<T, TReturn>>
    +return(value: TReturn | PromiseLike<TReturn>) : Promise<IteratorResult<T, TReturn>>
    +throw(e: any) : Promise<IteratorResult<T, TReturn>>
}
"AsyncIterator<T, TReturn, TNext>" <|- - "AsyncGenerator<T, TReturn, TNext>"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>