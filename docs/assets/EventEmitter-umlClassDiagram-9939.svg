<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1031px" preserveAspectRatio="none" style="width:686px;height:1031px;background:#00000000;" version="1.1" viewBox="0 0 686 1031" width="686px" zoomAndPan="magnify"><defs><filter height="300%" id="f3t1rcu5ad3es" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[f00238d7d3b345818710a28959a0e6a6]
class EventEmitter--><rect codeLine="31" fill="#FEFECE" filter="url(#f3t1rcu5ad3es)" height="566.2031" id="EventEmitter" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="7"/><ellipse cx="285.25" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M281.6777,19.2651 L281.6777,17.1069 L289.0571,17.1069 L289.0571,19.2651 L286.5918,19.2651 L286.5918,27.3418 L289.0571,27.3418 L289.0571,29.5 L281.6777,29.5 L281.6777,27.3418 L284.1431,27.3418 L284.1431,19.2651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="72" x="305.75" y="27.5352">EventEmitter</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="39" y2="39"/><ellipse cx="18" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="53.6348">captureRejections : boolean</text><ellipse cx="18" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="66.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="75.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="79.5449">defaultMaxListeners : number</text><ellipse cx="18" cy="88.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="92.5">errorMonitor : typeof errorMonitor</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="98.8203" y2="98.8203"/><ellipse cx="18" cy="109.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="27" y="113.4551">addListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="122.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="126.4102">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="135.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="139.3652">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="148.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="152.3203">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="161.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="165.2754">getMaxListeners() : number</text><ellipse cx="18" cy="174.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="178.2305">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="187.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="191.1855">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="200.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="204.1406">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="213.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="27" y="217.0957">off(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="226.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="230.0508">on(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="239.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="243.0059">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="252.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="255.9609">once(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="265.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="268.916">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="278.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="281.8711">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="291.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="27" y="294.8262">prependListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="304.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="445" x="27" y="307.7813">prependOnceListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="317.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="320.7363">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="27" y="333.6914">removeAllListeners(event: string | symbol) : EventEmitter</text><ellipse cx="18" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="27" y="346.6465">removeListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="27" y="359.6016">setMaxListeners(n: number) : EventEmitter</text><ellipse cx="18" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="27" y="372.5566">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="18" cy="381.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="27" y="385.5117">addListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="394.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="398.4668">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="407.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="411.4219">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="420.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="424.377">getMaxListeners() : number</text><ellipse cx="18" cy="433.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="437.332">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="446.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="450.2871">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="459.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="27" y="463.2422">off(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="472.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="476.1973">on(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="485.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="489.1523">once(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="498.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="27" y="502.1074">prependListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="511.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="445" x="27" y="515.0625">prependOnceListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="524.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="528.0176">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="537.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="27" y="540.9727">removeAllListeners(event: string | symbol) : EventEmitter</text><ellipse cx="18" cy="550.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="27" y="553.9277">removeListener(eventName: string | symbol, listener: Function) : EventEmitter</text><ellipse cx="18" cy="563.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="27" y="566.8828">setMaxListeners(n: number) : EventEmitter</text><!--MD5=[bf3e9baaddb7bbb8eafc257981afc540]
class internal--><rect codeLine="49" fill="#FEFECE" filter="url(#f3t1rcu5ad3es)" height="384.832" id="internal" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="633"/><ellipse cx="299.75" cy="649" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M302.2231,655.1431 Q301.6421,655.4419 301.0029,655.5913 Q300.3638,655.7407 299.6582,655.7407 Q297.1514,655.7407 295.8315,654.0889 Q294.5117,652.437 294.5117,649.3159 Q294.5117,646.1865 295.8315,644.5347 Q297.1514,642.8828 299.6582,642.8828 Q300.3638,642.8828 301.0112,643.0322 Q301.6587,643.1816 302.2231,643.4805 L302.2231,646.2031 Q301.5923,645.6221 300.9988,645.3523 Q300.4053,645.0825 299.7744,645.0825 Q298.4297,645.0825 297.7449,646.1492 Q297.0601,647.2158 297.0601,649.3159 Q297.0601,651.4077 297.7449,652.4744 Q298.4297,653.541 299.7744,653.541 Q300.4053,653.541 300.9988,653.2712 Q301.5923,653.0015 302.2231,652.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="43" x="320.25" y="653.5352">internal</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="665" y2="665"/><ellipse cx="18" cy="676" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="679.6348">captureRejections : boolean</text><ellipse cx="18" cy="688.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="692.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="701.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="705.5449">defaultMaxListeners : number</text><ellipse cx="18" cy="714.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="718.5">errorMonitor : typeof errorMonitor</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="724.8203" y2="724.8203"/><ellipse cx="18" cy="735.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="739.4551">addListener(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="18" cy="748.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="752.4102">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="761.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="765.3652">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="774.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="778.3203">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="787.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="791.2754">getMaxListeners() : number</text><ellipse cx="18" cy="800.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="804.2305">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="813.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="817.1855">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="826.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="830.1406">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="839.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="843.0957">off(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="18" cy="852.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="27" y="856.0508">on(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="18" cy="865.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="869.0059">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="878.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="27" y="881.9609">once(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="18" cy="891.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="894.916">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="904.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="907.8711">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="917.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="920.8262">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="930.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="27" y="933.7813">prependListener(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="18" cy="943.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="419" x="27" y="946.7363">prependOnceListener(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="18" cy="956.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="959.6914">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="969.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="27" y="972.6465">removeAllListeners(event: string | symbol) : internal</text><ellipse cx="18" cy="981.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="27" y="985.6016">removeListener(eventName: string | symbol, listener: Function) : internal</text><ellipse cx="18" cy="994.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="27" y="998.5566">setMaxListeners(n: number) : internal</text><ellipse cx="18" cy="1007.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="27" y="1011.5117">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><!--MD5=[4345fef6b526639e90ac916bded00af7]
reverse link EventEmitter to EventEmitter--><path codeLine="48" d="M658.76,231.6 C671.6,246.87 679,266.34 679,290 C679,321.55 665.84,345.64 644.18,362.28 " fill="none" id="EventEmitter-backto-EventEmitter" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="653.84,236.58,644.18,217.72,663.49,226.44,653.84,236.58" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[3d470edd04d10a06952846cd9664e40a]
reverse link EventEmitter to internal--><path codeLine="77" d="M325.5,593.59 C325.5,606.87 325.5,620.02 325.5,632.92 " fill="none" id="EventEmitter-backto-internal" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="318.5,593.37,325.5,573.37,332.5,593.37,318.5,593.37" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[587f0bc6f470a9a270bcc9f0254f1953]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "EventEmitter" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +addListener(eventName: string | symbol, listener: Function) : EventEmitter
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : EventEmitter
    +on(eventName: string | symbol, listener: Function) : EventEmitter
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(eventName: string | symbol, listener: Function) : EventEmitter
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : EventEmitter
    +prependOnceListener(eventName: string | symbol, listener: Function) : EventEmitter
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : EventEmitter
    +removeListener(eventName: string | symbol, listener: Function) : EventEmitter
    +setMaxListeners(n: number) : EventEmitter
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
}
interface "EventEmitter" {
    +addListener(eventName: string | symbol, listener: Function) : EventEmitter
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : EventEmitter
    +on(eventName: string | symbol, listener: Function) : EventEmitter
    +once(eventName: string | symbol, listener: Function) : EventEmitter
    +prependListener(eventName: string | symbol, listener: Function) : EventEmitter
    +prependOnceListener(eventName: string | symbol, listener: Function) : EventEmitter
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : EventEmitter
    +removeListener(eventName: string | symbol, listener: Function) : EventEmitter
    +setMaxListeners(n: number) : EventEmitter
}
"EventEmitter" <|- - "EventEmitter"
class "internal" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +addListener(eventName: string | symbol, listener: Function) : internal
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : internal
    +on(eventName: string | symbol, listener: Function) : internal
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(eventName: string | symbol, listener: Function) : internal
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : internal
    +prependOnceListener(eventName: string | symbol, listener: Function) : internal
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : internal
    +removeListener(eventName: string | symbol, listener: Function) : internal
    +setMaxListeners(n: number) : internal
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
}
"EventEmitter" <|- - "internal"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 17:46:50 CET 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>