<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1679px" preserveAspectRatio="none" style="width:1177px;height:1679px;background:#00000000;" version="1.1" viewBox="0 0 1177 1679" width="1177px" zoomAndPan="magnify"><defs><filter height="300%" id="f1gljqja3299px" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[93f77cf1cd71031e7728e23fe162cbe1]
class Writable--><rect codeLine="4" fill="#FEFECE" filter="url(#f1gljqja3299px)" height="1213.957" id="Writable" style="stroke:#A80036;stroke-width:1.5;" width="637" x="305" y="452"/><ellipse cx="595.75" cy="468" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M598.2231,474.1431 Q597.6421,474.4419 597.0029,474.5913 Q596.3638,474.7407 595.6582,474.7407 Q593.1514,474.7407 591.8315,473.0889 Q590.5117,471.437 590.5117,468.3159 Q590.5117,465.1865 591.8315,463.5347 Q593.1514,461.8828 595.6582,461.8828 Q596.3638,461.8828 597.0112,462.0322 Q597.6587,462.1816 598.2231,462.4805 L598.2231,465.2031 Q597.5923,464.6221 596.9988,464.3523 Q596.4053,464.0825 595.7744,464.0825 Q594.4297,464.0825 593.7449,465.1492 Q593.0601,466.2158 593.0601,468.3159 Q593.0601,470.4077 593.7449,471.4744 Q594.4297,472.541 595.7744,472.541 Q596.4053,472.541 596.9988,472.2712 Q597.5923,472.0015 598.2231,471.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="47" x="616.25" y="472.5352">Writable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="306" x2="941" y1="484" y2="484"/><ellipse cx="316" cy="495" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="325" y="498.6348">captureRejections : boolean</text><ellipse cx="316" cy="507.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="325" y="511.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="316" cy="520.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="325" y="524.5449">defaultMaxListeners : number</text><ellipse cx="316" cy="533.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="325" y="537.5">destroyed : boolean</text><ellipse cx="316" cy="546.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="325" y="550.4551">errorMonitor : typeof errorMonitor</text><ellipse cx="316" cy="559.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="325" y="563.4102">writable : boolean</text><ellipse cx="316" cy="572.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="325" y="576.3652">writableCorked : number</text><ellipse cx="316" cy="585.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="325" y="589.3203">writableEnded : boolean</text><ellipse cx="316" cy="598.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="325" y="602.2754">writableFinished : boolean</text><ellipse cx="316" cy="611.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="325" y="615.2305">writableHighWaterMark : number</text><ellipse cx="316" cy="624.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="325" y="628.1855">writableLength : number</text><ellipse cx="316" cy="637.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="325" y="641.1406">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="306" x2="941" y1="647.4609" y2="647.4609"/><ellipse cx="316" cy="658.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="325" y="662.0957">addListener(event: "close", listener: Function) : Writable</text><ellipse cx="316" cy="671.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="325" y="675.0508">addListener(event: "drain", listener: Function) : Writable</text><ellipse cx="316" cy="684.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="325" y="688.0059">addListener(event: "error", listener: Function) : Writable</text><ellipse cx="316" cy="697.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="295" x="325" y="700.9609">addListener(event: "finish", listener: Function) : Writable</text><ellipse cx="316" cy="710.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="325" y="713.916">addListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="316" cy="723.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="325" y="726.8711">addListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="316" cy="736.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="325" y="739.8262">addListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="316" cy="749.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="325" y="752.7813">cork() : void</text><ellipse cx="316" cy="762.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="325" y="765.7363">destroy(error: Error) : Writable</text><ellipse cx="316" cy="775.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="325" y="778.6914">emit(event: "close") : boolean</text><ellipse cx="316" cy="788.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="325" y="791.6465">emit(event: "drain") : boolean</text><ellipse cx="316" cy="800.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="325" y="804.6016">emit(event: "error", err: Error) : boolean</text><ellipse cx="316" cy="813.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="325" y="817.5566">emit(event: "finish") : boolean</text><ellipse cx="316" cy="826.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="325" y="830.5117">emit(event: "pipe", src: Readable) : boolean</text><ellipse cx="316" cy="839.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="325" y="843.4668">emit(event: "unpipe", src: Readable) : boolean</text><ellipse cx="316" cy="852.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="325" y="856.4219">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="316" cy="865.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="325" y="869.377">end(cb: Function) : Writable</text><ellipse cx="316" cy="878.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="325" y="882.332">end(chunk: any, cb: Function) : Writable</text><ellipse cx="316" cy="891.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="354" x="325" y="895.2871">end(chunk: any, encoding: BufferEncoding, cb: Function) : Writable</text><ellipse cx="316" cy="904.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="325" y="908.2422">eventNames() : (string | symbol)[]</text><ellipse cx="316" cy="917.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="325" y="921.1973">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="316" cy="930.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="325" y="934.1523">getMaxListeners() : number</text><ellipse cx="316" cy="943.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="325" y="947.1074">listenerCount(eventName: string | symbol) : number</text><ellipse cx="316" cy="956.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="325" y="960.0625">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="316" cy="969.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="325" y="973.0176">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="316" cy="982.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="325" y="985.9727">off(eventName: string | symbol, listener: Function) : Writable</text><ellipse cx="316" cy="995.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="325" y="998.9277">on(event: "close", listener: Function) : Writable</text><ellipse cx="316" cy="1008.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="325" y="1011.8828">on(event: "drain", listener: Function) : Writable</text><ellipse cx="316" cy="1021.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="325" y="1024.8379">on(event: "error", listener: Function) : Writable</text><ellipse cx="316" cy="1034.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="325" y="1037.793">on(event: "finish", listener: Function) : Writable</text><ellipse cx="316" cy="1047.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="325" y="1050.748">on(event: "pipe", listener: Function) : Writable</text><ellipse cx="316" cy="1060.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="325" y="1063.7031">on(event: "unpipe", listener: Function) : Writable</text><ellipse cx="316" cy="1073.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="325" y="1076.6582">on(event: string | symbol, listener: Function) : Writable</text><ellipse cx="316" cy="1085.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="325" y="1089.6133">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="316" cy="1098.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="325" y="1102.5684">once(event: "close", listener: Function) : Writable</text><ellipse cx="316" cy="1111.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="325" y="1115.5234">once(event: "drain", listener: Function) : Writable</text><ellipse cx="316" cy="1124.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="325" y="1128.4785">once(event: "error", listener: Function) : Writable</text><ellipse cx="316" cy="1137.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="325" y="1141.4336">once(event: "finish", listener: Function) : Writable</text><ellipse cx="316" cy="1150.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="325" y="1154.3887">once(event: "pipe", listener: Function) : Writable</text><ellipse cx="316" cy="1163.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="325" y="1167.3438">once(event: "unpipe", listener: Function) : Writable</text><ellipse cx="316" cy="1176.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="325" y="1180.2988">once(event: string | symbol, listener: Function) : Writable</text><ellipse cx="316" cy="1189.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="325" y="1193.2539">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="316" cy="1202.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="325" y="1206.209">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="316" cy="1215.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="325" y="1219.1641">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="316" cy="1228.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="325" y="1232.1191">prependListener(event: "close", listener: Function) : Writable</text><ellipse cx="316" cy="1241.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="325" y="1245.0742">prependListener(event: "drain", listener: Function) : Writable</text><ellipse cx="316" cy="1254.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="325" y="1258.0293">prependListener(event: "error", listener: Function) : Writable</text><ellipse cx="316" cy="1267.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="325" y="1270.9844">prependListener(event: "finish", listener: Function) : Writable</text><ellipse cx="316" cy="1280.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="325" y="1283.9395">prependListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="316" cy="1293.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="325" y="1296.8945">prependListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="316" cy="1306.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="325" y="1309.8496">prependListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="316" cy="1319.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="325" y="1322.8047">prependOnceListener(event: "close", listener: Function) : Writable</text><ellipse cx="316" cy="1332.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="325" y="1335.7598">prependOnceListener(event: "drain", listener: Function) : Writable</text><ellipse cx="316" cy="1345.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="325" y="1348.7148">prependOnceListener(event: "error", listener: Function) : Writable</text><ellipse cx="316" cy="1358.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="348" x="325" y="1361.6699">prependOnceListener(event: "finish", listener: Function) : Writable</text><ellipse cx="316" cy="1370.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="325" y="1374.625">prependOnceListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="316" cy="1383.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="325" y="1387.5801">prependOnceListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="316" cy="1396.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="391" x="325" y="1400.5352">prependOnceListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="316" cy="1409.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="325" y="1413.4902">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="316" cy="1422.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="325" y="1426.4453">removeAllListeners(event: string | symbol) : Writable</text><ellipse cx="316" cy="1435.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="325" y="1439.4004">removeListener(event: "close", listener: Function) : Writable</text><ellipse cx="316" cy="1448.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="325" y="1452.3555">removeListener(event: "drain", listener: Function) : Writable</text><ellipse cx="316" cy="1461.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="325" y="1465.3105">removeListener(event: "error", listener: Function) : Writable</text><ellipse cx="316" cy="1474.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="325" y="1478.2656">removeListener(event: "finish", listener: Function) : Writable</text><ellipse cx="316" cy="1487.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="325" y="1491.2207">removeListener(event: "pipe", listener: Function) : Writable</text><ellipse cx="316" cy="1500.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="325" y="1504.1758">removeListener(event: "unpipe", listener: Function) : Writable</text><ellipse cx="316" cy="1513.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="325" y="1517.1309">removeListener(event: string | symbol, listener: Function) : Writable</text><ellipse cx="316" cy="1526.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="325" y="1530.0859">setDefaultEncoding(encoding: BufferEncoding) : Writable</text><ellipse cx="316" cy="1539.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="325" y="1543.041">setMaxListeners(n: number) : Writable</text><ellipse cx="316" cy="1552.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="325" y="1555.9961">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="316" cy="1565.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="325" y="1568.9512">uncork() : void</text><ellipse cx="316" cy="1578.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="325" y="1581.9063">write(chunk: any, callback: Function) : boolean</text><ellipse cx="316" cy="1591.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="325" y="1594.8613">write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean</text><ellipse cx="316" cy="1604.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="325" y="1607.8164">_construct(callback: Function) : void</text><ellipse cx="316" cy="1617.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="325" y="1620.7715">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="316" cy="1630.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="325" y="1633.7266">_final(callback: Function) : void</text><ellipse cx="316" cy="1643.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="325" y="1646.6816">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="316" cy="1656.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="325" y="1659.6367">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[d71ee11ede0e83c966e8ef97d9465fe6]
class Stream--><rect codeLine="96" fill="#FEFECE" filter="url(#f1gljqja3299px)" height="384.832" id="Stream" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="7"/><ellipse cx="301.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M303.7231,29.1431 Q303.1421,29.4419 302.5029,29.5913 Q301.8638,29.7407 301.1582,29.7407 Q298.6514,29.7407 297.3315,28.0889 Q296.0117,26.437 296.0117,23.3159 Q296.0117,20.1865 297.3315,18.5347 Q298.6514,16.8828 301.1582,16.8828 Q301.8638,16.8828 302.5112,17.0322 Q303.1587,17.1816 303.7231,17.4805 L303.7231,20.2031 Q303.0923,19.6221 302.4988,19.3523 Q301.9053,19.0825 301.2744,19.0825 Q299.9297,19.0825 299.2449,20.1492 Q298.5601,21.2158 298.5601,23.3159 Q298.5601,25.4077 299.2449,26.4744 Q299.9297,27.541 301.2744,27.541 Q301.9053,27.541 302.4988,27.2712 Q303.0923,27.0015 303.7231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="40" x="321.75" y="27.5352">Stream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="39" y2="39"/><ellipse cx="18" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="53.6348">captureRejections : boolean</text><ellipse cx="18" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="66.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="75.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="79.5449">defaultMaxListeners : number</text><ellipse cx="18" cy="88.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="92.5">errorMonitor : typeof errorMonitor</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="98.8203" y2="98.8203"/><ellipse cx="18" cy="109.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="27" y="113.4551">addListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="122.7754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="126.4102">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="135.7305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="139.3652">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="148.6855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="152.3203">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="161.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="165.2754">getMaxListeners() : number</text><ellipse cx="18" cy="174.5957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="178.2305">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="187.5508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="191.1855">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="200.5059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="204.1406">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="213.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="314" x="27" y="217.0957">off(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="226.416" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="27" y="230.0508">on(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="239.3711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="243.0059">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="252.3262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="255.9609">once(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="265.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="268.916">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="278.2363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="281.8711">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="291.1914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="294.8262">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="304.1465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="387" x="27" y="307.7813">prependListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="317.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="27" y="320.7363">prependOnceListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="333.6914">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="27" y="346.6465">removeAllListeners(event: string | symbol) : Stream</text><ellipse cx="18" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="382" x="27" y="359.6016">removeListener(eventName: string | symbol, listener: Function) : Stream</text><ellipse cx="18" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="27" y="372.5566">setMaxListeners(n: number) : Stream</text><ellipse cx="18" cy="381.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="27" y="385.5117">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><!--MD5=[75295b061bf85356a312df551dda4666]
class WritableStream--><rect codeLine="125" fill="#FEFECE" filter="url(#f1gljqja3299px)" height="320.0566" id="WritableStream" style="stroke:#A80036;stroke-width:1.5;" width="484" x="679.5" y="39.5"/><ellipse cx="873.75" cy="55.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M870.1777,51.7651 L870.1777,49.6069 L877.5571,49.6069 L877.5571,51.7651 L875.0918,51.7651 L875.0918,59.8418 L877.5571,59.8418 L877.5571,62 L870.1777,62 L870.1777,59.8418 L872.6431,59.8418 L872.6431,51.7651 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="87" x="894.25" y="60.0352">WritableStream</text><line style="stroke:#A80036;stroke-width:1.5;" x1="680.5" x2="1162.5" y1="71.5" y2="71.5"/><ellipse cx="690.5" cy="82.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="699.5" y="86.1348">writable : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="680.5" x2="1162.5" y1="92.4551" y2="92.4551"/><ellipse cx="690.5" cy="103.4551" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="699.5" y="107.0898">addListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="690.5" cy="116.4102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="699.5" y="120.0449">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="690.5" cy="129.3652" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="699.5" y="133">end(cb: Function) : WritableStream</text><ellipse cx="690.5" cy="142.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="699.5" y="145.9551">end(data: string | Uint8Array, cb: Function) : WritableStream</text><ellipse cx="690.5" cy="155.2754" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="699.5" y="158.9102">end(str: string, encoding: BufferEncoding, cb: Function) : WritableStream</text><ellipse cx="690.5" cy="168.2305" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="699.5" y="171.8652">eventNames() : (string | symbol)[]</text><ellipse cx="690.5" cy="181.1855" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="699.5" y="184.8203">getMaxListeners() : number</text><ellipse cx="690.5" cy="194.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="699.5" y="197.7754">listenerCount(eventName: string | symbol) : number</text><ellipse cx="690.5" cy="207.0957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="699.5" y="210.7305">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="220.0508" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="699.5" y="223.6855">off(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="690.5" cy="233.0059" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="699.5" y="236.6406">on(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="690.5" cy="245.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="699.5" y="249.5957">once(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="690.5" cy="258.916" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="430" x="699.5" y="262.5508">prependListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="690.5" cy="271.8711" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="458" x="699.5" y="275.5059">prependOnceListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="690.5" cy="284.8262" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="699.5" y="288.4609">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="690.5" cy="297.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="699.5" y="301.416">removeAllListeners(event: string | symbol) : WritableStream</text><ellipse cx="690.5" cy="310.7363" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="425" x="699.5" y="314.3711">removeListener(eventName: string | symbol, listener: Function) : WritableStream</text><ellipse cx="690.5" cy="323.6914" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="699.5" y="327.3262">setMaxListeners(n: number) : WritableStream</text><ellipse cx="690.5" cy="336.6465" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="699.5" y="340.2813">write(buffer: string | Uint8Array, cb: Function) : boolean</text><ellipse cx="690.5" cy="349.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="699.5" y="353.2363">write(str: string, encoding: BufferEncoding, cb: Function) : boolean</text><!--MD5=[c5033a169493e9fc7c976c9808c34910]
reverse link Stream to Writable--><path codeLine="124" d="M398.7,411.13 C403.27,424.28 407.97,437.81 412.77,451.63 " fill="none" id="Stream-backto-Writable" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="392.05,413.33,392.1,392.14,405.28,408.73,392.05,413.33" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[722c79936b051f4d7c91a0b945b9cd18]
reverse link WritableStream to Writable--><path codeLine="148" d="M859.62,378.57 C851.59,401.67 843.04,426.27 834.14,451.89 " fill="none" id="WritableStream-backto-Writable" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="853.06,376.12,866.23,359.53,866.28,380.72,853.06,376.12" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[90c37ed0c7b6f03341a257964d43dd4a]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "Writable" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : Writable
    +addListener(event: "drain", listener: Function) : Writable
    +addListener(event: "error", listener: Function) : Writable
    +addListener(event: "finish", listener: Function) : Writable
    +addListener(event: "pipe", listener: Function) : Writable
    +addListener(event: "unpipe", listener: Function) : Writable
    +addListener(event: string | symbol, listener: Function) : Writable
    +cork() : void
    +destroy(error: Error) : Writable
    +emit(event: "close") : boolean
    +emit(event: "drain") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "finish") : boolean
    +emit(event: "pipe", src: Readable) : boolean
    +emit(event: "unpipe", src: Readable) : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : Writable
    +end(chunk: any, cb: Function) : Writable
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : Writable
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Writable
    +on(event: "close", listener: Function) : Writable
    +on(event: "drain", listener: Function) : Writable
    +on(event: "error", listener: Function) : Writable
    +on(event: "finish", listener: Function) : Writable
    +on(event: "pipe", listener: Function) : Writable
    +on(event: "unpipe", listener: Function) : Writable
    +on(event: string | symbol, listener: Function) : Writable
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : Writable
    +once(event: "drain", listener: Function) : Writable
    +once(event: "error", listener: Function) : Writable
    +once(event: "finish", listener: Function) : Writable
    +once(event: "pipe", listener: Function) : Writable
    +once(event: "unpipe", listener: Function) : Writable
    +once(event: string | symbol, listener: Function) : Writable
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : Writable
    +prependListener(event: "drain", listener: Function) : Writable
    +prependListener(event: "error", listener: Function) : Writable
    +prependListener(event: "finish", listener: Function) : Writable
    +prependListener(event: "pipe", listener: Function) : Writable
    +prependListener(event: "unpipe", listener: Function) : Writable
    +prependListener(event: string | symbol, listener: Function) : Writable
    +prependOnceListener(event: "close", listener: Function) : Writable
    +prependOnceListener(event: "drain", listener: Function) : Writable
    +prependOnceListener(event: "error", listener: Function) : Writable
    +prependOnceListener(event: "finish", listener: Function) : Writable
    +prependOnceListener(event: "pipe", listener: Function) : Writable
    +prependOnceListener(event: "unpipe", listener: Function) : Writable
    +prependOnceListener(event: string | symbol, listener: Function) : Writable
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Writable
    +removeListener(event: "close", listener: Function) : Writable
    +removeListener(event: "drain", listener: Function) : Writable
    +removeListener(event: "error", listener: Function) : Writable
    +removeListener(event: "finish", listener: Function) : Writable
    +removeListener(event: "pipe", listener: Function) : Writable
    +removeListener(event: "unpipe", listener: Function) : Writable
    +removeListener(event: string | symbol, listener: Function) : Writable
    +setDefaultEncoding(encoding: BufferEncoding) : Writable
    +setMaxListeners(n: number) : Writable
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +uncork() : void
    +write(chunk: any, callback: Function) : boolean
    +write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
class "Stream" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +addListener(eventName: string | symbol, listener: Function) : Stream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Stream
    +on(eventName: string | symbol, listener: Function) : Stream
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(eventName: string | symbol, listener: Function) : Stream
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(eventName: string | symbol, listener: Function) : Stream
    +prependOnceListener(eventName: string | symbol, listener: Function) : Stream
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Stream
    +removeListener(eventName: string | symbol, listener: Function) : Stream
    +setMaxListeners(n: number) : Stream
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
}
"Stream" <|- - "Writable"
interface "WritableStream" {
    +writable : boolean
    +addListener(eventName: string | symbol, listener: Function) : WritableStream
    +emit(eventName: string | symbol, args: any[]) : boolean
    +end(cb: Function) : WritableStream
    +end(data: string | Uint8Array, cb: Function) : WritableStream
    +end(str: string, encoding: BufferEncoding, cb: Function) : WritableStream
    +eventNames() : (string | symbol)[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : WritableStream
    +on(eventName: string | symbol, listener: Function) : WritableStream
    +once(eventName: string | symbol, listener: Function) : WritableStream
    +prependListener(eventName: string | symbol, listener: Function) : WritableStream
    +prependOnceListener(eventName: string | symbol, listener: Function) : WritableStream
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : WritableStream
    +removeListener(eventName: string | symbol, listener: Function) : WritableStream
    +setMaxListeners(n: number) : WritableStream
    +write(buffer: string | Uint8Array, cb: Function) : boolean
    +write(str: string, encoding: BufferEncoding, cb: Function) : boolean
}
"WritableStream" <|.. "Writable"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>