<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="3648px" preserveAspectRatio="none" style="width:658px;height:3648px;background:#00000000;" version="1.1" viewBox="0 0 658 3648" width="658px" zoomAndPan="magnify"><defs><filter height="300%" id="f2fkdmlt3ccyj" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[a121895fb83f86767acf88f1593932fd]
class ClientRequest--><rect codeLine="4" fill="#FEFECE" filter="url(#f2fkdmlt3ccyj)" height="2120.8125" id="ClientRequest" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="1514"/><ellipse cx="281.75" cy="1530" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M284.2231,1536.1431 Q283.6421,1536.4419 283.0029,1536.5913 Q282.3638,1536.7407 281.6582,1536.7407 Q279.1514,1536.7407 277.8315,1535.0889 Q276.5117,1533.437 276.5117,1530.3159 Q276.5117,1527.1865 277.8315,1525.5347 Q279.1514,1523.8828 281.6582,1523.8828 Q282.3638,1523.8828 283.0112,1524.0322 Q283.6587,1524.1816 284.2231,1524.4805 L284.2231,1527.2031 Q283.5923,1526.6221 282.9988,1526.3523 Q282.4053,1526.0825 281.7744,1526.0825 Q280.4297,1526.0825 279.7449,1527.1492 Q279.0601,1528.2158 279.0601,1530.3159 Q279.0601,1532.4077 279.7449,1533.4744 Q280.4297,1534.541 281.7744,1534.541 Q282.4053,1534.541 282.9988,1534.2712 Q283.5923,1534.0015 284.2231,1533.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="79" x="302.25" y="1534.5352">ClientRequest</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="1546" y2="1546"/><ellipse cx="18" cy="1557" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="1560.6348">aborted : boolean</text><ellipse cx="18" cy="1569.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="1573.5898">captureRejections : boolean</text><ellipse cx="18" cy="1582.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="1586.5449">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="1595.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="27" y="1599.5">chunkedEncoding : boolean</text><ellipse cx="18" cy="1608.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="1612.4551">connection : null | Socket</text><ellipse cx="18" cy="1621.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="1625.4102">defaultMaxListeners : number</text><ellipse cx="18" cy="1634.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="1638.3652">destroyed : boolean</text><ellipse cx="18" cy="1647.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="1651.3203">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="1660.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="27" y="1664.2754">finished : boolean</text><ellipse cx="18" cy="1673.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="27" y="1677.2305">headersSent : boolean</text><ellipse cx="18" cy="1686.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="27" y="1690.1855">host : string</text><ellipse cx="18" cy="1699.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="151" x="27" y="1703.1406">maxHeadersCount : number</text><ellipse cx="18" cy="1712.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="27" y="1716.0957">method : string</text><ellipse cx="18" cy="1725.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="27" y="1729.0508">path : string</text><ellipse cx="18" cy="1738.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="27" y="1742.0059">protocol : string</text><ellipse cx="18" cy="1751.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="27" y="1754.9609">req : IncomingMessage</text><ellipse cx="18" cy="1764.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="27" y="1767.916">reusedSocket : boolean</text><ellipse cx="18" cy="1777.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="27" y="1780.8711">sendDate : boolean</text><ellipse cx="18" cy="1790.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="27" y="1793.8262">shouldKeepAlive : boolean</text><ellipse cx="18" cy="1803.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="27" y="1806.7813">socket : null | Socket</text><ellipse cx="18" cy="1816.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="27" y="1819.7363">useChunkedEncodingByDefault : boolean</text><ellipse cx="18" cy="1829.0566" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="1832.6914">writable : boolean</text><ellipse cx="18" cy="1842.0117" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="27" y="1845.6465">writableCorked : number</text><ellipse cx="18" cy="1854.9668" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="27" y="1858.6016">writableEnded : boolean</text><ellipse cx="18" cy="1867.9219" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="1871.5566">writableFinished : boolean</text><ellipse cx="18" cy="1880.877" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="27" y="1884.5117">writableHighWaterMark : number</text><ellipse cx="18" cy="1893.832" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="27" y="1897.4668">writableLength : number</text><ellipse cx="18" cy="1906.7871" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="1910.4219">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="1916.7422" y2="1916.7422"/><ellipse cx="18" cy="1927.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="69" x="27" y="1931.377">abort() : void</text><ellipse cx="18" cy="1940.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="1944.332">addListener(event: "abort", listener: Function) : ClientRequest</text><ellipse cx="18" cy="1953.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="339" x="27" y="1957.2871">addListener(event: "connect", listener: Function) : ClientRequest</text><ellipse cx="18" cy="1966.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="1970.2422">addListener(event: "continue", listener: Function) : ClientRequest</text><ellipse cx="18" cy="1979.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="27" y="1983.1973">addListener(event: "information", listener: Function) : ClientRequest</text><ellipse cx="18" cy="1992.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="1996.1523">addListener(event: "response", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2005.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="27" y="2009.1074">addListener(event: "socket", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2018.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="27" y="2022.0625">addListener(event: "timeout", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2031.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="27" y="2035.0176">addListener(event: "upgrade", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2044.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="27" y="2047.9727">addListener(event: "close", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2057.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="27" y="2060.9277">addListener(event: "drain", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2070.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="27" y="2073.8828">addListener(event: "error", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2083.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="27" y="2086.8379">addListener(event: "finish", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2096.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="27" y="2099.793">addListener(event: "pipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2109.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="27" y="2112.748">addListener(event: "unpipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2122.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="27" y="2125.7031">addListener(event: string | symbol, listener: Function) : ClientRequest</text><ellipse cx="18" cy="2135.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="414" x="27" y="2138.6582">addTrailers(headers: OutgoingHttpHeaders | readonly [string, string][]) : void</text><ellipse cx="18" cy="2147.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="27" y="2151.6133">cork() : void</text><ellipse cx="18" cy="2160.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="2164.5684">destroy(error: Error) : ClientRequest</text><ellipse cx="18" cy="2173.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="2177.5234">emit(event: "close") : boolean</text><ellipse cx="18" cy="2186.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="2190.4785">emit(event: "drain") : boolean</text><ellipse cx="18" cy="2199.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="2203.4336">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="2212.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="27" y="2216.3887">emit(event: "finish") : boolean</text><ellipse cx="18" cy="2225.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="27" y="2229.3438">emit(event: "pipe", src: Readable) : boolean</text><ellipse cx="18" cy="2238.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="27" y="2242.2988">emit(event: "unpipe", src: Readable) : boolean</text><ellipse cx="18" cy="2251.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="2255.2539">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="2264.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="177" x="27" y="2268.209">end(cb: Function) : ClientRequest</text><ellipse cx="18" cy="2277.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="27" y="2281.1641">end(chunk: any, cb: Function) : ClientRequest</text><ellipse cx="18" cy="2290.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="385" x="27" y="2294.1191">end(chunk: any, encoding: BufferEncoding, cb: Function) : ClientRequest</text><ellipse cx="18" cy="2303.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="2307.0742">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="2316.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="27" y="2320.0293">flushHeaders() : void</text><ellipse cx="18" cy="2329.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="2332.9844">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="2342.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="27" y="2345.9395">getHeader(name: string) : undefined | string | number | string[]</text><ellipse cx="18" cy="2355.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="27" y="2358.8945">getHeaderNames() : string[]</text><ellipse cx="18" cy="2368.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="27" y="2371.8496">getHeaders() : OutgoingHttpHeaders</text><ellipse cx="18" cy="2381.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="2384.8047">getMaxListeners() : number</text><ellipse cx="18" cy="2394.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="27" y="2397.7598">getRawHeaderNames() : string[]</text><ellipse cx="18" cy="2407.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="27" y="2410.7148">hasHeader(name: string) : boolean</text><ellipse cx="18" cy="2420.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="2423.6699">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="2432.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="2436.625">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="2445.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="2449.5801">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="2458.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="27" y="2462.5352">off(eventName: string | symbol, listener: Function) : ClientRequest</text><ellipse cx="18" cy="2471.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="27" y="2475.4902">on(event: "abort", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2484.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="27" y="2488.4453">on(event: "connect", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2497.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="27" y="2501.4004">on(event: "continue", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2510.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="2514.3555">on(event: "information", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2523.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="27" y="2527.3105">on(event: "response", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2536.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="27" y="2540.2656">on(event: "socket", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2549.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="27" y="2553.2207">on(event: "timeout", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2562.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="2566.1758">on(event: "upgrade", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2575.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="275" x="27" y="2579.1309">on(event: "close", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2588.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="275" x="27" y="2592.0859">on(event: "drain", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2601.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="275" x="27" y="2605.041">on(event: "error", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2614.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="27" y="2617.9961">on(event: "finish", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2627.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="27" y="2630.9512">on(event: "pipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2640.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="27" y="2643.9063">on(event: "unpipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2653.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="27" y="2656.8613">on(event: string | symbol, listener: Function) : ClientRequest</text><ellipse cx="18" cy="2666.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="2669.8164">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="2679.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="27" y="2682.7715">once(event: "abort", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2692.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="27" y="2695.7266">once(event: "connect", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2705.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="27" y="2708.6816">once(event: "continue", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2718.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="322" x="27" y="2721.6367">once(event: "information", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2730.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="27" y="2734.5918">once(event: "response", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2743.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="27" y="2747.5469">once(event: "socket", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2756.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="27" y="2760.502">once(event: "timeout", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2769.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="304" x="27" y="2773.457">once(event: "upgrade", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2782.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="27" y="2786.4121">once(event: "close", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2795.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="27" y="2799.3672">once(event: "drain", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2808.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="27" y="2812.3223">once(event: "error", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2821.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="27" y="2825.2773">once(event: "finish", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2834.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="27" y="2838.2324">once(event: "pipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2847.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="27" y="2851.1875">once(event: "unpipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2860.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="332" x="27" y="2864.1426">once(event: string | symbol, listener: Function) : ClientRequest</text><ellipse cx="18" cy="2873.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="2877.0977">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="2886.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="2890.0527">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="2899.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="27" y="2903.0078">onSocket(socket: Socket) : void</text><ellipse cx="18" cy="2912.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="2915.9629">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="2925.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="350" x="27" y="2928.918">prependListener(event: "abort", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2938.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="364" x="27" y="2941.873">prependListener(event: "connect", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2951.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="27" y="2954.8281">prependListener(event: "continue", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2964.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="384" x="27" y="2967.7832">prependListener(event: "information", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2977.1035" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="371" x="27" y="2980.7383">prependListener(event: "response", listener: Function) : ClientRequest</text><ellipse cx="18" cy="2990.0586" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="27" y="2993.6934">prependListener(event: "socket", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3003.0137" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="27" y="3006.6484">prependListener(event: "timeout", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3015.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="3019.6035">prependListener(event: "upgrade", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3028.9238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="27" y="3032.5586">prependListener(event: "close", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3041.8789" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="27" y="3045.5137">prependListener(event: "drain", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3054.834" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="27" y="3058.4688">prependListener(event: "error", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3067.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="27" y="3071.4238">prependListener(event: "finish", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3080.7441" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="27" y="3084.3789">prependListener(event: "pipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3093.6992" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="27" y="3097.334">prependListener(event: "unpipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3106.6543" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="394" x="27" y="3110.2891">prependListener(event: string | symbol, listener: Function) : ClientRequest</text><ellipse cx="18" cy="3119.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="378" x="27" y="3123.2441">prependOnceListener(event: "abort", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3132.5645" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="27" y="3136.1992">prependOnceListener(event: "connect", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3145.5195" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="27" y="3149.1543">prependOnceListener(event: "continue", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3158.4746" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="27" y="3162.1094">prependOnceListener(event: "information", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3171.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="399" x="27" y="3175.0645">prependOnceListener(event: "response", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3184.3848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="384" x="27" y="3188.0195">prependOnceListener(event: "socket", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3197.3398" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="27" y="3200.9746">prependOnceListener(event: "timeout", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3210.2949" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="394" x="27" y="3213.9297">prependOnceListener(event: "upgrade", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3223.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="377" x="27" y="3226.8848">prependOnceListener(event: "close", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3236.2051" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="377" x="27" y="3239.8398">prependOnceListener(event: "drain", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3249.1602" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="377" x="27" y="3252.7949">prependOnceListener(event: "error", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3262.1152" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="379" x="27" y="3265.75">prependOnceListener(event: "finish", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3275.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="27" y="3278.7051">prependOnceListener(event: "pipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3288.0254" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="27" y="3291.6602">prependOnceListener(event: "unpipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3300.9805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="422" x="27" y="3304.6152">prependOnceListener(event: string | symbol, listener: Function) : ClientRequest</text><ellipse cx="18" cy="3313.9355" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="3317.5703">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="3326.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="3330.5254">removeAllListeners(event: string | symbol) : ClientRequest</text><ellipse cx="18" cy="3339.8457" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="27" y="3343.4805">removeHeader(name: string) : void</text><ellipse cx="18" cy="3352.8008" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="27" y="3356.4355">removeListener(event: "close", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3365.7559" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="27" y="3369.3906">removeListener(event: "drain", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3378.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="27" y="3382.3457">removeListener(event: "error", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3391.666" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="3395.3008">removeListener(event: "finish", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3404.6211" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="339" x="27" y="3408.2559">removeListener(event: "pipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3417.5762" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="27" y="3421.2109">removeListener(event: "unpipe", listener: Function) : ClientRequest</text><ellipse cx="18" cy="3430.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="389" x="27" y="3434.166">removeListener(event: string | symbol, listener: Function) : ClientRequest</text><ellipse cx="18" cy="3443.4863" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="27" y="3447.1211">setDefaultEncoding(encoding: BufferEncoding) : ClientRequest</text><ellipse cx="18" cy="3456.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="436" x="27" y="3460.0762">setHeader(name: string, value: string | number | readonly string[]) : ClientRequest</text><ellipse cx="18" cy="3469.3965" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="3473.0313">setMaxListeners(n: number) : ClientRequest</text><ellipse cx="18" cy="3482.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="27" y="3485.9863">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="18" cy="3495.3066" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="192" x="27" y="3498.9414">setNoDelay(noDelay: boolean) : void</text><ellipse cx="18" cy="3508.2617" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="339" x="27" y="3511.8965">setSocketKeepAlive(enable: boolean, initialDelay: number) : void</text><ellipse cx="18" cy="3521.2168" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="342" x="27" y="3524.8516">setTimeout(timeout: number, callback: Function) : ClientRequest</text><ellipse cx="18" cy="3534.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="27" y="3537.8066">uncork() : void</text><ellipse cx="18" cy="3547.127" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="3550.7617">write(chunk: any, callback: Function) : boolean</text><ellipse cx="18" cy="3560.082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="27" y="3563.7168">write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean</text><ellipse cx="18" cy="3573.0371" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="3576.6719">_construct(callback: Function) : void</text><ellipse cx="18" cy="3585.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="3589.627">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="3598.9473" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="27" y="3602.582">_final(callback: Function) : void</text><ellipse cx="18" cy="3611.9023" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="27" y="3615.5371">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="18" cy="3624.8574" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="27" y="3628.4922">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[e659cb07397b6e885205c421089cc64a]
class OutgoingMessage--><rect codeLine="166" fill="#FEFECE" filter="url(#f2fkdmlt3ccyj)" height="1447.1484" id="OutgoingMessage" style="stroke:#A80036;stroke-width:1.5;" width="637" x="7" y="7"/><ellipse cx="270.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M273.2231,29.1431 Q272.6421,29.4419 272.0029,29.5913 Q271.3638,29.7407 270.6582,29.7407 Q268.1514,29.7407 266.8315,28.0889 Q265.5117,26.437 265.5117,23.3159 Q265.5117,20.1865 266.8315,18.5347 Q268.1514,16.8828 270.6582,16.8828 Q271.3638,16.8828 272.0112,17.0322 Q272.6587,17.1816 273.2231,17.4805 L273.2231,20.2031 Q272.5923,19.6221 271.9988,19.3523 Q271.4053,19.0825 270.7744,19.0825 Q269.4297,19.0825 268.7449,20.1492 Q268.0601,21.2158 268.0601,23.3159 Q268.0601,25.4077 268.7449,26.4744 Q269.4297,27.541 270.7744,27.541 Q271.4053,27.541 271.9988,27.2712 Q272.5923,27.0015 273.2231,26.4204 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="101" x="291.25" y="27.5352">OutgoingMessage</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="39" y2="39"/><ellipse cx="18" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="148" x="27" y="53.6348">captureRejections : boolean</text><ellipse cx="18" cy="62.9551" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="304" x="27" y="66.5898">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="18" cy="75.9102" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="27" y="79.5449">chunkedEncoding : boolean</text><ellipse cx="18" cy="88.8652" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="27" y="92.5">connection : null | Socket</text><ellipse cx="18" cy="101.8203" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="159" x="27" y="105.4551">defaultMaxListeners : number</text><ellipse cx="18" cy="114.7754" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="27" y="118.4102">destroyed : boolean</text><ellipse cx="18" cy="127.7305" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="186" x="27" y="131.3652">errorMonitor : typeof errorMonitor</text><ellipse cx="18" cy="140.6855" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="27" y="144.3203">finished : boolean</text><ellipse cx="18" cy="153.6406" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="27" y="157.2754">headersSent : boolean</text><ellipse cx="18" cy="166.5957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="27" y="170.2305">req : IncomingMessage</text><ellipse cx="18" cy="179.5508" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="27" y="183.1855">sendDate : boolean</text><ellipse cx="18" cy="192.5059" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="27" y="196.1406">shouldKeepAlive : boolean</text><ellipse cx="18" cy="205.4609" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="27" y="209.0957">socket : null | Socket</text><ellipse cx="18" cy="218.416" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="27" y="222.0508">useChunkedEncodingByDefault : boolean</text><ellipse cx="18" cy="231.3711" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="27" y="235.0059">writable : boolean</text><ellipse cx="18" cy="244.3262" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="27" y="247.9609">writableCorked : number</text><ellipse cx="18" cy="257.2813" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="27" y="260.916">writableEnded : boolean</text><ellipse cx="18" cy="270.2363" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="273.8711">writableFinished : boolean</text><ellipse cx="18" cy="283.1914" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="27" y="286.8262">writableHighWaterMark : number</text><ellipse cx="18" cy="296.1465" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="27" y="299.7813">writableLength : number</text><ellipse cx="18" cy="309.1016" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="312.7363">writableObjectMode : boolean</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="643" y1="319.0566" y2="319.0566"/><ellipse cx="18" cy="330.0566" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="347" x="27" y="333.6914">addListener(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="343.0117" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="347" x="27" y="346.6465">addListener(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="355.9668" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="347" x="27" y="359.6016">addListener(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="368.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="27" y="372.5566">addListener(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="381.877" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="342" x="27" y="385.5117">addListener(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="394.832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="27" y="398.4668">addListener(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="407.7871" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="27" y="411.4219">addListener(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="420.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="414" x="27" y="424.377">addTrailers(headers: OutgoingHttpHeaders | readonly [string, string][]) : void</text><ellipse cx="18" cy="433.6973" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="27" y="437.332">cork() : void</text><ellipse cx="18" cy="446.6523" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="27" y="450.2871">destroy(error: Error) : OutgoingMessage</text><ellipse cx="18" cy="459.6074" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="463.2422">emit(event: "close") : boolean</text><ellipse cx="18" cy="472.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="27" y="476.1973">emit(event: "drain") : boolean</text><ellipse cx="18" cy="485.5176" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="27" y="489.1523">emit(event: "error", err: Error) : boolean</text><ellipse cx="18" cy="498.4727" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="27" y="502.1074">emit(event: "finish") : boolean</text><ellipse cx="18" cy="511.4277" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="27" y="515.0625">emit(event: "pipe", src: Readable) : boolean</text><ellipse cx="18" cy="524.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="27" y="528.0176">emit(event: "unpipe", src: Readable) : boolean</text><ellipse cx="18" cy="537.3379" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="540.9727">emit(event: string | symbol, args: any[]) : boolean</text><ellipse cx="18" cy="550.293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="27" y="553.9277">end(cb: Function) : OutgoingMessage</text><ellipse cx="18" cy="563.248" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="566.8828">end(chunk: any, cb: Function) : OutgoingMessage</text><ellipse cx="18" cy="576.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="408" x="27" y="579.8379">end(chunk: any, encoding: BufferEncoding, cb: Function) : OutgoingMessage</text><ellipse cx="18" cy="589.1582" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="592.793">eventNames() : (string | symbol)[]</text><ellipse cx="18" cy="602.1133" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="27" y="605.748">flushHeaders() : void</text><ellipse cx="18" cy="615.0684" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="500" x="27" y="618.7031">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="18" cy="628.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="27" y="631.6582">getHeader(name: string) : undefined | string | number | string[]</text><ellipse cx="18" cy="640.9785" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="27" y="644.6133">getHeaderNames() : string[]</text><ellipse cx="18" cy="653.9336" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="27" y="657.5684">getHeaders() : OutgoingHttpHeaders</text><ellipse cx="18" cy="666.8887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="670.5234">getMaxListeners() : number</text><ellipse cx="18" cy="679.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="27" y="683.4785">hasHeader(name: string) : boolean</text><ellipse cx="18" cy="692.7988" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="27" y="696.4336">listenerCount(eventName: string | symbol) : number</text><ellipse cx="18" cy="705.7539" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="395" x="27" y="709.3887">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="18" cy="718.709" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="27" y="722.3438">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="731.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="374" x="27" y="735.2988">off(eventName: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="744.6191" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="748.2539">on(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="757.5742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="761.209">on(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="770.5293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="27" y="774.1641">on(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="783.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="27" y="787.1191">on(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="796.4395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="27" y="800.0742">on(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="809.3945" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="27" y="813.0293">on(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="822.3496" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="825.9844">on(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="835.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="587" x="27" y="838.9395">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="18" cy="848.2598" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="851.8945">once(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="861.2148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="864.8496">once(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="874.1699" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="27" y="877.8047">once(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="887.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="27" y="890.7598">once(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="900.0801" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="27" y="903.7148">once(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="913.0352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="27" y="916.6699">once(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="925.9902" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="929.625">once(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="938.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="611" x="27" y="942.5801">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="951.9004" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="560" x="27" y="955.5352">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="18" cy="964.8555" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="968.4902">pipe&lt;T&gt;(destination: T, options: Object) : T</text><ellipse cx="18" cy="977.8105" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="27" y="981.4453">prependListener(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="990.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="27" y="994.4004">prependListener(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1003.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="372" x="27" y="1007.3555">prependListener(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1016.6758" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="374" x="27" y="1020.3105">prependListener(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1029.6309" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="1033.2656">prependListener(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1042.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="381" x="27" y="1046.2207">prependListener(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1055.541" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="27" y="1059.1758">prependListener(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1068.4961" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="400" x="27" y="1072.1309">prependOnceListener(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1081.4512" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="400" x="27" y="1085.0859">prependOnceListener(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1094.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="400" x="27" y="1098.041">prependOnceListener(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1107.3613" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="402" x="27" y="1110.9961">prependOnceListener(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1120.3164" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="395" x="27" y="1123.9512">prependOnceListener(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1133.2715" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="409" x="27" y="1136.9063">prependOnceListener(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1146.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="445" x="27" y="1149.8613">prependOnceListener(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1159.1816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="27" y="1162.8164">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="18" cy="1172.1367" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="27" y="1175.7715">removeAllListeners(event: string | symbol) : OutgoingMessage</text><ellipse cx="18" cy="1185.0918" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="27" y="1188.7266">removeHeader(name: string) : void</text><ellipse cx="18" cy="1198.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="1201.6816">removeListener(event: "close", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1211.002" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="1214.6367">removeListener(event: "drain", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1223.957" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="1227.5918">removeListener(event: "error", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1236.9121" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="27" y="1240.5469">removeListener(event: "finish", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1249.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="27" y="1253.502">removeListener(event: "pipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1262.8223" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="27" y="1266.457">removeListener(event: "unpipe", listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1275.7773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="27" y="1279.4121">removeListener(event: string | symbol, listener: Function) : OutgoingMessage</text><ellipse cx="18" cy="1288.7324" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="356" x="27" y="1292.3672">setDefaultEncoding(encoding: BufferEncoding) : OutgoingMessage</text><ellipse cx="18" cy="1301.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="459" x="27" y="1305.3223">setHeader(name: string, value: string | number | readonly string[]) : OutgoingMessage</text><ellipse cx="18" cy="1314.6426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="27" y="1318.2773">setMaxListeners(n: number) : OutgoingMessage</text><ellipse cx="18" cy="1327.5977" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="447" x="27" y="1331.2324">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="18" cy="1340.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="27" y="1344.1875">setTimeout(msecs: number, callback: Function) : OutgoingMessage</text><ellipse cx="18" cy="1353.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="78" x="27" y="1357.1426">uncork() : void</text><ellipse cx="18" cy="1366.4629" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="1370.0977">write(chunk: any, callback: Function) : boolean</text><ellipse cx="18" cy="1379.418" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="27" y="1383.0527">write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean</text><ellipse cx="18" cy="1392.373" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="1396.0078">_construct(callback: Function) : void</text><ellipse cx="18" cy="1405.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="1408.9629">_destroy(error: null | Error, callback: Function) : void</text><ellipse cx="18" cy="1418.2832" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="27" y="1421.918">_final(callback: Function) : void</text><ellipse cx="18" cy="1431.2383" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="27" y="1434.873">_write(chunk: any, encoding: BufferEncoding, callback: Function) : void</text><ellipse cx="18" cy="1444.1934" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="27" y="1447.8281">_writev(chunks: Object[], callback: Function) : void</text><!--MD5=[68565e79af15f9a1434ccb3f1786a2ba]
reverse link OutgoingMessage to ClientRequest--><path codeLine="276" d="M325.5,1474.66 C325.5,1487.7 325.5,1500.78 325.5,1513.91 " fill="none" id="OutgoingMessage-backto-ClientRequest" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="318.5,1474.22,325.5,1454.22,332.5,1474.22,318.5,1474.22" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[40e48ce151d02bbb27cfaf48f7a8a400]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "ClientRequest" {
    +aborted : boolean
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    +chunkedEncoding : boolean
    +connection : null | Socket
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +finished : boolean
    +headersSent : boolean
    +host : string
    +maxHeadersCount : number
    +method : string
    +path : string
    +protocol : string
    +req : IncomingMessage
    +reusedSocket : boolean
    +sendDate : boolean
    +shouldKeepAlive : boolean
    +socket : null | Socket
    +useChunkedEncodingByDefault : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +abort() : void
    +addListener(event: "abort", listener: Function) : ClientRequest
    +addListener(event: "connect", listener: Function) : ClientRequest
    +addListener(event: "continue", listener: Function) : ClientRequest
    +addListener(event: "information", listener: Function) : ClientRequest
    +addListener(event: "response", listener: Function) : ClientRequest
    +addListener(event: "socket", listener: Function) : ClientRequest
    +addListener(event: "timeout", listener: Function) : ClientRequest
    +addListener(event: "upgrade", listener: Function) : ClientRequest
    +addListener(event: "close", listener: Function) : ClientRequest
    +addListener(event: "drain", listener: Function) : ClientRequest
    +addListener(event: "error", listener: Function) : ClientRequest
    +addListener(event: "finish", listener: Function) : ClientRequest
    +addListener(event: "pipe", listener: Function) : ClientRequest
    +addListener(event: "unpipe", listener: Function) : ClientRequest
    +addListener(event: string | symbol, listener: Function) : ClientRequest
    +addTrailers(headers: OutgoingHttpHeaders | readonly [string, string][]) : void
    +cork() : void
    +destroy(error: Error) : ClientRequest
    +emit(event: "close") : boolean
    +emit(event: "drain") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "finish") : boolean
    +emit(event: "pipe", src: Readable) : boolean
    +emit(event: "unpipe", src: Readable) : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : ClientRequest
    +end(chunk: any, cb: Function) : ClientRequest
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : ClientRequest
    +eventNames() : (string | symbol)[]
    +flushHeaders() : void
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getHeader(name: string) : undefined | string | number | string[]
    +getHeaderNames() : string[]
    +getHeaders() : OutgoingHttpHeaders
    +getMaxListeners() : number
    +getRawHeaderNames() : string[]
    +hasHeader(name: string) : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : ClientRequest
    +on(event: "abort", listener: Function) : ClientRequest
    +on(event: "connect", listener: Function) : ClientRequest
    +on(event: "continue", listener: Function) : ClientRequest
    +on(event: "information", listener: Function) : ClientRequest
    +on(event: "response", listener: Function) : ClientRequest
    +on(event: "socket", listener: Function) : ClientRequest
    +on(event: "timeout", listener: Function) : ClientRequest
    +on(event: "upgrade", listener: Function) : ClientRequest
    +on(event: "close", listener: Function) : ClientRequest
    +on(event: "drain", listener: Function) : ClientRequest
    +on(event: "error", listener: Function) : ClientRequest
    +on(event: "finish", listener: Function) : ClientRequest
    +on(event: "pipe", listener: Function) : ClientRequest
    +on(event: "unpipe", listener: Function) : ClientRequest
    +on(event: string | symbol, listener: Function) : ClientRequest
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "abort", listener: Function) : ClientRequest
    +once(event: "connect", listener: Function) : ClientRequest
    +once(event: "continue", listener: Function) : ClientRequest
    +once(event: "information", listener: Function) : ClientRequest
    +once(event: "response", listener: Function) : ClientRequest
    +once(event: "socket", listener: Function) : ClientRequest
    +once(event: "timeout", listener: Function) : ClientRequest
    +once(event: "upgrade", listener: Function) : ClientRequest
    +once(event: "close", listener: Function) : ClientRequest
    +once(event: "drain", listener: Function) : ClientRequest
    +once(event: "error", listener: Function) : ClientRequest
    +once(event: "finish", listener: Function) : ClientRequest
    +once(event: "pipe", listener: Function) : ClientRequest
    +once(event: "unpipe", listener: Function) : ClientRequest
    +once(event: string | symbol, listener: Function) : ClientRequest
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +onSocket(socket: Socket) : void
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "abort", listener: Function) : ClientRequest
    +prependListener(event: "connect", listener: Function) : ClientRequest
    +prependListener(event: "continue", listener: Function) : ClientRequest
    +prependListener(event: "information", listener: Function) : ClientRequest
    +prependListener(event: "response", listener: Function) : ClientRequest
    +prependListener(event: "socket", listener: Function) : ClientRequest
    +prependListener(event: "timeout", listener: Function) : ClientRequest
    +prependListener(event: "upgrade", listener: Function) : ClientRequest
    +prependListener(event: "close", listener: Function) : ClientRequest
    +prependListener(event: "drain", listener: Function) : ClientRequest
    +prependListener(event: "error", listener: Function) : ClientRequest
    +prependListener(event: "finish", listener: Function) : ClientRequest
    +prependListener(event: "pipe", listener: Function) : ClientRequest
    +prependListener(event: "unpipe", listener: Function) : ClientRequest
    +prependListener(event: string | symbol, listener: Function) : ClientRequest
    +prependOnceListener(event: "abort", listener: Function) : ClientRequest
    +prependOnceListener(event: "connect", listener: Function) : ClientRequest
    +prependOnceListener(event: "continue", listener: Function) : ClientRequest
    +prependOnceListener(event: "information", listener: Function) : ClientRequest
    +prependOnceListener(event: "response", listener: Function) : ClientRequest
    +prependOnceListener(event: "socket", listener: Function) : ClientRequest
    +prependOnceListener(event: "timeout", listener: Function) : ClientRequest
    +prependOnceListener(event: "upgrade", listener: Function) : ClientRequest
    +prependOnceListener(event: "close", listener: Function) : ClientRequest
    +prependOnceListener(event: "drain", listener: Function) : ClientRequest
    +prependOnceListener(event: "error", listener: Function) : ClientRequest
    +prependOnceListener(event: "finish", listener: Function) : ClientRequest
    +prependOnceListener(event: "pipe", listener: Function) : ClientRequest
    +prependOnceListener(event: "unpipe", listener: Function) : ClientRequest
    +prependOnceListener(event: string | symbol, listener: Function) : ClientRequest
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : ClientRequest
    +removeHeader(name: string) : void
    +removeListener(event: "close", listener: Function) : ClientRequest
    +removeListener(event: "drain", listener: Function) : ClientRequest
    +removeListener(event: "error", listener: Function) : ClientRequest
    +removeListener(event: "finish", listener: Function) : ClientRequest
    +removeListener(event: "pipe", listener: Function) : ClientRequest
    +removeListener(event: "unpipe", listener: Function) : ClientRequest
    +removeListener(event: string | symbol, listener: Function) : ClientRequest
    +setDefaultEncoding(encoding: BufferEncoding) : ClientRequest
    +setHeader(name: string, value: string | number | readonly string[]) : ClientRequest
    +setMaxListeners(n: number) : ClientRequest
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setNoDelay(noDelay: boolean) : void
    +setSocketKeepAlive(enable: boolean, initialDelay: number) : void
    +setTimeout(timeout: number, callback: Function) : ClientRequest
    +uncork() : void
    +write(chunk: any, callback: Function) : boolean
    +write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
class "OutgoingMessage" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    +chunkedEncoding : boolean
    +connection : null | Socket
    {static} +defaultMaxListeners : number
    +destroyed : boolean
    {static} +errorMonitor : typeof errorMonitor
    +finished : boolean
    +headersSent : boolean
    +req : IncomingMessage
    +sendDate : boolean
    +shouldKeepAlive : boolean
    +socket : null | Socket
    +useChunkedEncodingByDefault : boolean
    +writable : boolean
    +writableCorked : number
    +writableEnded : boolean
    +writableFinished : boolean
    +writableHighWaterMark : number
    +writableLength : number
    +writableObjectMode : boolean
    +addListener(event: "close", listener: Function) : OutgoingMessage
    +addListener(event: "drain", listener: Function) : OutgoingMessage
    +addListener(event: "error", listener: Function) : OutgoingMessage
    +addListener(event: "finish", listener: Function) : OutgoingMessage
    +addListener(event: "pipe", listener: Function) : OutgoingMessage
    +addListener(event: "unpipe", listener: Function) : OutgoingMessage
    +addListener(event: string | symbol, listener: Function) : OutgoingMessage
    +addTrailers(headers: OutgoingHttpHeaders | readonly [string, string][]) : void
    +cork() : void
    +destroy(error: Error) : OutgoingMessage
    +emit(event: "close") : boolean
    +emit(event: "drain") : boolean
    +emit(event: "error", err: Error) : boolean
    +emit(event: "finish") : boolean
    +emit(event: "pipe", src: Readable) : boolean
    +emit(event: "unpipe", src: Readable) : boolean
    +emit(event: string | symbol, args: any[]) : boolean
    +end(cb: Function) : OutgoingMessage
    +end(chunk: any, cb: Function) : OutgoingMessage
    +end(chunk: any, encoding: BufferEncoding, cb: Function) : OutgoingMessage
    +eventNames() : (string | symbol)[]
    +flushHeaders() : void
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getHeader(name: string) : undefined | string | number | string[]
    +getHeaderNames() : string[]
    +getHeaders() : OutgoingHttpHeaders
    +getMaxListeners() : number
    +hasHeader(name: string) : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : OutgoingMessage
    +on(event: "close", listener: Function) : OutgoingMessage
    +on(event: "drain", listener: Function) : OutgoingMessage
    +on(event: "error", listener: Function) : OutgoingMessage
    +on(event: "finish", listener: Function) : OutgoingMessage
    +on(event: "pipe", listener: Function) : OutgoingMessage
    +on(event: "unpipe", listener: Function) : OutgoingMessage
    +on(event: string | symbol, listener: Function) : OutgoingMessage
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(event: "close", listener: Function) : OutgoingMessage
    +once(event: "drain", listener: Function) : OutgoingMessage
    +once(event: "error", listener: Function) : OutgoingMessage
    +once(event: "finish", listener: Function) : OutgoingMessage
    +once(event: "pipe", listener: Function) : OutgoingMessage
    +once(event: "unpipe", listener: Function) : OutgoingMessage
    +once(event: string | symbol, listener: Function) : OutgoingMessage
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +pipe<T>(destination: T, options: Object) : T
    +prependListener(event: "close", listener: Function) : OutgoingMessage
    +prependListener(event: "drain", listener: Function) : OutgoingMessage
    +prependListener(event: "error", listener: Function) : OutgoingMessage
    +prependListener(event: "finish", listener: Function) : OutgoingMessage
    +prependListener(event: "pipe", listener: Function) : OutgoingMessage
    +prependListener(event: "unpipe", listener: Function) : OutgoingMessage
    +prependListener(event: string | symbol, listener: Function) : OutgoingMessage
    +prependOnceListener(event: "close", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "drain", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "error", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "finish", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "pipe", listener: Function) : OutgoingMessage
    +prependOnceListener(event: "unpipe", listener: Function) : OutgoingMessage
    +prependOnceListener(event: string | symbol, listener: Function) : OutgoingMessage
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : OutgoingMessage
    +removeHeader(name: string) : void
    +removeListener(event: "close", listener: Function) : OutgoingMessage
    +removeListener(event: "drain", listener: Function) : OutgoingMessage
    +removeListener(event: "error", listener: Function) : OutgoingMessage
    +removeListener(event: "finish", listener: Function) : OutgoingMessage
    +removeListener(event: "pipe", listener: Function) : OutgoingMessage
    +removeListener(event: "unpipe", listener: Function) : OutgoingMessage
    +removeListener(event: string | symbol, listener: Function) : OutgoingMessage
    +setDefaultEncoding(encoding: BufferEncoding) : OutgoingMessage
    +setHeader(name: string, value: string | number | readonly string[]) : OutgoingMessage
    +setMaxListeners(n: number) : OutgoingMessage
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setTimeout(msecs: number, callback: Function) : OutgoingMessage
    +uncork() : void
    +write(chunk: any, callback: Function) : boolean
    +write(chunk: any, encoding: BufferEncoding, callback: Function) : boolean
    +_construct(callback: Function) : void
    +_destroy(error: null | Error, callback: Function) : void
    +_final(callback: Function) : void
    +_write(chunk: any, encoding: BufferEncoding, callback: Function) : void
    +_writev(chunks: Object[], callback: Function) : void
}
"OutgoingMessage" <|- - "ClientRequest"
@enduml

PlantUML version 1.2021.6(Fri May 14 09:09:51 CEST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>