/// <reference types="node" />
import * as querystring from 'querystring';
export { run } from '@oclif/command';
export { default as TapjawAdapter } from './contracts/tapjaw-adapter';
export { default as TapjawConnector } from './contracts/tapjaw-connector';
export { default as TapjawAuthenticator } from './contracts/tapjaw-authenticator';
export { default as TapjawIterator } from './contracts/tapjaw-iterator';
export { default as TapjawMessage } from './contracts/tapjaw-message';
export { default as TapjawCommand } from './contracts/tapjaw-command';
export { default as TapjawHttpConnector } from './connectors/tapjaw-http-connector';
import { default as TapjawBasicAuthenticator } from './authenticators/basic-auth-authenticator';
import { default as TapjawBearerAuthenticator } from './authenticators/bearer-auth-authenticator';
import { default as TapjawOauthAuthenticator } from './authenticators/oauth-authenticator';
export { TapjawBasicAuthenticator, TapjawBearerAuthenticator, TapjawOauthAuthenticator };
import { default as TapjawApplyAuthorizationHttpHeaderWrapper } from './authenticators/wrappers/apply-authorization-http-header-wrapper';
import { default as TapjawApplyOauthAuthorizationHttpHeaderWrapper } from './authenticators/wrappers/apply-oauth-authorization-http-header-wrapper';
export { TapjawApplyAuthorizationHttpHeaderWrapper, TapjawApplyOauthAuthorizationHttpHeaderWrapper };
declare const createBasicSecurity: (username: string, password: string) => TapjawApplyAuthorizationHttpHeaderWrapper;
declare const createBearerSecurity: (token: string) => TapjawApplyAuthorizationHttpHeaderWrapper;
declare const createOAuthSecurity: (clientId: string, clientSecret: string, hostname: string, path: string, postParams: querystring.ParsedUrlQueryInput, method?: string, responseEncoding?: string) => TapjawApplyOauthAuthorizationHttpHeaderWrapper;
export { createBasicSecurity, createBearerSecurity, createOAuthSecurity, };
export { default as StdoutIterator } from './iterators/stdout-iterator';
export { default as OutputIterator } from './iterators/output-iterator';
export { default as sortObjectArrays } from './support/sort-object-arrays';
export { default as xmlToJson } from './parsers/xml-to-json';
export { default as csvToJson } from './parsers/csv-to-json';
export { default as DotEnvConfig } from './configs/dot-env-config';
export { default as TapjawMessageConfig } from './configs/tapjaw-message-config';
